{"version":3,"file":"general.js","names":["extensions","commands","helpers","getPageSource","uiautomator2","jwproxy","command","getClipboard","adb","getApiLevel","doSendKeys","params","keyevent","keycode","metastate","log","debug","back","getStrings","language","getDeviceLanguage","info","preprocessStringsMap","mapping","result","key","value","_","toPairs","isString","JSON","stringify","apkStrings","opts","app","appPackage","errorAndThrow","tmpRoot","tempDir","openDir","pullApk","err","message","fs","exists","extractStringsFromApk","rimraf","getDisplayDensity","getWindowSize","getWindowRect","width","height","x","y","executeMobile","mobileCommand","mobileCommandsMapping","shell","execEmuConsoleCommand","dragGesture","flingGesture","doubleClickGesture","clickGesture","longClickGesture","pinchCloseGesture","pinchOpenGesture","swipeGesture","scrollGesture","scrollBackTo","scroll","viewportScreenshot","viewportRect","deepLink","startLogsBroadcast","stopLogsBroadcast","acceptAlert","dismissAlert","batteryInfo","deviceInfo","getDeviceTime","changePermissions","getPermissions","performEditorAction","startScreenStreaming","stopScreenStreaming","getNotifications","listSms","type","sensorSet","pushFile","pullFile","pullFolder","deleteFile","isAppInstalled","queryAppState","activateApp","removeApp","terminateApp","installApp","clearApp","startActivity","startService","stopService","broadcast","getContexts","installMultipleApks","unlock","refreshGpsCache","startMediaProjectionRecording","isMediaProjectionRecordingRunning","stopMediaProjectionRecording","has","errors","UnknownCommandError","keys","mobileViewportScreenshot","getViewportScreenshot","mobileViewPortRect","getViewPortRect","setUrl","url","startUri","mobileDeepLink","package","pkg","waitForLaunch","openNotifications","updateSettings","settings","update","getSettings","driverSettings","serverSettings","wrapBootstrapDisconnect","wrapped","suspendChromedriverProxy","chromedriver","proxyReqRes","bind","proxyCommand","jwpProxyActive","mobileGetDeviceInfo","mobileType","text","isUndefined","typeUnicode","mobileInstallMultipleApks","isArray","apks","isEmpty","InvalidArgumentError","B","all","map","configureApp","APK_EXTENSION","options","Object","assign"],"sources":["../../../lib/commands/general.js"],"sourcesContent":["import _ from 'lodash';\nimport B from 'bluebird';\nimport { errors } from 'appium/driver';\nimport { fs, tempDir } from 'appium/support';\nimport { APK_EXTENSION } from '../extensions';\n\nlet extensions = {},\n    commands = {},\n    helpers = {};\n\ncommands.getPageSource = async function () {\n  return await this.uiautomator2.jwproxy.command('/source', 'GET', {});\n};\n\ncommands.getClipboard = async function () {\n  return (await this.adb.getApiLevel() < 29)\n    ? (await this.uiautomator2.jwproxy.command('/appium/device/get_clipboard', 'POST', {}))\n    : (await this.adb.getClipboard());\n};\n\n// Need to override this for correct unicode support\ncommands.doSendKeys = async function (params) {\n  await this.uiautomator2.jwproxy.command('/keys', 'POST', params);\n};\n\n// uiautomator2 doesn't support metastate for keyevents\ncommands.keyevent = async function (keycode, metastate) {\n  this.log.debug(`Ignoring metastate ${metastate}`);\n  await this.adb.keyevent(keycode);\n};\n\n// Use ADB since we don't have UiAutomator\ncommands.back = async function () {\n  await this.adb.keyevent(4);\n};\n\ncommands.getStrings = async function (language) {\n  if (!language) {\n    language = await this.adb.getDeviceLanguage();\n    this.log.info(`No language specified, returning strings for: ${language}`);\n  }\n\n  // Clients require the resulting mapping to have both keys\n  // and values of type string\n  const preprocessStringsMap = function (mapping) {\n    const result = {};\n    for (const [key, value] of _.toPairs(mapping)) {\n      result[key] = _.isString(value) ? value : JSON.stringify(value);\n    }\n    return result;\n  };\n\n  if (this.apkStrings[language]) {\n    // Return cached strings\n    return preprocessStringsMap(this.apkStrings[language]);\n  }\n\n  if (!this.opts.app && !this.opts.appPackage) {\n    this.log.errorAndThrow(\"One of 'app' or 'appPackage' capabilities should must be specified\");\n  }\n\n  let app = this.opts.app;\n  const tmpRoot = await tempDir.openDir();\n  try {\n    if (!app) {\n      try {\n        app = await this.adb.pullApk(this.opts.appPackage, tmpRoot);\n      } catch (err) {\n        this.log.errorAndThrow(`Failed to pull an apk from '${this.opts.appPackage}'. Original error: ${err.message}`);\n      }\n    }\n\n    if (!await fs.exists(app)) {\n      this.log.errorAndThrow(`The app at '${app}' does not exist`);\n    }\n\n    try {\n      const {apkStrings} = await this.adb.extractStringsFromApk(app, language, tmpRoot);\n      this.apkStrings[language] = apkStrings;\n      return preprocessStringsMap(apkStrings);\n    } catch (err) {\n      this.log.errorAndThrow(`Cannot extract strings from '${app}'. Original error: ${err.message}`);\n    }\n  } finally {\n    await fs.rimraf(tmpRoot);\n  }\n};\n\ncommands.getDisplayDensity = async function getDisplayDensity () {\n  return await this.uiautomator2.jwproxy.command('/appium/device/display_density', 'GET', {});\n};\n\n// memoized in constructor\ncommands.getWindowSize = async function () {\n  return await this.uiautomator2.jwproxy.command('/window/current/size', 'GET', {});\n};\n\n// For W3C\ncommands.getWindowRect = async function () {\n  const {width, height} = await this.getWindowSize();\n  return {\n    width,\n    height,\n    x: 0,\n    y: 0,\n  };\n};\n\nextensions.executeMobile = async function (mobileCommand, opts = {}) {\n  const mobileCommandsMapping = {\n    shell: 'mobileShell',\n\n    execEmuConsoleCommand: 'mobileExecEmuConsoleCommand',\n\n    dragGesture: 'mobileDragGesture',\n    flingGesture: 'mobileFlingGesture',\n    doubleClickGesture: 'mobileDoubleClickGesture',\n    clickGesture: 'mobileClickGesture',\n    longClickGesture: 'mobileLongClickGesture',\n    pinchCloseGesture: 'mobilePinchCloseGesture',\n    pinchOpenGesture: 'mobilePinchOpenGesture',\n    swipeGesture: 'mobileSwipeGesture',\n    scrollGesture: 'mobileScrollGesture',\n    scrollBackTo: 'mobileScrollBackTo',\n    scroll: 'mobileScroll',\n    viewportScreenshot: 'mobileViewportScreenshot',\n    viewportRect: 'mobileViewPortRect',\n\n    deepLink: 'mobileDeepLink',\n\n    startLogsBroadcast: 'mobileStartLogsBroadcast',\n    stopLogsBroadcast: 'mobileStopLogsBroadcast',\n\n    acceptAlert: 'mobileAcceptAlert',\n    dismissAlert: 'mobileDismissAlert',\n\n    batteryInfo: 'mobileGetBatteryInfo',\n\n    deviceInfo: 'mobileGetDeviceInfo',\n\n    getDeviceTime: 'mobileGetDeviceTime',\n\n    changePermissions: 'mobileChangePermissions',\n    getPermissions: 'mobileGetPermissions',\n\n    performEditorAction: 'mobilePerformEditorAction',\n\n    startScreenStreaming: 'mobileStartScreenStreaming',\n    stopScreenStreaming: 'mobileStopScreenStreaming',\n\n    getNotifications: 'mobileGetNotifications',\n\n    listSms: 'mobileListSms',\n\n    type: 'mobileType',\n    sensorSet: 'sensorSet',\n\n    pushFile: 'mobilePushFile',\n    pullFile: 'mobilePullFile',\n    pullFolder: 'mobilePullFolder',\n    deleteFile: 'mobileDeleteFile',\n\n    isAppInstalled: 'mobileIsAppInstalled',\n    queryAppState: 'mobileQueryAppState',\n    activateApp: 'mobileActivateApp',\n    removeApp: 'mobileRemoveApp',\n    terminateApp: 'mobileTerminateApp',\n    installApp: 'mobileInstallApp',\n    clearApp: 'mobileClearApp',\n\n    startActivity: 'mobileStartActivity',\n    startService: 'mobileStartService',\n    stopService: 'mobileStopService',\n    broadcast: 'mobileBroadcast',\n\n    getContexts: 'mobileGetContexts',\n\n    installMultipleApks: 'mobileInstallMultipleApks',\n\n    unlock: 'mobileUnlock',\n\n    refreshGpsCache: 'mobileRefreshGpsCache',\n\n    startMediaProjectionRecording: 'mobileStartMediaProjectionRecording',\n    isMediaProjectionRecordingRunning: 'mobileIsMediaProjectionRecordingRunning',\n    stopMediaProjectionRecording: 'mobileStopMediaProjectionRecording',\n  };\n\n  if (!_.has(mobileCommandsMapping, mobileCommand)) {\n    throw new errors.UnknownCommandError(`Unknown mobile command \"${mobileCommand}\". ` +\n      `Only ${_.keys(mobileCommandsMapping)} commands are supported.`);\n  }\n  return await this[mobileCommandsMapping[mobileCommand]](opts);\n};\n\ncommands.mobileViewportScreenshot = async function () {\n  return await this.getViewportScreenshot();\n};\n\n/**\n * @typedef {object} Rectangle\n * @property {number} left - The left coordinate of the Rectangle.\n * @property {number} top - The top coordinate of the Rectangle.\n * @property {number} width - The width of Rectangle.\n * @property {number} height - The height of Rectangle.\n */\n\n/**\n * Returns the viewport coordinates.\n * @returns {Rectangle} The viewport coordinates.\n */\ncommands.mobileViewPortRect = async function mobileViewPortRect () {\n  return await this.getViewPortRect();\n};\n\ncommands.setUrl = async function (url) {\n  await this.adb.startUri(url, this.opts.appPackage);\n};\n\n/**\n * @typedef {object} DeepLinkOpts\n * @property {!string} url - The name of URL to start.\n * @property {!string} package - The name of the package to start the URI with.\n * @property {?boolean} waitForLaunch [true] - if `false` then adb won't wait\n * for the started activity to return the control\n */\n\n/**\n * Start URL that take users directly to specific content in the app\n * @param {DeepLinkOpts} opts\n */\ncommands.mobileDeepLink = async function (opts = {}) {\n  const {\n    url,\n    package: pkg,\n    waitForLaunch,\n  } = opts;\n  return await this.adb.startUri(url, pkg, { waitForLaunch });\n};\n\ncommands.openNotifications = async function () {\n  return await this.uiautomator2.jwproxy.command('/appium/device/open_notifications', 'POST', {});\n};\n\ncommands.updateSettings = async function (settings) {\n  await this.settings.update(settings);\n  await this.uiautomator2.jwproxy.command('/appium/settings', 'POST', {settings});\n};\n\ncommands.getSettings = async function () {\n  const driverSettings = this.settings.getSettings();\n  const serverSettings = await this.uiautomator2.jwproxy.command('/appium/settings', 'GET');\n  return {...driverSettings, ...serverSettings};\n};\n\n/**\n * Overriding appium-android-driver's wrapBootstrapDisconnect,\n * unlike in appium-android-driver avoiding adb restarting as it intern\n * kills UiAutomator2 server running in the device.\n **/\nhelpers.wrapBootstrapDisconnect = async function (wrapped) {\n  await wrapped();\n};\n\n// Stop proxying to any Chromedriver and redirect to uiautomator2\nhelpers.suspendChromedriverProxy = function () {\n  this.chromedriver = null;\n  this.proxyReqRes = this.uiautomator2.proxyReqRes.bind(this.uiautomator2);\n  this.proxyCommand = this.uiautomator2.proxyCommand.bind(this.uiautomator2);\n  this.jwpProxyActive = true;\n};\n\n/**\n * The list of available info entries can be found at\n * https://github.com/appium/appium-uiautomator2-server/blob/master/app/src/main/java/io/appium/uiautomator2/handler/GetDeviceInfo.java\n */\ncommands.mobileGetDeviceInfo = async function () {\n  return await this.uiautomator2.jwproxy.command('/appium/device/info', 'GET');\n};\n\n/**\n * @typedef {Object} TypingOptions\n * @property {!string|number|boolean} text - The text to type\n */\n\n/**\n * Types the given Unicode string.\n * It is expected that the focus is already put\n * to the destination input field before this method is called.\n *\n * @param {TypingOptions} opts\n * @returns {boolean} `true` if the input text has been successfully sent to adb\n * @throws {Error} if `text` property has not been provided\n */\ncommands.mobileType = async function mobileType (opts = {}) {\n  const {\n    text,\n  } = opts;\n  if (_.isUndefined(text)) {\n    this.log.errorAndThrow(`The 'text' argument is mandatory`);\n  }\n  return await this.adb.typeUnicode(text);\n};\n\n\n/**\n * @typedef {Object} InstallOptions\n * @property {boolean} allowTestPackages [false] - Set to true in order to allow test\n *                                                 packages installation.\n * @property {boolean} useSdcard [false] - Set to true to install the app on sdcard\n *                                         instead of the device memory.\n * @property {boolean} grantPermissions [false] - Set to true in order to grant all the\n *                                                permissions requested in the application's manifest\n *                                                automatically after the installation is completed\n *                                                under Android 6+.\n * @property {boolean} replace [true] - Set it to false if you don't want\n *                                      the application to be upgraded/reinstalled\n *                                      if it is already present on the device.\n * @property {boolean} partialInstall [false] - Install apks partially. It is used for 'install-multiple'.\n *                                             https://android.stackexchange.com/questions/111064/what-is-a-partial-application-install-via-adb\n */\n\n/**\n * @typedef {Object} InstallMultipleApksOptions\n * @property {Array<string>} apks - The list of APKs to install. Each APK should be a path to a apk\n *                                  or downloadable URL as HTTP/HTTPS.\n * @property {InstallOptions} options\n */\n\n/**\n * Install multiple APKs with `install-multiple` option.\n *\n * @param {InstallMultipleApksOptions} opts\n * @throws {Error} if an error occured while installing the given APKs.\n */\ncommands.mobileInstallMultipleApks = async function (opts = {}) {\n  if (!_.isArray(opts.apks) || _.isEmpty(opts.apks)) {\n    throw new errors.InvalidArgumentError('No apks are given to install');\n  }\n  const apks = await B.all(opts.apks\n    .map((app) => this.helpers.configureApp(app, [APK_EXTENSION])));\n  await this.adb.installMultipleApks(apks, opts.options);\n};\n\nObject.assign(extensions, commands, helpers);\n\nexport default extensions;\n"],"mappings":"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"}