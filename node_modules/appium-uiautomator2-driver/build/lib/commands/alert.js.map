{"version":3,"file":"alert.js","names":["commands","helpers","extensions","getAlertText","uiautomator2","jwproxy","command","mobileAcceptAlert","opts","postAcceptAlert","mobileDismissAlert","postDismissAlert","Object","assign"],"sources":["../../../lib/commands/alert.js"],"sourcesContent":["let commands = {}, helpers = {}, extensions = {};\n\ncommands.getAlertText = async function () {\n  return await this.uiautomator2.jwproxy.command('/alert/text', 'GET', {});\n};\n\n/**\n * @typedef {Object} AcceptAlertOptions\n * @property {?string} buttonLabel - The name of the button to click in order to\n *                                   accept the alert. If the name is not provided\n *                                   then the script will try to detect the button\n *                                   automatically.\n */\n\n/**\n * @param {AcceptAlertOptions} opts\n * @throws {InvalidElementStateError} If no matching button, that can accept the alert,\n *                                    can be found\n * @throws {NoAlertOpenError} If no alert is present\n */\ncommands.mobileAcceptAlert = async function (opts = {}) {\n  return await this.uiautomator2.jwproxy.command('/alert/accept', 'POST', opts);\n};\n\ncommands.postAcceptAlert = async function () {\n  return await this.mobileAcceptAlert();\n};\n\n/**\n * @typedef {Object} DismissAlertOptions\n * @property {?string} buttonLabel - The name of the button to click in order to\n *                                   dismiss the alert. If the name is not provided\n *                                   then the script will try to detect the button\n *                                   automatically.\n */\n\n/**\n * @param {DismissAlertOptions} opts\n * @throws {InvalidElementStateError} If no matching button, that can dismiss the alert,\n *                                    can be found\n * @throws {NoAlertOpenError} If no alert is present\n */\ncommands.mobileDismissAlert = async function (opts = {}) {\n  return await this.uiautomator2.jwproxy.command('/alert/dismiss', 'POST', opts);\n};\n\ncommands.postDismissAlert = async function () {\n  return await this.mobileDismissAlert();\n};\n\nObject.assign(extensions, commands, helpers);\nexport { commands, helpers };\nexport default extensions;\n"],"mappings":";;;;;;;;;AAAA,IAAIA,QAAQ,GAAG,EAAf;AAAA,IAAmBC,OAAO,GAAG,EAA7B;AAAA,IAAiCC,UAAU,GAAG,EAA9C;;;;AAEAF,QAAQ,CAACG,YAAT,GAAwB,kBAAkB;EACxC,OAAO,MAAM,KAAKC,YAAL,CAAkBC,OAAlB,CAA0BC,OAA1B,CAAkC,aAAlC,EAAiD,KAAjD,EAAwD,EAAxD,CAAb;AACD,CAFD;;AAkBAN,QAAQ,CAACO,iBAAT,GAA6B,gBAAgBC,IAAI,GAAG,EAAvB,EAA2B;EACtD,OAAO,MAAM,KAAKJ,YAAL,CAAkBC,OAAlB,CAA0BC,OAA1B,CAAkC,eAAlC,EAAmD,MAAnD,EAA2DE,IAA3D,CAAb;AACD,CAFD;;AAIAR,QAAQ,CAACS,eAAT,GAA2B,kBAAkB;EAC3C,OAAO,MAAM,KAAKF,iBAAL,EAAb;AACD,CAFD;;AAkBAP,QAAQ,CAACU,kBAAT,GAA8B,gBAAgBF,IAAI,GAAG,EAAvB,EAA2B;EACvD,OAAO,MAAM,KAAKJ,YAAL,CAAkBC,OAAlB,CAA0BC,OAA1B,CAAkC,gBAAlC,EAAoD,MAApD,EAA4DE,IAA5D,CAAb;AACD,CAFD;;AAIAR,QAAQ,CAACW,gBAAT,GAA4B,kBAAkB;EAC5C,OAAO,MAAM,KAAKD,kBAAL,EAAb;AACD,CAFD;;AAIAE,MAAM,CAACC,MAAP,CAAcX,UAAd,EAA0BF,QAA1B,EAAoCC,OAApC;eAEeC,U"}