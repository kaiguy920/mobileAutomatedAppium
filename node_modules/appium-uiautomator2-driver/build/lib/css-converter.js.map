{"version":3,"file":"css-converter.js","names":["parser","CssSelectorParser","registerSelectorPseudos","registerNestingOperators","registerAttrEqualityMods","enableSubstitutes","RESOURCE_ID","ID_LOCATOR_PATTERN","BOOLEAN_ATTRS","NUMERIC_ATTRS","STR_ATTRS","ALL_ATTRS","ATTRIBUTE_ALIASES","toSnakeCase","str","tokens","split","map","charAt","toUpperCase","slice","toLowerCase","out","join","assertGetBool","css","val","value","includes","Error","name","assertGetAttrName","attrName","officialAttr","aliasAttrs","getWordMatcherRegex","word","escapeRegExp","CssConverter","constructor","selector","pkg","formatIdLocator","locator","test","parseAttr","cssAttr","valueType","methodName","operator","parsePseudo","cssPseudo","pseudoName","parseCssRule","cssRule","nestingOperator","uiAutomatorSelector","tagName","androidClass","classNames","cssClassNames","push","id","attrs","attr","pseudos","pseudo","rule","parseCssObject","type","selectors","toUiAutomatorSelector","cssObj","parse","e","errors","InvalidSelectorError"],"sources":["../../lib/css-converter.js"],"sourcesContent":["import { CssSelectorParser } from 'css-selector-parser';\nimport { escapeRegExp } from 'lodash';\nimport { errors } from 'appium/driver';\n\nconst parser = new CssSelectorParser();\nparser.registerSelectorPseudos('has');\nparser.registerNestingOperators('>', '+', '~');\nparser.registerAttrEqualityMods('^', '$', '*', '~');\nparser.enableSubstitutes();\n\nconst RESOURCE_ID = 'resource-id';\nconst ID_LOCATOR_PATTERN = /^[a-zA-Z_][a-zA-Z0-9._]*:id\\/[\\S]+$/;\n\nconst BOOLEAN_ATTRS = [\n  'checkable', 'checked', 'clickable', 'enabled', 'focusable',\n  'focused', 'long-clickable', 'scrollable', 'selected',\n];\n\nconst NUMERIC_ATTRS = [\n  'index', 'instance',\n];\n\nconst STR_ATTRS = [\n  'description', RESOURCE_ID, 'text', 'class-name', 'package-name'\n];\n\nconst ALL_ATTRS = [\n  ...BOOLEAN_ATTRS,\n  ...NUMERIC_ATTRS,\n  ...STR_ATTRS,\n];\n\nconst ATTRIBUTE_ALIASES = [\n  [RESOURCE_ID, ['id']],\n  ['description', [\n    'content-description', 'content-desc',\n    'desc', 'accessibility-id',\n  ]],\n  ['index', ['nth-child']],\n];\n\n/**\n * Convert hyphen separated word to snake case\n *\n * @param {string} str\n * @returns {string} The hyphen separated word translated to snake case\n */\nfunction toSnakeCase (str) {\n  if (!str) {\n    return '';\n  }\n  const tokens = str.split('-').map((str) => str.charAt(0).toUpperCase() + str.slice(1).toLowerCase());\n  const out = tokens.join('');\n  return out.charAt(0).toLowerCase() + out.slice(1);\n}\n\n/**\n * @typedef {Object} CssNameValueObject\n * @property {?name} name The name of the CSS object\n * @property {?string} value The value of the CSS object\n */\n\n/**\n * Get the boolean from a CSS object. If empty, return true. If not true/false/empty, throw exception\n *\n * @param {CssNameValueObject} css A CSS object that has 'name' and 'value'\n * @returns {string} Either 'true' or 'false'. If value is empty, return 'true'\n */\nfunction assertGetBool (css) {\n  const val = css.value?.toLowerCase() || 'true'; // an omitted boolean attribute means 'true' (e.g.: input[checked] means checked is true)\n  if (['true', 'false'].includes(val)) {\n    return val;\n  }\n  throw new Error(`'${css.name}' must be true, false or empty. Found '${css.value}'`);\n}\n\n/**\n * Get the canonical form of a CSS attribute name\n *\n * Converts to lowercase and if an attribute name is an alias for something else, return\n * what it is an alias for\n *\n * @param {Object} css CSS object\n * @returns {string} The canonical attribute name\n */\nfunction assertGetAttrName (css) {\n  const attrName = css.name.toLowerCase();\n\n  // Check if it's supported and if it is, return it\n  if (ALL_ATTRS.includes(attrName)) {\n    return attrName.toLowerCase();\n  }\n\n  // If attrName is an alias for something else, return that\n  for (const [officialAttr, aliasAttrs] of ATTRIBUTE_ALIASES) {\n    if (aliasAttrs.includes(attrName)) {\n      return officialAttr;\n    }\n  }\n  throw new Error(`'${attrName}' is not a valid attribute. ` +\n    `Supported attributes are '${ALL_ATTRS.join(', ')}'`);\n}\n\n/**\n * Get a regex that matches a whole word. For the ~= CSS attribute selector.\n *\n * @param {string} word\n * @returns {string} A regex \"word\" matcher\n */\nfunction getWordMatcherRegex (word) {\n  return `\\\\b(\\\\w*${escapeRegExp(word)}\\\\w*)\\\\b`;\n}\n\n/**\n * @typedef {Object} CssAttr\n * @property {?string} valueType Type of attribute (must be string or empty)\n * @property {?string} value Value of the attribute\n * @property {?string} operator The operator between value and value type (=, *=, , ^=, $=)\n */\n\n/**\n * @typedef {Object} CssRule\n * @property {?string} nestingOperator The nesting operator (aka: combinator https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors)\n * @property {?string} tagName The tag name (aka: type selector https://developer.mozilla.org/en-US/docs/Web/CSS/Type_selectors)\n * @property {?string[]} classNames An array of CSS class names\n * @property {?CssAttr[]} attrs An array of CSS attributes\n * @property {?CssPseudo[]} attrs An array of CSS pseudos\n * @property {?string} id CSS identifier\n * @property {?CssRule} rule A descendant of this CSS rule\n */\n\n/**\n * @typedef {Object} CssObject\n * @property {?string} type Type of CSS object. 'rule', 'ruleset' or 'selectors'\n */\n\n/**\n * @typedef {Object} CssPseudo\n * @property {?string} valueType The type of CSS pseudo selector (https://www.npmjs.com/package/css-selector-parser for reference)\n * @property {?string} name The name of the pseudo selector\n * @property {?string} value The value of the pseudo selector\n */\n\nclass CssConverter {\n\n  constructor (selector, pkg) {\n    this.selector = selector;\n    this.pkg = pkg;\n  }\n\n  /**\n   * Add `<pkgName>:id/` prefix to beginning of string if it's not there already\n   *\n   * @param {string} locator The initial locator\n   * @returns {string} String with `<pkgName>:id/` prepended (if it wasn't already)\n   */\n  formatIdLocator (locator) {\n    return ID_LOCATOR_PATTERN.test(locator)\n      ? locator\n      : `${this.pkg || 'android'}:id/${locator}`;\n  }\n\n  /**\n   * Convert a CSS attribute into a UiSelector method call\n   *\n   * @param {CssAttr} cssAttr CSS attribute object\n   * @returns {string} CSS attribute parsed as UiSelector\n   */\n  parseAttr (cssAttr) {\n    if (cssAttr.valueType && cssAttr.valueType !== 'string') {\n      throw new Error(`'${cssAttr.name}=${cssAttr.value}' is an invalid attribute. ` +\n        `Only 'string' and empty attribute types are supported. Found '${cssAttr.valueType}'`);\n    }\n    const attrName = assertGetAttrName(cssAttr);\n    const methodName = toSnakeCase(attrName);\n\n    // Validate that it's a supported attribute\n    if (!STR_ATTRS.includes(attrName) && !BOOLEAN_ATTRS.includes(attrName)) {\n      throw new Error(`'${attrName}' is not supported. Supported attributes are ` +\n        `'${[...STR_ATTRS, ...BOOLEAN_ATTRS].join(', ')}'`);\n    }\n\n    // Parse boolean, if it's a boolean attribute\n    if (BOOLEAN_ATTRS.includes(attrName)) {\n      return `.${methodName}(${assertGetBool(cssAttr)})`;\n    }\n\n    // Otherwise parse as string\n    let value = cssAttr.value || '';\n    if (attrName === RESOURCE_ID) {\n      value = this.formatIdLocator(value);\n    }\n    if (value === '') {\n      return `.${methodName}Matches(\"\")`;\n    }\n\n    switch (cssAttr.operator) {\n      case '=':\n        return `.${methodName}(\"${value}\")`;\n      case '*=':\n        if (['description', 'text'].includes(attrName)) {\n          return `.${methodName}Contains(\"${value}\")`;\n        }\n        return `.${methodName}Matches(\"${escapeRegExp(value)}\")`;\n      case '^=':\n        if (['description', 'text'].includes(attrName)) {\n          return `.${methodName}StartsWith(\"${value}\")`;\n        }\n        return `.${methodName}Matches(\"^${escapeRegExp(value)}\")`;\n      case '$=':\n        return `.${methodName}Matches(\"${escapeRegExp(value)}$\")`;\n      case '~=':\n        return `.${methodName}Matches(\"${getWordMatcherRegex(value)}\")`;\n      default:\n        // Unreachable, but adding error in case a new CSS attribute is added.\n        throw new Error(`Unsupported CSS attribute operator '${cssAttr.operator}'. ` +\n          ` '=', '*=', '^=', '$=' and '~=' are supported.`);\n    }\n  }\n\n  /**\n   * Convert a CSS pseudo class to a UiSelector\n   *\n   * @param {CssPseudo} cssPseudo CSS Pseudo class\n   * @returns {string} Pseudo selector parsed as UiSelector\n   */\n  parsePseudo (cssPseudo) {\n    if (cssPseudo.valueType && cssPseudo.valueType !== 'string') {\n      throw new Error(`'${cssPseudo.name}=${cssPseudo.value}'. ` +\n        `Unsupported css pseudo class value type: '${cssPseudo.valueType}'. Only 'string' type or empty is supported.`);\n    }\n\n    const pseudoName = assertGetAttrName(cssPseudo);\n\n    if (BOOLEAN_ATTRS.includes(pseudoName)) {\n      return `.${toSnakeCase(pseudoName)}(${assertGetBool(cssPseudo)})`;\n    }\n\n    if (NUMERIC_ATTRS.includes(pseudoName)) {\n      return `.${pseudoName}(${cssPseudo.value})`;\n    }\n  }\n\n  /**\n   * Convert a CSS rule to a UiSelector\n   * @param {CssRule} cssRule CSS rule definition\n   */\n  parseCssRule (cssRule) {\n    const { nestingOperator } = cssRule;\n    if (nestingOperator && nestingOperator !== ' ') {\n      throw new Error(`'${nestingOperator}' is not a supported combinator. ` +\n        `Only child combinator (>) and descendant combinator are supported.`);\n    }\n\n    let uiAutomatorSelector = 'new UiSelector()';\n    if (cssRule.tagName && cssRule.tagName !== '*') {\n      let androidClass = [cssRule.tagName];\n      if (cssRule.classNames) {\n        for (const cssClassNames of cssRule.classNames) {\n          androidClass.push(cssClassNames);\n        }\n        uiAutomatorSelector += `.className(\"${androidClass.join('.')}\")`;\n      } else {\n        uiAutomatorSelector += `.classNameMatches(\"${cssRule.tagName}\")`;\n      }\n    } else if (cssRule.classNames) {\n      uiAutomatorSelector += `.classNameMatches(\"${cssRule.classNames.join('\\\\.')}\")`;\n    }\n    if (cssRule.id) {\n      uiAutomatorSelector += `.resourceId(\"${this.formatIdLocator(cssRule.id)}\")`;\n    }\n    if (cssRule.attrs) {\n      for (const attr of cssRule.attrs) {\n        uiAutomatorSelector += this.parseAttr(attr);\n      }\n    }\n    if (cssRule.pseudos) {\n      for (const pseudo of cssRule.pseudos) {\n        uiAutomatorSelector += this.parsePseudo(pseudo);\n      }\n    }\n    if (cssRule.rule) {\n      uiAutomatorSelector += `.childSelector(${this.parseCssRule(cssRule.rule)})`;\n    }\n    return uiAutomatorSelector;\n  }\n\n  /**\n   * Convert CSS object to UiAutomator2 selector\n   * @param {CssObject} css CSS object\n   * @returns {string} The CSS object parsed as a UiSelector\n   */\n  parseCssObject (css) {\n    switch (css.type) {\n      case 'rule':\n        return this.parseCssRule(css);\n      case 'ruleSet':\n        return this.parseCssObject(css.rule);\n      case 'selectors':\n        return css.selectors.map((selector) => this.parseCssObject(selector)).join('; ');\n\n      default:\n        // This is never reachable, but if it ever is do this.\n        throw new Error(`UiAutomator does not support '${css.type}' css. Only supports 'rule', 'ruleSet', 'selectors' `);\n    }\n  }\n\n  /**\n   * Convert a CSS selector to a UiAutomator2 selector\n   *\n   * @returns {string} The CSS selector converted to a UiSelector\n   */\n  toUiAutomatorSelector () {\n    let cssObj;\n    try {\n      cssObj = parser.parse(this.selector);\n    } catch (e) {\n      throw new errors.InvalidSelectorError(`Invalid CSS selector '${this.selector}'. Reason: '${e}'`);\n    }\n    try {\n      return this.parseCssObject(cssObj);\n    } catch (e) {\n      throw new errors.InvalidSelectorError(`Unsupported CSS selector '${this.selector}'. Reason: '${e}'`);\n    }\n  }\n}\n\nexport default CssConverter;"],"mappings":"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"}