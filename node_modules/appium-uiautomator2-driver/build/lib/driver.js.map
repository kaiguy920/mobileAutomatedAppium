{"version":3,"file":"driver.js","names":["helpers","Object","assign","uiautomator2Helpers","androidHelpers","DEVICE_PORT_RANGE","DEVICE_PORT_ALLOCATION_GUARD","util","getLockFileGuard","path","resolve","os","tmpdir","timeout","tryRecovery","DEVICE_PORT","MJPEG_SERVER_DEVICE_PORT","LOCALHOST_IP4","NO_PROXY","RegExp","CHROME_NO_PROXY","MEMOIZED_FUNCTIONS","AndroidUiautomator2Driver","BaseDriver","constructor","opts","shouldValidateCaps","shell","locatorStrategies","desiredCapConstraints","uiautomator2","jwpProxyActive","defaultIME","jwpProxyAvoid","apkStrings","settings","DeviceSettings","ignoreUnimportantViews","allowInvisibleElements","onSettingsUpdate","bind","chromedriver","sessionChromedrivers","fn","_","memoize","validateDesiredCaps","caps","createSession","args","sessionId","serverDetails","platform","webStorageEnabled","takesScreenshot","javascriptEnabled","databaseEnabled","networkConnectionEnabled","locationContextEnabled","warnings","desired","curContext","defaultContextName","defaultOpts","fullReset","autoLaunch","adbPort","DEFAULT_ADB_PORT","androidInstallTimeout","defaults","isChromeSession","log","info","pkg","activity","getChromePkg","browserName","appPackage","appActivity","reboot","setAvdFromCapabilities","app","configureApp","APK_EXTENSION","APKS_EXTENSION","checkAppPresent","startUiAutomator2Session","fillDeviceDetails","mjpegScreenshotUrl","mjpegStream","mjpeg","MJpegStream","start","e","deleteSession","pixelRatio","getDevicePixelRatio","statBarHeight","getStatusBarHeight","viewportRect","getViewPortRect","driverData","getSession","sessionData","debug","uia2Data","jwproxy","command","isEmulator","adb","avd","deviceName","errorAndThrow","platformVersion","avdDevice","replace","allocateSystemPort","forwardPort","localPort","checkPortStatus","systemPort","_hasSystemPortInCaps","startPort","endPort","findAPortNotInUse","releaseSystemPort","removePortForward","allocateMjpegServerPort","mjpegServerPort","releaseMjpegServerPort","udid","emPort","getDeviceInfoFromCaps","createADB","apiLevel","getApiLevel","setHiddenApiPolicy","ignoreHiddenApiPolicyError","hasValue","gpsEnabled","toggleGPSLocationProvider","warn","appInfo","getLaunchInfo","curDeviceId","deviceUDID","initDevice","initUiAutomator2Server","disableWindowAnimation","isAnimationOn","setAnimationState","_wasWindowAnimationDisabled","initAUT","startSession","addDeviceInfoToCaps","skipUnlock","unlock","startChromeSession","ensureAppStarts","orientation","setOrientation","autoWebview","viewName","defaultWebviewName","autoWebviewTimeout","retryInterval","setContext","apiVersion","manufacturer","model","realDisplaySize","displayDensity","mobileGetDeviceInfo","deviceApiLevel","parseInt","deviceScreenSize","deviceScreenDensity","deviceModel","deviceManufacturer","uiautomator2Opts","host","remoteAdbHost","devicePort","apk","tmpDir","disableSuppressAccessibilityService","readTimeout","uiautomator2ServerReadTimeout","UiAutomator2Server","proxyReqRes","proxyCommand","skipServerInstallation","installServerApk","uiautomator2ServerInstallTimeout","addToDeviceIdleWhitelist","SETTINGS_HELPER_PKG_ID","SERVER_PACKAGE_ID","SERVER_TEST_PACKAGE_ID","stderr","message","uninstallOtherPackages","parseArray","otherApps","B","all","map","installOtherApks","noReset","isAppInstalled","noSign","checkApkCert","requireDefaultCert","signApp","skipUninstall","uninstallApk","installApk","fastReset","resetApp","appWaitPackage","appWaitActivity","androidCoverage","processExists","startApp","action","intentAction","category","intentCategory","flags","intentFlags","waitPkg","waitActivity","waitForLaunch","appWaitForLaunch","waitDuration","appWaitDuration","optionalIntentArguments","stopApp","dontStopAppOnReset","retry","user","userProfile","screenRecordingStopTasks","isEmpty","_screenRecordingProperties","stopRecordingScreen","mobileIsMediaProjectionRecordingRunning","mobileStopMediaProjectionRecording","_screenStreamingProps","mobileStopScreenStreaming","removeAllSessionWebSocketHandlers","server","stopChromedriverProxies","err","task","ign","unicodeKeyboard","resetKeyboard","setIME","endAndroidCoverage","androidCoverageEndIntent","broadcast","forceStop","stopLogcat","error","setDefaultHiddenApiPolicy","avdName","killEmulator","stop","fs","exists","wrapBootstrapDisconnect","wrapped","restart","proxyActive","canProxy","getProxyAvoidList","nativeWebScreenshot","isChromeBrowser","cmd","toPairs","androidCommands","prototype","commands"],"sources":["../../lib/driver.js"],"sourcesContent":["import _ from 'lodash';\nimport { BaseDriver, DeviceSettings } from 'appium/driver';\nimport {\n  UiAutomator2Server, SERVER_PACKAGE_ID, SERVER_TEST_PACKAGE_ID\n} from './uiautomator2';\nimport { fs, util, mjpeg } from 'appium/support';\nimport { retryInterval } from 'asyncbox';\nimport B from 'bluebird';\nimport commands from './commands/index';\nimport { DEFAULT_ADB_PORT } from 'appium-adb';\nimport uiautomator2Helpers from './helpers';\nimport {\n  androidHelpers, androidCommands, SETTINGS_HELPER_PKG_ID\n} from 'appium-android-driver';\nimport desiredCapConstraints from './desired-caps';\nimport { findAPortNotInUse, checkPortStatus } from 'portscanner';\nimport os from 'os';\nimport path from 'path';\nimport { APK_EXTENSION, APKS_EXTENSION } from './extensions';\n\n\nconst helpers = Object.assign({}, uiautomator2Helpers, androidHelpers);\n\n// The range of ports we can use on the system for communicating to the\n// UiAutomator2 HTTP server on the device\nconst DEVICE_PORT_RANGE = [8200, 8299];\n\n// The guard is needed to avoid dynamic system port allocation conflicts for\n// parallel driver sessions\nconst DEVICE_PORT_ALLOCATION_GUARD = util.getLockFileGuard(\n  path.resolve(os.tmpdir(), 'uia2_device_port_guard'),\n  {timeout: 25, tryRecovery: true}\n);\n\n// This is the port that UiAutomator2 listens to on the device. We will forward\n// one of the ports above on the system to this port on the device.\nconst DEVICE_PORT = 6790;\n// This is the port that the UiAutomator2 MJPEG server listens to on the device.\n// We will forward one of the ports above on the system to this port on the\n// device.\nconst MJPEG_SERVER_DEVICE_PORT = 7810;\n\nconst LOCALHOST_IP4 = '127.0.0.1';\n\n// NO_PROXY contains the paths that we never want to proxy to UiAutomator2 server.\n// TODO:  Add the list of paths that we never want to proxy to UiAutomator2 server.\n// TODO: Need to segregate the paths better way using regular expressions wherever applicable.\n// (Not segregating right away because more paths to be added in the NO_PROXY list)\nconst NO_PROXY = [\n  ['GET', new RegExp('^/session/(?!.*/)')],\n  ['GET', new RegExp('^/session/[^/]+/alert_[^/]+')],\n  ['GET', new RegExp('^/session/[^/]+/alert/[^/]+')],\n  ['GET', new RegExp('^/session/[^/]+/appium/[^/]+/current_activity')],\n  ['GET', new RegExp('^/session/[^/]+/appium/[^/]+/current_package')],\n  ['GET', new RegExp('^/session/[^/]+/appium/app/[^/]+')],\n  ['GET', new RegExp('^/session/[^/]+/appium/device/[^/]+')],\n  ['GET', new RegExp('^/session/[^/]+/appium/settings')],\n  ['GET', new RegExp('^/session/[^/]+/context')],\n  ['GET', new RegExp('^/session/[^/]+/contexts')],\n  ['GET', new RegExp('^/session/[^/]+/element/[^/]+/attribute')],\n  ['GET', new RegExp('^/session/[^/]+/element/[^/]+/displayed')],\n  ['GET', new RegExp('^/session/[^/]+/element/[^/]+/enabled')],\n  ['GET', new RegExp('^/session/[^/]+/element/[^/]+/location_in_view')],\n  ['GET', new RegExp('^/session/[^/]+/element/[^/]+/name')],\n  ['GET', new RegExp('^/session/[^/]+/element/[^/]+/screenshot')],\n  ['GET', new RegExp('^/session/[^/]+/element/[^/]+/selected')],\n  ['GET', new RegExp('^/session/[^/]+/ime/[^/]+')],\n  ['GET', new RegExp('^/session/[^/]+/location')],\n  ['GET', new RegExp('^/session/[^/]+/network_connection')],\n  ['GET', new RegExp('^/session/[^/]+/screenshot')],\n  ['GET', new RegExp('^/session/[^/]+/timeouts')],\n  ['GET', new RegExp('^/session/[^/]+/url')],\n  ['POST', new RegExp('^/session/[^/]+/[^/]+_alert$')],\n  ['POST', new RegExp('^/session/[^/]+/actions')],\n  ['POST', new RegExp('^/session/[^/]+/alert/[^/]+')],\n  ['POST', new RegExp('^/session/[^/]+/app/[^/]')],\n  ['POST', new RegExp('^/session/[^/]+/appium/[^/]+/start_activity')],\n  ['POST', new RegExp('^/session/[^/]+/appium/app/[^/]+')],\n  ['POST', new RegExp('^/session/[^/]+/appium/compare_images')],\n  ['POST', new RegExp('^/session/[^/]+/appium/device/(?!set_clipboard)[^/]+')],\n  ['POST', new RegExp('^/session/[^/]+/appium/element/[^/]+/replace_value')],\n  ['POST', new RegExp('^/session/[^/]+/appium/element/[^/]+/value')],\n  ['POST', new RegExp('^/session/[^/]+/appium/getPerformanceData')],\n  ['POST', new RegExp('^/session/[^/]+/appium/performanceData/types')],\n  ['POST', new RegExp('^/session/[^/]+/appium/settings')],\n  ['POST', new RegExp('^/session/[^/]+/appium/execute_driver')],\n  ['POST', new RegExp('^/session/[^/]+/appium/start_recording_screen')],\n  ['POST', new RegExp('^/session/[^/]+/appium/stop_recording_screen')],\n  ['POST', new RegExp('^/session/[^/]+/appium/.*event')],\n  ['POST', new RegExp('^/session/[^/]+/context')],\n  ['POST', new RegExp('^/session/[^/]+/element')],\n  ['POST', new RegExp('^/session/[^/]+/ime/[^/]+')],\n  ['POST', new RegExp('^/session/[^/]+/keys')],\n  ['POST', new RegExp('^/session/[^/]+/location')],\n  ['POST', new RegExp('^/session/[^/]+/network_connection')],\n  ['POST', new RegExp('^/session/[^/]+/timeouts')],\n  ['POST', new RegExp('^/session/[^/]+/touch/multi/perform')],\n  ['POST', new RegExp('^/session/[^/]+/touch/perform')],\n  ['POST', new RegExp('^/session/[^/]+/url')],\n\n  // MJSONWP commands\n  ['GET', new RegExp('^/session/[^/]+/log/types')],\n  ['POST', new RegExp('^/session/[^/]+/execute')],\n  ['POST', new RegExp('^/session/[^/]+/execute_async')],\n  ['POST', new RegExp('^/session/[^/]+/log')],\n  // W3C commands\n  // For Selenium v4 (W3C does not have this route)\n  ['GET', new RegExp('^/session/[^/]+/se/log/types')],\n  ['GET', new RegExp('^/session/[^/]+/window/rect')],\n  ['POST', new RegExp('^/session/[^/]+/execute/async')],\n  ['POST', new RegExp('^/session/[^/]+/execute/sync')],\n  // For Selenium v4 (W3C does not have this route)\n  ['POST', new RegExp('^/session/[^/]+/se/log')],\n];\n\n// This is a set of methods and paths that we never want to proxy to Chromedriver.\nconst CHROME_NO_PROXY = [\n  ['GET', new RegExp('^/session/[^/]+/appium')],\n  ['GET', new RegExp('^/session/[^/]+/context')],\n  ['GET', new RegExp('^/session/[^/]+/element/[^/]+/rect')],\n  ['GET', new RegExp('^/session/[^/]+/orientation')],\n  ['POST', new RegExp('^/session/[^/]+/appium')],\n  ['POST', new RegExp('^/session/[^/]+/context')],\n  ['POST', new RegExp('^/session/[^/]+/orientation')],\n  ['POST', new RegExp('^/session/[^/]+/touch/multi/perform')],\n  ['POST', new RegExp('^/session/[^/]+/touch/perform')],\n\n  // this is needed to make the mobile: commands working in web context\n  ['POST', new RegExp('^/session/[^/]+/execute$')],\n  ['POST', new RegExp('^/session/[^/]+/execute/sync')],\n\n  // MJSONWP commands\n  ['GET', new RegExp('^/session/[^/]+/log/types$')],\n  ['POST', new RegExp('^/session/[^/]+/log$')],\n  // W3C commands\n  // For Selenium v4 (W3C does not have this route)\n  ['GET', new RegExp('^/session/[^/]+/se/log/types$')],\n  // For Selenium v4 (W3C does not have this route)\n  ['POST', new RegExp('^/session/[^/]+/se/log$')],\n];\n\nconst MEMOIZED_FUNCTIONS = [\n  'getStatusBarHeight',\n  'getDevicePixelRatio',\n];\n\nclass AndroidUiautomator2Driver extends BaseDriver {\n  constructor (opts = {}, shouldValidateCaps = true) {\n    // `shell` overwrites adb.shell, so remove\n    delete opts.shell;\n\n    super(opts, shouldValidateCaps);\n    this.locatorStrategies = [\n      'xpath',\n      'id',\n      'class name',\n      'accessibility id',\n      'css selector',\n      '-android uiautomator'\n    ];\n    this.desiredCapConstraints = desiredCapConstraints;\n    this.uiautomator2 = null;\n    this.jwpProxyActive = false;\n    this.defaultIME = null;\n    this.jwpProxyAvoid = NO_PROXY;\n    this.apkStrings = {}; // map of language -> strings obj\n\n    this.settings = new DeviceSettings({ignoreUnimportantViews: false, allowInvisibleElements: false},\n        this.onSettingsUpdate.bind(this));\n    // handle webview mechanics from AndroidDriver\n    this.chromedriver = null;\n    this.sessionChromedrivers = {};\n\n    // memoize functions here, so that they are done on a per-instance basis\n    for (const fn of MEMOIZED_FUNCTIONS) {\n      this[fn] = _.memoize(this[fn]);\n    }\n  }\n\n  validateDesiredCaps (caps) {\n    return super.validateDesiredCaps(caps) && androidHelpers.validateDesiredCaps(caps);\n  }\n\n  async createSession (...args) {\n    try {\n      // TODO handle otherSessionData for multiple sessions\n      let [sessionId, caps] = await super.createSession(...args);\n\n      let serverDetails = {\n        platform: 'LINUX',\n        webStorageEnabled: false,\n        takesScreenshot: true,\n        javascriptEnabled: true,\n        databaseEnabled: false,\n        networkConnectionEnabled: true,\n        locationContextEnabled: false,\n        warnings: {},\n        desired: this.caps,\n      };\n\n      this.caps = Object.assign(serverDetails, this.caps);\n\n      this.curContext = this.defaultContextName();\n\n      let defaultOpts = {\n        fullReset: false,\n        autoLaunch: true,\n        adbPort: DEFAULT_ADB_PORT,\n        androidInstallTimeout: 90000\n      };\n      _.defaults(this.opts, defaultOpts);\n\n      if (this.isChromeSession) {\n        this.log.info(\"We're going to run a Chrome-based session\");\n        let {pkg, activity} = helpers.getChromePkg(this.opts.browserName);\n        this.opts.appPackage = this.caps.appPackage = pkg;\n        this.opts.appActivity = this.caps.appActivity = activity;\n        this.log.info(`Chrome-type package and activity are ${pkg} and ${activity}`);\n      }\n\n      if (this.opts.reboot) {\n        this.setAvdFromCapabilities(caps);\n      }\n\n      if (this.opts.app) {\n        // find and copy, or download and unzip an app url or path\n        this.opts.app = await this.helpers.configureApp(this.opts.app, [APK_EXTENSION, APKS_EXTENSION]);\n        await this.checkAppPresent();\n      } else if (this.opts.appPackage) {\n        // the app isn't an actual app file but rather something we want to\n        // assume is on the device and just launch via the appPackage\n        this.log.info(`Starting '${this.opts.appPackage}' directly on the device`);\n      } else {\n        this.log.info(`Neither 'app' nor 'appPackage' was set. Starting UiAutomator2 ` +\n          'without the target application');\n      }\n      this.opts.adbPort = this.opts.adbPort || DEFAULT_ADB_PORT;\n\n      await this.startUiAutomator2Session();\n      await this.fillDeviceDetails();\n      if (this.opts.mjpegScreenshotUrl) {\n        this.log.info(`Starting MJPEG stream reading URL: '${this.opts.mjpegScreenshotUrl}'`);\n        this.mjpegStream = new mjpeg.MJpegStream(this.opts.mjpegScreenshotUrl);\n        await this.mjpegStream.start();\n      }\n      return [sessionId, this.caps];\n    } catch (e) {\n      await this.deleteSession();\n      throw e;\n    }\n  }\n\n  async fillDeviceDetails () {\n    this.caps.pixelRatio = await this.getDevicePixelRatio();\n    this.caps.statBarHeight = await this.getStatusBarHeight();\n    this.caps.viewportRect = await this.getViewPortRect();\n  }\n\n  get driverData () {\n    // TODO fill out resource info here\n    return {};\n  }\n\n  async getSession () {\n    let sessionData = await super.getSession();\n    this.log.debug('Getting session details from server to mix in');\n    let uia2Data = await this.uiautomator2.jwproxy.command('/', 'GET', {});\n    return Object.assign({}, sessionData, uia2Data);\n  }\n\n  isEmulator () {\n    return helpers.isEmulator(this.adb, this.opts);\n  }\n\n  setAvdFromCapabilities (caps) {\n    if (this.opts.avd) {\n      this.log.info('avd name defined, ignoring device name and platform version');\n    } else {\n      if (!caps.deviceName) {\n        this.log.errorAndThrow('avd or deviceName should be specified when reboot option is enables');\n      }\n      if (!caps.platformVersion) {\n        this.log.errorAndThrow('avd or platformVersion should be specified when reboot option is enabled');\n      }\n      let avdDevice = caps.deviceName.replace(/[^a-zA-Z0-9_.]/g, '-');\n      this.opts.avd = `${avdDevice}__${caps.platformVersion}`;\n    }\n  }\n\n  async allocateSystemPort () {\n    const forwardPort = async (localPort) => {\n      this.log.debug(`Forwarding UiAutomator2 Server port ${DEVICE_PORT} to local port ${localPort}`);\n      if ((await checkPortStatus(localPort, LOCALHOST_IP4)) === 'open') {\n        this.log.errorAndThrow(`UiAutomator2 Server cannot start because the local port #${localPort} is busy. ` +\n          `Make sure the port you provide via 'systemPort' capability is not occupied. ` +\n          `This situation might often be a result of an inaccurate sessions management, e.g. ` +\n          `old automation sessions on the same device must always be closed before starting new ones.`);\n      }\n      await this.adb.forwardPort(localPort, DEVICE_PORT);\n    };\n\n    if (this.opts.systemPort) {\n      this._hasSystemPortInCaps = true;\n      return await forwardPort(this.opts.systemPort);\n    }\n\n    await DEVICE_PORT_ALLOCATION_GUARD(async () => {\n      const [startPort, endPort] = DEVICE_PORT_RANGE;\n      try {\n        this.opts.systemPort = await findAPortNotInUse(startPort, endPort);\n      } catch (e) {\n        this.log.errorAndThrow(\n          `Cannot find any free port in range ${startPort}..${endPort}}. ` +\n          `Please set the available port number by providing the systemPort capability or ` +\n          `double check the processes that are locking ports within this range and terminate ` +\n          `these which are not needed anymore`);\n      }\n      await forwardPort(this.opts.systemPort);\n    });\n  }\n\n  async releaseSystemPort () {\n    if (!this.opts.systemPort || !this.adb) {\n      return;\n    }\n\n    if (this._hasSystemPortInCaps) {\n      await this.adb.removePortForward(this.opts.systemPort);\n    } else {\n      await DEVICE_PORT_ALLOCATION_GUARD(async () => await this.adb.removePortForward(this.opts.systemPort));\n    }\n  }\n\n  async allocateMjpegServerPort () {\n    if (this.opts.mjpegServerPort) {\n      await this.adb.forwardPort(this.opts.mjpegServerPort, MJPEG_SERVER_DEVICE_PORT);\n    }\n  }\n\n  async releaseMjpegServerPort () {\n    if (this.opts.mjpegServerPort) {\n      await this.adb.removePortForward(this.opts.mjpegServerPort);\n    }\n  }\n\n  async startUiAutomator2Session () {\n    // get device udid for this session\n    let {udid, emPort} = await helpers.getDeviceInfoFromCaps(this.opts);\n    this.opts.udid = udid;\n    this.opts.emPort = emPort;\n\n    // now that we know our java version and device info, we can create our\n    // ADB instance\n    this.adb = await androidHelpers.createADB(this.opts);\n\n    const apiLevel = await this.adb.getApiLevel();\n\n    if (apiLevel < 21) {\n      this.log.errorAndThrow('UIAutomator2 is only supported since Android 5.0 (Lollipop). ' +\n        'You could still use other supported backends in order to automate older Android versions.');\n    }\n\n    if (apiLevel >= 28) { // Android P\n      this.log.info('Relaxing hidden api policy');\n      await this.adb.setHiddenApiPolicy('1', !!this.opts.ignoreHiddenApiPolicyError);\n    }\n\n    // check if we have to enable/disable gps before running the application\n    if (util.hasValue(this.opts.gpsEnabled)) {\n      if (this.isEmulator()) {\n        this.log.info(`Trying to ${this.opts.gpsEnabled ? 'enable' : 'disable'} gps location provider`);\n        await this.adb.toggleGPSLocationProvider(this.opts.gpsEnabled);\n      } else {\n        this.log.warn(`Sorry! 'gpsEnabled' capability is only available for emulators`);\n      }\n    }\n\n    // get appPackage et al from manifest if necessary\n    const appInfo = await helpers.getLaunchInfo(this.adb, this.opts);\n    // and get it onto our 'opts' object so we use it from now on\n    Object.assign(this.opts, appInfo || {});\n\n    // set actual device name, udid, platform version, screen size, screen density, model and manufacturer details\n    this.caps.deviceName = this.adb.curDeviceId;\n    this.caps.deviceUDID = this.opts.udid;\n\n    // start an avd, set the language/locale, pick an emulator, etc...\n    // TODO with multiple devices we'll need to parameterize this\n    this.defaultIME = await helpers.initDevice(this.adb, this.opts);\n\n    // Prepare the device by forwarding the UiAutomator2 port\n    // This call mutates this.opts.systemPort if it is not set explicitly\n    await this.allocateSystemPort();\n\n    // Prepare the device by forwarding the UiAutomator2 MJPEG server port (if\n    // applicable)\n    await this.allocateMjpegServerPort();\n\n    // set up the modified UiAutomator2 server etc\n    await this.initUiAutomator2Server();\n\n    // Should be after installing io.appium.settings in helpers.initDevice\n    if (this.opts.disableWindowAnimation && (await this.adb.getApiLevel() < 26)) { // API level 26 is Android 8.0.\n      // Granting android.permission.SET_ANIMATION_SCALE is necessary to handle animations under API level 26\n      // Read https://github.com/appium/appium/pull/11640#issuecomment-438260477\n      // `--no-window-animation` works over Android 8 to disable all of animations\n      if (await this.adb.isAnimationOn()) {\n        this.log.info('Disabling animation via io.appium.settings');\n        await this.adb.setAnimationState(false);\n        this._wasWindowAnimationDisabled = true;\n      } else {\n        this.log.info('Window animation is already disabled');\n      }\n    }\n\n    // set up app under test\n    // prepare our actual AUT, get it on the device, etc...\n    await this.initAUT();\n\n    // Adding AUT package name in the capabilities if package name not exist in caps\n    if (!this.caps.appPackage && appInfo) {\n      this.caps.appPackage = appInfo.appPackage;\n    }\n\n    // launch UiAutomator2 and wait till its online and we have a session\n    await this.uiautomator2.startSession(this.caps);\n\n    await this.addDeviceInfoToCaps();\n\n    // Unlock the device after the session is started.\n    if (!this.opts.skipUnlock) {\n      // unlock the device to prepare it for testing\n      await helpers.unlock(this, this.adb, this.caps);\n    } else {\n      this.log.debug(`'skipUnlock' capability set, so skipping device unlock`);\n    }\n\n    if (this.isChromeSession) { // start a chromedriver session\n      await this.startChromeSession(this);\n    } else if (this.opts.autoLaunch && this.opts.appPackage) {\n      await this.ensureAppStarts();\n    }\n\n    // if the initial orientation is requested, set it\n    if (util.hasValue(this.opts.orientation)) {\n      this.log.debug(`Setting initial orientation to '${this.opts.orientation}'`);\n      await this.setOrientation(this.opts.orientation);\n    }\n\n    // if we want to immediately get into a webview, set our context\n    // appropriately\n    if (this.opts.autoWebview) {\n      const viewName = this.defaultWebviewName();\n      const timeout = this.opts.autoWebviewTimeout || 2000;\n      this.log.info(`Setting auto webview to context '${viewName}' with timeout ${timeout}ms`);\n      await retryInterval(timeout / 500, 500, this.setContext.bind(this), viewName);\n    }\n\n    // now that everything has started successfully, turn on proxying so all\n    // subsequent session requests go straight to/from uiautomator2\n    this.jwpProxyActive = true;\n  }\n\n  async addDeviceInfoToCaps () {\n    const {\n      apiVersion,\n      platformVersion,\n      manufacturer,\n      model,\n      realDisplaySize,\n      displayDensity,\n    } = await this.mobileGetDeviceInfo();\n    this.caps.deviceApiLevel = parseInt(apiVersion, 10);\n    this.caps.platformVersion = platformVersion;\n    this.caps.deviceScreenSize = realDisplaySize;\n    this.caps.deviceScreenDensity = displayDensity;\n    this.caps.deviceModel = model;\n    this.caps.deviceManufacturer = manufacturer;\n  }\n\n  async initUiAutomator2Server () {\n    // broken out for readability\n    const uiautomator2Opts = {\n      host: this.opts.remoteAdbHost || this.opts.host || LOCALHOST_IP4,\n      systemPort: this.opts.systemPort,\n      devicePort: DEVICE_PORT,\n      adb: this.adb,\n      apk: this.opts.app,\n      tmpDir: this.opts.tmpDir,\n      appPackage: this.opts.appPackage,\n      appActivity: this.opts.appActivity,\n      disableWindowAnimation: !!this.opts.disableWindowAnimation,\n      disableSuppressAccessibilityService: this.opts.disableSuppressAccessibilityService,\n      readTimeout: this.opts.uiautomator2ServerReadTimeout,\n    };\n    // now that we have package and activity, we can create an instance of\n    // uiautomator2 with the appropriate options\n    this.uiautomator2 = new UiAutomator2Server(this.log, uiautomator2Opts);\n    this.proxyReqRes = this.uiautomator2.proxyReqRes.bind(this.uiautomator2);\n    this.proxyCommand = this.uiautomator2.proxyCommand.bind(this.uiautomator2);\n\n    if (this.opts.skipServerInstallation) {\n      this.log.info(`'skipServerInstallation' is set. Skipping UIAutomator2 server installation.`);\n    } else {\n      await this.uiautomator2.installServerApk(this.opts.uiautomator2ServerInstallTimeout);\n      try {\n        await this.adb.addToDeviceIdleWhitelist(\n          SETTINGS_HELPER_PKG_ID, SERVER_PACKAGE_ID, SERVER_TEST_PACKAGE_ID,\n        );\n      } catch (e) {\n        this.log.warn(`Cannot add server packages to the Doze whitelist. Original error: ` +\n          (e.stderr || e.message));\n      }\n    }\n  }\n\n  async initAUT () {\n    // Uninstall any uninstallOtherPackages which were specified in caps\n    if (this.opts.uninstallOtherPackages) {\n      await helpers.uninstallOtherPackages(\n        this.adb,\n        helpers.parseArray(this.opts.uninstallOtherPackages),\n        [SETTINGS_HELPER_PKG_ID, SERVER_PACKAGE_ID, SERVER_TEST_PACKAGE_ID]\n      );\n    }\n\n    // Install any \"otherApps\" that were specified in caps\n    if (this.opts.otherApps) {\n      let otherApps;\n      try {\n        otherApps = helpers.parseArray(this.opts.otherApps);\n      } catch (e) {\n        this.log.errorAndThrow(`Could not parse \"otherApps\" capability: ${e.message}`);\n      }\n      otherApps = await B.all(otherApps\n        .map((app) => this.helpers.configureApp(app, [APK_EXTENSION, APKS_EXTENSION])));\n      await helpers.installOtherApks(otherApps, this.adb, this.opts);\n    }\n\n    if (this.opts.app) {\n      if (this.opts.noReset && !(await this.adb.isAppInstalled(this.opts.appPackage))\n          || !this.opts.noReset) {\n        if (!this.opts.noSign && !await this.adb.checkApkCert(this.opts.app, this.opts.appPackage, {\n          requireDefaultCert: false,\n        })) {\n          await helpers.signApp(this.adb, this.opts.app);\n        }\n        if (!this.opts.skipUninstall) {\n          await this.adb.uninstallApk(this.opts.appPackage);\n        }\n        await helpers.installApk(this.adb, this.opts);\n      } else {\n        this.log.debug('noReset has been requested and the app is already installed. Doing nothing');\n      }\n    } else {\n      if (this.opts.fullReset) {\n        this.log.errorAndThrow('Full reset requires an app capability, use fastReset if app is not provided');\n      }\n      this.log.debug('No app capability. Assuming it is already on the device');\n      if (this.opts.fastReset && this.opts.appPackage) {\n        await helpers.resetApp(this.adb, this.opts);\n      }\n    }\n  }\n\n  async ensureAppStarts () {\n    // make sure we have an activity and package to wait for\n    const appWaitPackage = this.opts.appWaitPackage || this.opts.appPackage;\n    const appWaitActivity = this.opts.appWaitActivity || this.opts.appActivity;\n\n    this.log.info(`Starting '${this.opts.appPackage}/${this.opts.appActivity} ` +\n      `and waiting for '${appWaitPackage}/${appWaitActivity}'`);\n\n    if (this.caps.androidCoverage) {\n      this.log.info(`androidCoverage is configured. ` +\n        ` Starting instrumentation of '${this.caps.androidCoverage}'...`);\n      await this.adb.androidCoverage(this.caps.androidCoverage, appWaitPackage, appWaitActivity);\n    } else {\n      if (this.opts.noReset && await this.adb.processExists(this.opts.appPackage)) {\n        this.log.info(`'${this.opts.appPackage}' is already running`);\n        return;\n      }\n      await this.adb.startApp({\n        pkg: this.opts.appPackage,\n        activity: this.opts.appActivity,\n        action: this.opts.intentAction || 'android.intent.action.MAIN',\n        category: this.opts.intentCategory || 'android.intent.category.LAUNCHER',\n        flags: this.opts.intentFlags || '0x10200000', // FLAG_ACTIVITY_NEW_TASK | FLAG_ACTIVITY_RESET_TASK_IF_NEEDED\n        waitPkg: this.opts.appWaitPackage,\n        waitActivity: this.opts.appWaitActivity,\n        waitForLaunch: this.opts.appWaitForLaunch,\n        waitDuration: this.opts.appWaitDuration,\n        optionalIntentArguments: this.opts.optionalIntentArguments,\n        stopApp: !this.opts.dontStopAppOnReset,\n        retry: true,\n        user: this.opts.userProfile,\n      });\n    }\n\n  }\n\n  async deleteSession () {\n    this.log.debug('Deleting UiAutomator2 session');\n\n    const screenRecordingStopTasks = [async () => {\n      if (!_.isEmpty(this._screenRecordingProperties)) {\n        await this.stopRecordingScreen();\n      }\n    }, async () => {\n      if (await this.mobileIsMediaProjectionRecordingRunning()) {\n        await this.mobileStopMediaProjectionRecording();\n      }\n    }, async () => {\n      if (!_.isEmpty(this._screenStreamingProps)) {\n        await this.mobileStopScreenStreaming();\n      }\n    }];\n\n    await androidHelpers.removeAllSessionWebSocketHandlers(this.server, this.sessionId);\n\n    if (this.uiautomator2) {\n      try {\n        await this.stopChromedriverProxies();\n      } catch (err) {\n        this.log.warn(`Unable to stop ChromeDriver proxies: ${err.message}`);\n      }\n      if (this.jwpProxyActive) {\n        try {\n          await this.uiautomator2.deleteSession();\n        } catch (err) {\n          this.log.warn(`Unable to proxy deleteSession to UiAutomator2: ${err.message}`);\n        }\n      }\n      this.uiautomator2 = null;\n    }\n    this.jwpProxyActive = false;\n\n    if (this.adb) {\n      await B.all(screenRecordingStopTasks.map((task) => {\n        (async () => {\n          try {\n            await task();\n          } catch (ign) {}\n        })();\n      }));\n\n      if (this.opts.unicodeKeyboard && this.opts.resetKeyboard && this.defaultIME) {\n        this.log.debug(`Resetting IME to '${this.defaultIME}'`);\n        try {\n          await this.adb.setIME(this.defaultIME);\n        } catch (err) {\n          this.log.warn(`Unable to reset IME: ${err.message}`);\n        }\n      }\n      if (this.caps.androidCoverage) {\n        this.log.info('Shutting down the adb process of instrumentation...');\n        await this.adb.endAndroidCoverage();\n        // Use this broadcast intent to notify it's time to dump coverage to file\n        if (this.caps.androidCoverageEndIntent) {\n          this.log.info(`Sending intent broadcast '${this.caps.androidCoverageEndIntent}' at the end of instrumenting.`);\n          await this.adb.broadcast(this.caps.androidCoverageEndIntent);\n        } else {\n          this.log.warn('No androidCoverageEndIntent is configured in caps. Possibly you cannot get coverage file.');\n        }\n      }\n      if (this.opts.appPackage) {\n        if (!this.isChromeSession\n            && !this.opts.dontStopAppOnReset\n            && !this.opts.noReset) {\n          try {\n            await this.adb.forceStop(this.opts.appPackage);\n          } catch (err) {\n            this.log.warn(`Unable to force stop app: ${err.message}`);\n          }\n        }\n        if (this.opts.fullReset && !this.opts.skipUninstall) {\n          this.log.debug(`Capability 'fullReset' set to 'true', Uninstalling '${this.opts.appPackage}'`);\n          try {\n            await this.adb.uninstallApk(this.opts.appPackage);\n          } catch (err) {\n            this.log.warn(`Unable to uninstall app: ${err.message}`);\n          }\n        }\n      }\n      // This value can be true if test target device is <= 26\n      if (this._wasWindowAnimationDisabled) {\n        this.log.info('Restoring window animation state');\n        await this.adb.setAnimationState(true);\n      }\n      await this.adb.stopLogcat();\n      try {\n        await this.releaseSystemPort();\n      } catch (error) {\n        this.log.warn(`Unable to remove system port forward: ${error.message}`);\n        // Ignore, this block will also be called when we fall in catch block\n        // and before even port forward.\n      }\n      try {\n        await this.releaseMjpegServerPort();\n      } catch (error) {\n        this.log.warn(`Unable to remove MJPEG server port forward: ${error.message}`);\n        // Ignore, this block will also be called when we fall in catch block\n        // and before even port forward.\n      }\n\n      if (await this.adb.getApiLevel() >= 28) { // Android P\n        this.log.info('Restoring hidden api policy to the device default configuration');\n        await this.adb.setDefaultHiddenApiPolicy(!!this.opts.ignoreHiddenApiPolicyError);\n      }\n\n      if (this.opts.reboot) {\n        let avdName = this.opts.avd.replace('@', '');\n        this.log.debug(`Closing emulator '${avdName}'`);\n        try {\n          await this.adb.killEmulator(avdName);\n        } catch (err) {\n          this.log.warn(`Unable to close emulator: ${err.message}`);\n        }\n      }\n    }\n    if (this.mjpegStream) {\n      this.log.info('Closing MJPEG stream');\n      this.mjpegStream.stop();\n    }\n    await super.deleteSession();\n  }\n\n  async checkAppPresent () {\n    this.log.debug('Checking whether app is actually present');\n    if (!(await fs.exists(this.opts.app))) {\n      this.log.errorAndThrow(`Could not find app apk at '${this.opts.app}'`);\n    }\n  }\n\n  async onSettingsUpdate () {\n    // intentionally do nothing here, since commands.updateSettings proxies\n    // settings to the uiauto2 server already\n  }\n\n  // Need to override android-driver's version of this since we don't actually\n  // have a bootstrap; instead we just restart adb and re-forward the UiAutomator2\n  // port\n  async wrapBootstrapDisconnect (wrapped) {\n    await wrapped();\n    await this.adb.restart();\n    await this.allocateSystemPort();\n    await this.allocateMjpegServerPort();\n  }\n\n  proxyActive (sessionId) {\n    super.proxyActive(sessionId);\n\n    // we always have an active proxy to the UiAutomator2 server\n    return true;\n  }\n\n  canProxy (sessionId) {\n    super.canProxy(sessionId);\n\n    // we can always proxy to the uiautomator2 server\n    return true;\n  }\n\n  getProxyAvoidList (sessionId) {\n    super.getProxyAvoidList(sessionId);\n    // we are maintaining two sets of NO_PROXY lists, one for chromedriver(CHROME_NO_PROXY)\n    // and one for uiautomator2(NO_PROXY), based on current context will return related NO_PROXY list\n    if (util.hasValue(this.chromedriver)) {\n      // if the current context is webview(chromedriver), then return CHROME_NO_PROXY list\n      this.jwpProxyAvoid = CHROME_NO_PROXY;\n    } else {\n      this.jwpProxyAvoid = NO_PROXY;\n    }\n    if (this.opts.nativeWebScreenshot) {\n      this.jwpProxyAvoid = [...this.jwpProxyAvoid, ['GET', new RegExp('^/session/[^/]+/screenshot')]];\n    }\n\n    return this.jwpProxyAvoid;\n  }\n\n  get isChromeSession () {\n    return helpers.isChromeBrowser(this.opts.browserName);\n  }\n}\n\n// first add the android-driver commands which we will fall back to\nfor (let [cmd, fn] of _.toPairs(androidCommands)) {\n  AndroidUiautomator2Driver.prototype[cmd] = fn;\n}\n\n// then overwrite with any uiautomator2-specific commands\nfor (let [cmd, fn] of _.toPairs(commands)) {\n  AndroidUiautomator2Driver.prototype[cmd] = fn;\n}\n\nexport { AndroidUiautomator2Driver };\nexport default AndroidUiautomator2Driver;\n"],"mappings":"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"}