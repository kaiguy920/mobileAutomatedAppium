{"version":3,"file":"logcat.js","names":["EventEmitter","events","log","logger","getLogger","MAX_BUFFER_SIZE","LOGCAT_PROC_STARTUP_TIMEOUT","SUPPORTED_FORMATS","SUPPORTED_PRIORITIES","DEFAULT_PRIORITY","DEFAULT_TAG","DEFAULT_FORMAT","requireFormat","format","includes","info","requireSpec","spec","tag","priority","split","resultTag","some","p","_","toLower","formatFilterSpecs","filterSpecs","isArray","filter","isString","startsWith","map","Logcat","constructor","opts","adb","clearLogs","clearDeviceLogsOnStart","debug","debugTrace","maxBufferSize","logs","logIdxSinceLastRequest","startCapture","started","B","_resolve","_reject","resolve","args","reject","clear","cmd","defaultArgs","util","quote","path","proc","SubProcess","on","code","signal","error","warn","lines","line","test","Error","outputHandler","trim","start","setTimeout","output","prefix","length","shift","outputObj","timestamp","Date","now","level","message","push","emit","isTrace","stopCapture","isRunning","removeAllListeners","stop","getLogs","result","slice","getAllLogs","exec","err","stderr"],"sources":["../../lib/logcat.js"],"sourcesContent":["import _ from 'lodash';\nimport { logger, util } from '@appium/support';\nimport B from 'bluebird';\nimport events from 'events';\nconst { EventEmitter } = events;\nimport { SubProcess, exec } from 'teen_process';\n\nconst log = logger.getLogger('Logcat');\nconst MAX_BUFFER_SIZE = 10000;\nconst LOGCAT_PROC_STARTUP_TIMEOUT = 10000;\nconst SUPPORTED_FORMATS = ['brief', 'process', 'tag', 'thread', 'raw', 'time', 'threadtime', 'long'];\nconst SUPPORTED_PRIORITIES = ['v', 'd', 'i', 'w', 'e', 'f', 's'];\nconst DEFAULT_PRIORITY = 'v';\nconst DEFAULT_TAG = '*';\nconst DEFAULT_FORMAT = 'threadtime';\n\nfunction requireFormat (format) {\n  if (!SUPPORTED_FORMATS.includes(format)) {\n    log.info(`The format value '${format}' is unknown. Supported values are: ${SUPPORTED_FORMATS}`);\n    log.info(`Defaulting to '${DEFAULT_FORMAT}'`);\n    return DEFAULT_FORMAT;\n  }\n  return format;\n}\n\nfunction requireSpec (spec) {\n  const [tag, priority] = spec.split(':');\n  let resultTag = tag;\n  if (!resultTag) {\n    log.info(`The tag value in spec '${spec}' cannot be empty`);\n    log.info(`Defaulting to '${DEFAULT_TAG}'`);\n    resultTag = DEFAULT_TAG;\n  }\n  if (!priority) {\n    log.info(`The priority value in spec '${spec}' is empty. Defaulting to Verbose (${DEFAULT_PRIORITY})`);\n    return `${resultTag}:${DEFAULT_PRIORITY}`;\n  }\n  if (!SUPPORTED_PRIORITIES.some((p) => _.toLower(priority) === _.toLower(p))) {\n    log.info(`The priority value in spec '${spec}' is unknown. Supported values are: ${SUPPORTED_PRIORITIES}`);\n    log.info(`Defaulting to Verbose (${DEFAULT_PRIORITY})`);\n    return `${resultTag}:${DEFAULT_PRIORITY}`;\n  }\n  return spec;\n}\n\nfunction formatFilterSpecs (filterSpecs) {\n  if (!_.isArray(filterSpecs)) {\n    filterSpecs = [filterSpecs];\n  }\n  return filterSpecs\n    .filter((spec) => spec && _.isString(spec) && !spec.startsWith('-'))\n    .map((spec) => spec.includes(':') ? requireSpec(spec) : spec);\n}\n\n\nclass Logcat extends EventEmitter {\n  constructor (opts = {}) {\n    super();\n    this.adb = opts.adb;\n    this.clearLogs = opts.clearDeviceLogsOnStart || false;\n    this.debug = opts.debug;\n    this.debugTrace = opts.debugTrace;\n    this.maxBufferSize = opts.maxBufferSize || MAX_BUFFER_SIZE;\n    this.logs = [];\n    this.logIdxSinceLastRequest = 0;\n  }\n\n  async startCapture (opts = {}) {\n    let started = false;\n    return await new B(async (_resolve, _reject) => { // eslint-disable-line promise/param-names\n      const resolve = function (...args) {\n        started = true;\n        _resolve(...args);\n      };\n      const reject = function (...args) {\n        started = true;\n        _reject(...args);\n      };\n\n      if (this.clearLogs) {\n        await this.clear();\n      }\n\n      const {\n        format = DEFAULT_FORMAT,\n        filterSpecs = [],\n      } = opts;\n      const cmd = [\n        ...this.adb.defaultArgs,\n        'logcat',\n        '-v', requireFormat(format),\n        ...formatFilterSpecs(filterSpecs),\n      ];\n      log.debug(`Starting logs capture with command: ${util.quote([this.adb.path, ...cmd])}`);\n      this.proc = new SubProcess(this.adb.path, cmd);\n      this.proc.on('exit', (code, signal) => {\n        log.error(`Logcat terminated with code ${code}, signal ${signal}`);\n        this.proc = null;\n        if (!started) {\n          log.warn('Logcat not started. Continuing');\n          resolve();\n        }\n      });\n      this.proc.on('lines-stderr', (lines) => {\n        for (let line of lines) {\n          if (/execvp\\(\\)/.test(line)) {\n            log.error('Logcat process failed to start');\n            reject(new Error(`Logcat process failed to start. stderr: ${line}`));\n          }\n          this.outputHandler(_.trim(line), 'STDERR: ');\n        }\n        resolve();\n      });\n      this.proc.on('lines-stdout', (lines) => {\n        resolve();\n        for (let line of lines) {\n          this.outputHandler(_.trim(line));\n        }\n      });\n      await this.proc.start(0);\n      // resolve after a timeout, even if no output was recorded\n      setTimeout(resolve, LOGCAT_PROC_STARTUP_TIMEOUT);\n    });\n  }\n\n  outputHandler (output, prefix = '') {\n    if (!output) {\n      return;\n    }\n\n    if (this.logs.length >= this.maxBufferSize) {\n      this.logs.shift();\n      if (this.logIdxSinceLastRequest > 0) {\n        --this.logIdxSinceLastRequest;\n      }\n    }\n    const outputObj = {\n      timestamp: Date.now(),\n      level: 'ALL',\n      message: output,\n    };\n    this.logs.push(outputObj);\n    this.emit('output', outputObj);\n    const isTrace = /W\\/Trace/.test(output);\n    if (this.debug && (!isTrace || this.debugTrace)) {\n      log.debug(prefix + output);\n    }\n  }\n\n  async stopCapture () {\n    log.debug('Stopping logcat capture');\n    if (!this.proc || !this.proc.isRunning) {\n      log.debug('Logcat already stopped');\n      this.proc = null;\n      return;\n    }\n    this.proc.removeAllListeners('exit');\n    await this.proc.stop();\n    this.proc = null;\n  }\n\n  getLogs () {\n    if (this.logIdxSinceLastRequest < this.logs.length) {\n      const result = this.logs.slice(this.logIdxSinceLastRequest);\n      this.logIdxSinceLastRequest = this.logs.length;\n      return result;\n    }\n    return [];\n  }\n\n  getAllLogs () {\n    return this.logs;\n  }\n\n  async clear () {\n    log.debug('Clearing logcat logs from device');\n    try {\n      const args = [...this.adb.defaultArgs, 'logcat', '-c'];\n      await exec(this.adb.path, args);\n    } catch (err) {\n      log.warn(`Failed to clear logcat logs: ${err.stderr || err.message}`);\n    }\n  }\n}\n\nexport default Logcat;\n"],"mappings":"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"}