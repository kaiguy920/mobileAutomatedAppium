{"version":3,"file":"settings-client-commands.js","names":["SETTINGS_HELPER_ID","SETTINGS_HELPER_MAIN_ACTIVITY","WIFI_CONNECTION_SETTING_RECEIVER","WIFI_CONNECTION_SETTING_ACTION","DATA_CONNECTION_SETTING_RECEIVER","DATA_CONNECTION_SETTING_ACTION","ANIMATION_SETTING_RECEIVER","ANIMATION_SETTING_ACTION","LOCALE_SETTING_RECEIVER","LOCALE_SETTING_ACTION","LOCATION_SERVICE","LOCATION_RECEIVER","LOCATION_RETRIEVAL_ACTION","CLIPBOARD_RECEIVER","CLIPBOARD_RETRIEVAL_ACTION","NOTIFICATIONS_RETRIEVAL_ACTION","SMS_LIST_RECEIVER","SMS_LIST_RETRIEVAL_ACTION","MEDIA_SCAN_RECEIVER","MEDIA_SCAN_ACTION","APPIUM_IME","UNICODE_IME","DEFAULT_SATELLITES_COUNT","DEFAULT_ALTITUDE","LOCATION_TRACKER_TAG","GPS_CACHE_REFRESHED_LOGS","GPS_COORDINATES_PATTERN","commands","requireRunningSettingsApp","opts","processExists","log","debug","timeout","startApp","pkg","activity","action","category","stopApp","waitForLaunch","waitForCondition","waitMs","intervalMs","err","Error","setWifiState","on","isEmulator","shell","privileged","getApiLevel","setDataState","setAnimationState","setDeviceSysLocaleViaSettingApp","language","country","script","params","toLowerCase","toUpperCase","push","setGeoLocation","location","formatLocationValue","valueName","isRequired","util","hasValue","floatValue","parseFloat","isNaN","_","ceil","longitude","latitude","altitude","speed","args","isNil","satellites","parseInt","Number","length","resetTelnetAuthToken","adbExec","map","arg","replace","getGeoLocation","output","stderr","stdout","message","match","exec","JSON","stringify","refreshGeoLocationCache","timeoutMs","logcatMonitor","monitoringPromise","cmd","adb","defaultArgs","SubProcess","path","timeoutErrorMsg","B","resolve","reject","setTimeout","evt","lines","some","line","x","includes","start","timer","timing","Timer","info","getDuration","asMilliSeconds","toFixed","isRunning","stop","performEditorAction","runInImeContext","getClipboard","retrieveClipboard","trim","getNotifications","parseJsonData","getSmsList","max","typeUnicode","text","pluralize","inputText","imap","encode","scanMedia","destination"],"sources":["../../../lib/tools/settings-client-commands.js"],"sourcesContent":["import log from '../logger.js';\nimport { parseJsonData } from '../helpers.js';\nimport _ from 'lodash';\nimport { util, timing } from '@appium/support';\nimport { waitForCondition } from 'asyncbox';\nimport { imap } from 'utf7';\nimport { SubProcess } from 'teen_process';\nimport B from 'bluebird';\n\nconst SETTINGS_HELPER_ID = 'io.appium.settings';\nconst SETTINGS_HELPER_MAIN_ACTIVITY = '.Settings';\nconst WIFI_CONNECTION_SETTING_RECEIVER = `${SETTINGS_HELPER_ID}/.receivers.WiFiConnectionSettingReceiver`;\nconst WIFI_CONNECTION_SETTING_ACTION = `${SETTINGS_HELPER_ID}.wifi`;\nconst DATA_CONNECTION_SETTING_RECEIVER = `${SETTINGS_HELPER_ID}/.receivers.DataConnectionSettingReceiver`;\nconst DATA_CONNECTION_SETTING_ACTION = `${SETTINGS_HELPER_ID}.data_connection`;\nconst ANIMATION_SETTING_RECEIVER = `${SETTINGS_HELPER_ID}/.receivers.AnimationSettingReceiver`;\nconst ANIMATION_SETTING_ACTION = `${SETTINGS_HELPER_ID}.animation`;\nconst LOCALE_SETTING_RECEIVER = `${SETTINGS_HELPER_ID}/.receivers.LocaleSettingReceiver`;\nconst LOCALE_SETTING_ACTION = `${SETTINGS_HELPER_ID}.locale`;\nconst LOCATION_SERVICE = `${SETTINGS_HELPER_ID}/.LocationService`;\nconst LOCATION_RECEIVER = `${SETTINGS_HELPER_ID}/.receivers.LocationInfoReceiver`;\nconst LOCATION_RETRIEVAL_ACTION = `${SETTINGS_HELPER_ID}.location`;\nconst CLIPBOARD_RECEIVER = `${SETTINGS_HELPER_ID}/.receivers.ClipboardReceiver`;\nconst CLIPBOARD_RETRIEVAL_ACTION = `${SETTINGS_HELPER_ID}.clipboard.get`;\nconst NOTIFICATIONS_RETRIEVAL_ACTION = `${SETTINGS_HELPER_ID}.notifications`;\nconst SMS_LIST_RECEIVER = `${SETTINGS_HELPER_ID}/.receivers.SmsReader`;\nconst SMS_LIST_RETRIEVAL_ACTION = `${SETTINGS_HELPER_ID}.sms.read`;\nconst MEDIA_SCAN_RECEIVER = `${SETTINGS_HELPER_ID}/.receivers.MediaScannerReceiver`;\nconst MEDIA_SCAN_ACTION = `${SETTINGS_HELPER_ID}.scan_media`;\nconst APPIUM_IME = `${SETTINGS_HELPER_ID}/.AppiumIME`;\nconst UNICODE_IME = `${SETTINGS_HELPER_ID}/.UnicodeIME`;\nconst DEFAULT_SATELLITES_COUNT = 12;\nconst DEFAULT_ALTITUDE = 0.0;\nconst LOCATION_TRACKER_TAG = 'LocationTracker';\nconst GPS_CACHE_REFRESHED_LOGS = [\n  'The current location has been successfully retrieved from Play Services',\n  'The current location has been successfully retrieved from Location Manager'\n];\n\nconst GPS_COORDINATES_PATTERN = /data=\"(-?[\\d.]+)\\s+(-?[\\d.]+)\\s+(-?[\\d.]+)\"/;\n\nconst commands = {};\n\n/**\n * @typedef {Object} SettingsAppStartupOptions\n * @property {number} timeout [5000] The maximum number of milliseconds\n * to wait until the app has started\n */\n\n/**\n * Ensures that Appium Settings helper application is running\n * and starts it if necessary\n *\n * @param {SettingsAppStartupOptions} opts\n * @throws {Error} If Appium Settings has failed to start\n * @returns {ADB} self instance for chaining\n */\ncommands.requireRunningSettingsApp = async function requireRunningSettingsApp (opts = {}) {\n  if (await this.processExists(SETTINGS_HELPER_ID)) {\n    return this;\n  }\n\n  log.debug('Starting Appium Settings app');\n  const {\n    timeout = 5000,\n  } = opts;\n  await this.startApp({\n    pkg: SETTINGS_HELPER_ID,\n    activity: SETTINGS_HELPER_MAIN_ACTIVITY,\n    action: 'android.intent.action.MAIN',\n    category: 'android.intent.category.LAUNCHER',\n    stopApp: false,\n    waitForLaunch: false,\n  });\n  try {\n    await waitForCondition(async () => await this.processExists(SETTINGS_HELPER_ID), {\n      waitMs: timeout,\n      intervalMs: 300,\n    });\n    return this;\n  } catch (err) {\n    throw new Error(`Appium Settings app is not running after ${timeout}ms`);\n  }\n};\n\n/**\n * Change the state of WiFi on the device under test.\n *\n * @param {boolean} on - True to enable and false to disable it.\n * @param {boolean} isEmulator [false] - Set it to true if the device under test\n *                                       is an emulator rather than a real device.\n */\ncommands.setWifiState = async function setWifiState (on, isEmulator = false) {\n  if (isEmulator) {\n    // The svc command does not require to be root since API 26\n    await this.shell(['svc', 'wifi', on ? 'enable' : 'disable'], {\n      privileged: await this.getApiLevel() < 26,\n    });\n  } else {\n    await this.shell([\n      'am', 'broadcast',\n      '-a', WIFI_CONNECTION_SETTING_ACTION,\n      '-n', WIFI_CONNECTION_SETTING_RECEIVER,\n      '--es', 'setstatus', on ? 'enable' : 'disable'\n    ]);\n  }\n};\n\n/**\n * Change the state of Data transfer on the device under test.\n *\n * @param {boolean} on - True to enable and false to disable it.\n * @param {boolean} isEmulator [false] - Set it to true if the device under test\n *                                       is an emulator rather than a real device.\n */\ncommands.setDataState = async function setDataState (on, isEmulator = false) {\n  if (isEmulator) {\n    // The svc command does not require to be root since API 26\n    await this.shell(['svc', 'data', on ? 'enable' : 'disable'], {\n      privileged: await this.getApiLevel() < 26,\n    });\n  } else {\n    await this.shell([\n      'am', 'broadcast',\n      '-a', DATA_CONNECTION_SETTING_ACTION,\n      '-n', DATA_CONNECTION_SETTING_RECEIVER,\n      '--es', 'setstatus', on ? 'enable' : 'disable'\n    ]);\n  }\n};\n\n/**\n * Change the state of animation on the device under test.\n * Animation on the device is controlled by the following global properties:\n * [ANIMATOR_DURATION_SCALE]{@link https://developer.android.com/reference/android/provider/Settings.Global.html#ANIMATOR_DURATION_SCALE},\n * [TRANSITION_ANIMATION_SCALE]{@link https://developer.android.com/reference/android/provider/Settings.Global.html#TRANSITION_ANIMATION_SCALE},\n * [WINDOW_ANIMATION_SCALE]{@link https://developer.android.com/reference/android/provider/Settings.Global.html#WINDOW_ANIMATION_SCALE}.\n * This method sets all this properties to 0.0 to disable (1.0 to enable) animation.\n *\n * Turning off animation might be useful to improve stability\n * and reduce tests execution time.\n *\n * @param {boolean} on - True to enable and false to disable it.\n */\ncommands.setAnimationState = async function setAnimationState (on) {\n  await this.shell([\n    'am', 'broadcast',\n    '-a', ANIMATION_SETTING_ACTION,\n    '-n', ANIMATION_SETTING_RECEIVER,\n    '--es', 'setstatus', on ? 'enable' : 'disable'\n  ]);\n};\n\n/**\n * Change the locale on the device under test. Don't need to reboot the device after changing the locale.\n * This method sets an arbitrary locale following:\n *   https://developer.android.com/reference/java/util/Locale.html\n *   https://developer.android.com/reference/java/util/Locale.html#Locale(java.lang.String,%20java.lang.String)\n *\n * @param {string} language - Language. e.g. en, ja\n * @param {string} country - Country. e.g. US, JP\n * @param {?string} script - Script. e.g. Hans in `zh-Hans-CN`\n */\ncommands.setDeviceSysLocaleViaSettingApp = async function setDeviceSysLocaleViaSettingApp (language, country, script = null) {\n  const params = [\n    'am', 'broadcast',\n    '-a', LOCALE_SETTING_ACTION,\n    '-n', LOCALE_SETTING_RECEIVER,\n    '--es', 'lang', language.toLowerCase(),\n    '--es', 'country', country.toUpperCase()\n  ];\n\n  if (script) {\n    params.push('--es', 'script', script);\n  }\n\n  await this.shell(params);\n};\n\n\n/**\n * @typedef {Object} Location\n * @property {number|string} longitude - Valid longitude value.\n * @property {number|string} latitude - Valid latitude value.\n * @property {?number|string} altitude - Valid altitude value.\n * @property {?number|string} satellites [12] - Number of satellites being tracked (1-12).\n * This value is ignored on real devices.\n * @property {?number|string} speed - Valid speed value.\n * Should be greater than 0.0 meters/second for real devices or 0.0 knots\n * for emulators.\n */\n\n/**\n * Emulate geolocation coordinates on the device under test.\n *\n * @param {Location} location - Location object. The `altitude` value is ignored\n * while mocking the position.\n * @param {boolean} isEmulator [false] - Set it to true if the device under test\n *                                       is an emulator rather than a real device.\n */\ncommands.setGeoLocation = async function setGeoLocation (location, isEmulator = false) {\n  const formatLocationValue = (valueName, isRequired = true) => {\n    if (!util.hasValue(location[valueName])) {\n      if (isRequired) {\n        throw new Error(`${valueName} must be provided`);\n      }\n      return null;\n    }\n    const floatValue = parseFloat(location[valueName]);\n    if (!isNaN(floatValue)) {\n      return `${_.ceil(floatValue, 5)}`;\n    }\n    if (isRequired) {\n      throw new Error(`${valueName} is expected to be a valid float number. ` +\n        `'${location[valueName]}' is given instead`);\n    }\n    return null;\n  };\n  const longitude = formatLocationValue('longitude');\n  const latitude = formatLocationValue('latitude');\n  const altitude = formatLocationValue('altitude', false);\n  const speed = formatLocationValue('speed', false);\n  if (isEmulator) {\n    const args = [longitude, latitude];\n    if (!_.isNil(altitude)) {\n      args.push(altitude);\n    }\n    const satellites = parseInt(location.satellites, 10);\n    if (!Number.isNaN(satellites) && satellites > 0 && satellites <= 12) {\n      if (args.length < 3) {\n        args.push(`${DEFAULT_ALTITUDE}`);\n      }\n      args.push(`${satellites}`);\n    }\n    if (!_.isNil(speed)) {\n      if (args.length < 3) {\n        args.push(`${DEFAULT_ALTITUDE}`);\n      }\n      if (args.length < 4) {\n        args.push(`${DEFAULT_SATELLITES_COUNT}`);\n      }\n      args.push(speed);\n    }\n    await this.resetTelnetAuthToken();\n    await this.adbExec(['emu', 'geo', 'fix', ...args]);\n    // A workaround for https://code.google.com/p/android/issues/detail?id=206180\n    await this.adbExec(['emu', 'geo', 'fix', ...(args.map((arg) => arg.replace('.', ',')))]);\n  } else {\n    const args = [\n      'am', (await this.getApiLevel() >= 26) ? 'start-foreground-service' : 'startservice',\n      '-e', 'longitude', longitude,\n      '-e', 'latitude', latitude,\n    ];\n    if (util.hasValue(altitude)) {\n      args.push('-e', 'altitude', altitude);\n    }\n    if (util.hasValue(speed)) {\n      args.push('-e', 'speed', speed);\n    }\n    args.push(LOCATION_SERVICE);\n    await this.shell(args);\n  }\n};\n\n/**\n * Get the current cached GPS location from the device under test.\n *\n * @returns {Location} The current location\n * @throws {Error} If the current location cannot be retrieved\n */\ncommands.getGeoLocation = async function getGeoLocation () {\n  let output;\n  try {\n    output = await this.shell([\n      'am', 'broadcast',\n      '-n', LOCATION_RECEIVER,\n      '-a', LOCATION_RETRIEVAL_ACTION,\n    ]);\n  } catch (err) {\n    throw new Error(`Cannot retrieve the current geo coordinates from the device. ` +\n      `Make sure the Appium Settings application is up to date and has location permissions. Also the location ` +\n      `services must be enabled on the device. Original error: ${err.stderr || err.stdout || err.message}`);\n  }\n\n  const match = GPS_COORDINATES_PATTERN.exec(output);\n  if (!match) {\n    throw new Error(`Cannot parse the actual location values from the command output: ${output}`);\n  }\n  const location = {\n    latitude: match[1],\n    longitude: match[2],\n    altitude: match[3],\n  };\n  log.debug(`Got geo coordinates: ${JSON.stringify(location)}`);\n  return location;\n};\n\n/**\n * Sends an async request to refresh the GPS cache.\n * This feature only works if the device under test has\n * Google Play Services installed. In case the vanilla\n * LocationManager is used the device API level must be at\n * version 30 (Android R) or higher.\n *\n * @param timeoutMs [20000] The maximum number of milliseconds\n * to block until GPS cache is refreshed. Providing zero or a negative\n * value to it skips waiting completely.\n *\n * @throws {Error} If the GPS cache cannot be refreshed.\n */\ncommands.refreshGeoLocationCache = async function refreshGeoLocationCache (timeoutMs = 20000) {\n  let logcatMonitor;\n  let monitoringPromise;\n\n  if (timeoutMs > 0) {\n    const cmd = [\n      ...this.adb.defaultArgs,\n      'logcat', '-s', LOCATION_TRACKER_TAG,\n    ];\n    logcatMonitor = new SubProcess(this.adb.path, cmd);\n    const timeoutErrorMsg = `The GPS cache has not been refreshed within ${timeoutMs}ms timeout. ` +\n      `Please make sure the device under test has Appium Settings app installed and running. ` +\n      `Also, it is required that the device has Google Play Services installed or is running ` +\n      `Android 10+ otherwise.`;\n    monitoringPromise = new B((resolve, reject) => {\n      setTimeout(() => reject(new Error(timeoutErrorMsg)), timeoutMs);\n\n      logcatMonitor.on('exit', () => reject(new Error(timeoutErrorMsg)));\n      ['lines-stderr', 'lines-stdout'].map((evt) => logcatMonitor.on(evt, (lines) => {\n        if (lines.some((line) => GPS_CACHE_REFRESHED_LOGS.some((x) => line.includes(x)))) {\n          resolve();\n        }\n      }));\n    });\n    await logcatMonitor.start(0);\n  }\n\n  try {\n    await this.shell([\n      'am', 'broadcast',\n      '-n', LOCATION_RECEIVER,\n      '-a', LOCATION_RETRIEVAL_ACTION,\n      '--ez', 'forceUpdate', 'true',\n    ]);\n  } catch (err) {\n    throw new Error(`Cannot refresh the GPS cache on the device. ` +\n      `Make sure the Appium Settings application is up to date and has location permissions. Also the location ` +\n      `services must be enabled on the device. Original error: ${err.stderr || err.stdout || err.message}`);\n  }\n\n  if (logcatMonitor && monitoringPromise) {\n    const timer = new timing.Timer().start();\n    log.debug(`Waiting up to ${timeoutMs}ms for the GPS cache to be refreshed`);\n    try {\n      await monitoringPromise;\n      log.info(`The GPS cache has been successfully refreshed after ` +\n        `${timer.getDuration().asMilliSeconds.toFixed(0)}ms`);\n    } finally {\n      if (logcatMonitor.isRunning) {\n        await logcatMonitor.stop();\n      }\n    }\n  } else {\n    log.info('The request to refresh the GPS cache has been sent. Skipping waiting for its result.');\n  }\n};\n\n/**\n * Performs the given editor action on the focused input field.\n * This method requires Appium Settings helper to be installed on the device.\n * No exception is thrown if there was a failure while performing the action.\n * You must investigate the logcat output if something did not work as expected.\n *\n * @param {string|number} action - Either action code or name. The following action\n *                                 names are supported: `normal, unspecified, none,\n *                                 go, search, send, next, done, previous`\n */\ncommands.performEditorAction = async function performEditorAction (action) {\n  log.debug(`Performing editor action: ${action}`);\n  await this.runInImeContext(APPIUM_IME,\n    async () => await this.shell(['input', 'text', `/${action}/`]));\n};\n\n/**\n * Retrieves the text content of the device's clipboard.\n * The method works for Android below and above 29.\n * It temorarily enforces the IME setting in order to workaround\n * security limitations if needed.\n * This method only works if Appium Settings v. 2.15+ is installed\n * on the device under test\n *\n * @returns {string} The actual content of the main clipboard as\n * base64-encoded string or an empty string if the clipboard is empty\n * @throws {Error} If there was a problem while getting the\n * clipboard contant\n */\ncommands.getClipboard = async function getClipboard () {\n  log.debug('Getting the clipboard content');\n  const retrieveClipboard = async () => await this.shell([\n    'am', 'broadcast',\n    '-n', CLIPBOARD_RECEIVER,\n    '-a', CLIPBOARD_RETRIEVAL_ACTION,\n  ]);\n  let output;\n  try {\n    output = (await this.getApiLevel() >= 29)\n      ? (await this.runInImeContext(APPIUM_IME, retrieveClipboard))\n      : (await retrieveClipboard());\n  } catch (err) {\n    throw new Error(`Cannot retrieve the current clipboard content from the device. ` +\n      `Make sure the Appium Settings application is up to date. ` +\n      `Original error: ${err.message}`);\n  }\n\n  const match = /data=\"([^\"]*)\"/.exec(output);\n  if (!match) {\n    throw new Error(`Cannot parse the actual cliboard content from the command output: ${output}`);\n  }\n  return _.trim(match[1]);\n};\n\n/**\n * Retrieves Android notifications via Appium Settings helper.\n * Appium Settings app itself must be *manually* granted to access notifications\n * under device Settings in order to make this feature working.\n * Appium Settings helper keeps all the active notifications plus\n * notifications that appeared while it was running in the internal buffer,\n * but no more than 100 items altogether. Newly appeared notifications\n * are always added to the head of the notifications array.\n * The `isRemoved` flag is set to `true` for notifications that have been removed.\n *\n * See https://developer.android.com/reference/android/service/notification/StatusBarNotification\n * and https://developer.android.com/reference/android/app/Notification.html\n * for more information on available notification properties and their values.\n *\n * @returns {Object} The example output is:\n * ```json\n * {\n *   \"statusBarNotifications\":[\n *     {\n *       \"isGroup\":false,\n *       \"packageName\":\"io.appium.settings\",\n *       \"isClearable\":false,\n *       \"isOngoing\":true,\n *       \"id\":1,\n *       \"tag\":null,\n *       \"notification\":{\n *         \"title\":null,\n *         \"bigTitle\":\"Appium Settings\",\n *         \"text\":null,\n *         \"bigText\":\"Keep this service running, so Appium for Android can properly interact with several system APIs\",\n *         \"tickerText\":null,\n *         \"subText\":null,\n *         \"infoText\":null,\n *         \"template\":\"android.app.Notification$BigTextStyle\"\n *       },\n *       \"userHandle\":0,\n *       \"groupKey\":\"0|io.appium.settings|1|null|10133\",\n *       \"overrideGroupKey\":null,\n *       \"postTime\":1576853518850,\n *       \"key\":\"0|io.appium.settings|1|null|10133\",\n *       \"isRemoved\":false\n *     }\n *   ]\n * }\n * ```\n * @throws {Error} If there was an error while getting the notifications list\n */\ncommands.getNotifications = async function getNotifications () {\n  log.debug('Retrieving notifications');\n  // Somehow providing the `-n` arg to the `am` underneath\n  // renders the broadcast to fail instead of starting the\n  // Appium Settings app. This only happens to the notifications\n  // receiver\n  await this.requireRunningSettingsApp();\n  let output;\n  try {\n    output = await this.shell([\n      'am', 'broadcast',\n      '-a', NOTIFICATIONS_RETRIEVAL_ACTION,\n    ]);\n  } catch (err) {\n    throw new Error(`Cannot retrieve notifications from the device. ` +\n      `Make sure the Appium Settings application is installed and is up to date. ` +\n      `Original error: ${err.message}`);\n  }\n  return parseJsonData(output, 'notifications');\n};\n\n/**\n * @typedef {Object} SmsListOptions\n * @property {number} max [100] - The maximum count of recent messages\n * to retrieve\n */\n\n/**\n * Retrieves the list of the most recent SMS\n * properties list via Appium Settings helper.\n * Messages are sorted by date in descending order.\n *\n * @param {SmsListOptions} opts\n * @returns {Object} The example output is:\n * ```json\n * {\n *   \"items\":[\n *     {\n *       \"id\":\"2\",\n *       \"address\":\"+123456789\",\n *       \"person\":null,\n *       \"date\":\"1581936422203\",\n *       \"read\":\"0\",\n *       \"status\":\"-1\",\n *       \"type\":\"1\",\n *       \"subject\":null,\n *       \"body\":\"\\\"text message2\\\"\",\n *       \"serviceCenter\":null\n *     },\n *     {\n *       \"id\":\"1\",\n *       \"address\":\"+123456789\",\n *       \"person\":null,\n *       \"date\":\"1581936382740\",\n *       \"read\":\"0\",\n *       \"status\":\"-1\",\n *       \"type\":\"1\",\n *       \"subject\":null,\n *       \"body\":\"\\\"text message\\\"\",\n *       \"serviceCenter\":null\n *     }\n *   ],\n *   \"total\":2\n * }\n * ```\n * @throws {Error} If there was an error while getting the SMS list\n */\ncommands.getSmsList = async function getSmsList (opts = {}) {\n  log.debug('Retrieving the recent SMS messages');\n  const args = [\n    'am', 'broadcast',\n    '-n', SMS_LIST_RECEIVER,\n    '-a', SMS_LIST_RETRIEVAL_ACTION,\n  ];\n  if (opts.max) {\n    args.push('--es', 'max', opts.max);\n  }\n  let output;\n  try {\n    output = await this.shell(args);\n  } catch (err) {\n    throw new Error(`Cannot retrieve SMS list from the device. ` +\n      `Make sure the Appium Settings application is installed and is up to date. ` +\n      `Original error: ${err.message}`);\n  }\n  return parseJsonData(output, 'SMS list');\n};\n\n/**\n * Types the given Unicode string.\n * It is expected that the focus is already put\n * to the destination input field before this method is called.\n *\n * @param {string} text The string to type\n * @returns {boolean} `true` if the input text has been successfully sent to adb\n */\ncommands.typeUnicode = async function typeUnicode (text) {\n  if (_.isNil(text)) {\n    return false;\n  }\n\n  text = `${text}`;\n  log.debug(`Typing ${util.pluralize('character', text.length, true)}`);\n  if (!text) {\n    return false;\n  }\n  await this.runInImeContext(\n    UNICODE_IME, async () => await this.inputText(imap.encode(text))\n  );\n  return true;\n};\n\n/**\n * Performs recursive media scan at the given destination.\n * All successfully scanned items are being added to the device's\n * media library.\n *\n * @param {string} destination File/folder path on the remote device.\n * @throws {Error} If there was an unexpected error by scanning.\n */\ncommands.scanMedia = async function scanMedia (destination) {\n  log.debug(`Scanning '${destination}' for media files`);\n  const output = await this.shell([\n    'am', 'broadcast',\n    '-n', MEDIA_SCAN_RECEIVER,\n    '-a', MEDIA_SCAN_ACTION,\n    '--es', 'path', destination\n  ]);\n  if (!_.includes(output, 'result=-1')) {\n    throw new Error(`No media could be scanned at '${destination}'. ` +\n      `Check the device logcat output for more details.`);\n  }\n};\n\nexport default commands;\n"],"mappings":"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"}