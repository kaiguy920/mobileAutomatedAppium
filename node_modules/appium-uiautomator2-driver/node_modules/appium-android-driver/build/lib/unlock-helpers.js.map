{"version":3,"file":"unlock-helpers.js","names":["PIN_UNLOCK","PIN_UNLOCK_KEY_EVENT","PASSWORD_UNLOCK","PATTERN_UNLOCK","FINGERPRINT_UNLOCK","UNLOCK_TYPES","KEYCODE_NUMPAD_ENTER","UNLOCK_WAIT_TIME","INPUT_KEYS_WAIT_TIME","NUMBER_ZERO_KEYCODE","helpers","validateUnlockCapabilities","caps","unlockKey","unlockType","_","isNil","Error","includes","test","trim","fastUnlock","adb","opts","credential","credentialType","logger","info","wasLockEnabled","isLockEnabled","clearLockCredential","cycleWakeUp","dismissKeyguard","setLockCredential","encodePassword","key","replace","stringKeyToArr","split","fingerprintUnlock","driver","capabilities","getApiLevel","fingerprint","sleep","pinUnlock","keys","els","findElOrEls","isEmpty","pinUnlockWithKeyEvent","pins","el","text","getAttribute","util","unwrapElement","pin","click","waitForUnlock","isScreenLocked","keyevent","shell","parseInt","passwordUnlock","getPatternKeyPosition","initPos","piece","cols","xPos","x","Math","round","yPos","y","ceil","getPatternActions","actions","lastPos","keyPos","push","action","options","element","moveTo","diffX","abs","diffY","patternUnlock","apiLevel","getLocation","size","getSize","width","performTouch"],"sources":["../../lib/unlock-helpers.js"],"sourcesContent":["import logger from './logger';\nimport { sleep } from 'asyncbox';\nimport _ from 'lodash';\nimport { util } from 'appium/support';\n\nconst PIN_UNLOCK = 'pin';\nconst PIN_UNLOCK_KEY_EVENT = 'pinWithKeyEvent';\nconst PASSWORD_UNLOCK = 'password';\nconst PATTERN_UNLOCK = 'pattern';\nconst FINGERPRINT_UNLOCK = 'fingerprint';\nconst UNLOCK_TYPES = [\n  PIN_UNLOCK, PIN_UNLOCK_KEY_EVENT, PASSWORD_UNLOCK,\n  PATTERN_UNLOCK, FINGERPRINT_UNLOCK\n];\nconst KEYCODE_NUMPAD_ENTER = 66;\nconst UNLOCK_WAIT_TIME = 100;\nconst INPUT_KEYS_WAIT_TIME = 100;\nconst NUMBER_ZERO_KEYCODE = 7;\n\nconst helpers = {};\n\nhelpers.validateUnlockCapabilities = function validateUnlockCapabilities (caps = {}) {\n  const {\n    unlockKey,\n    unlockType,\n  } = caps;\n  if (_.isNil(unlockKey) || unlockKey === '') {\n    throw new Error('A non-empty unlock key value must be provided');\n  }\n\n  if ([PIN_UNLOCK, PIN_UNLOCK_KEY_EVENT, FINGERPRINT_UNLOCK].includes(unlockType)) {\n    if (!/^[0-9]+$/.test(_.trim(unlockKey))) {\n      throw new Error(`Unlock key value '${unlockKey}' must only consist of digits`);\n    }\n  } else if (unlockType === PATTERN_UNLOCK) {\n    if (!/^[1-9]{2,9}$/.test(_.trim(unlockKey))) {\n      throw new Error(`Unlock key value '${unlockKey}' must only include from two to nine digits in range 1..9`);\n    }\n    if (/([1-9]).*?\\1/.test(_.trim(unlockKey))) {\n      throw new Error(`Unlock key value '${unlockKey}' must define a valid pattern where repeats are not allowed`);\n    }\n  } else if (unlockType === PASSWORD_UNLOCK) {\n    // Dont trim password key, you can use blank spaces in your android password\n    // ¯\\_(ツ)_/¯\n    if (!/.{4,}/g.test(unlockKey)) {\n      throw new Error(`The minimum allowed length of unlock key value '${unlockKey}' is 4 characters`);\n    }\n  } else {\n    throw new Error(`Invalid unlock type '${unlockType}'. ` +\n      `Only the following unlock types are supported: ${UNLOCK_TYPES}`);\n  }\n  return caps;\n};\n\nhelpers.fastUnlock = async function fastUnlock (adb, opts = {}) {\n  const {\n    credential,\n    credentialType,\n  } = opts;\n  logger.info(`Unlocking the device via ADB using ${credentialType} credential '${credential}'`);\n  const wasLockEnabled = await adb.isLockEnabled();\n  if (wasLockEnabled) {\n    await adb.clearLockCredential(credential);\n    // not sure why, but the device's screen still remains locked\n    // if a preliminary wake up cycle has not been performed\n    await adb.cycleWakeUp();\n  } else {\n    logger.info('No active lock has been detected. Proceeding to the keyguard dismissal');\n  }\n  try {\n    await adb.dismissKeyguard();\n  } finally {\n    if (wasLockEnabled) {\n      await adb.setLockCredential(credentialType, credential);\n    }\n  }\n};\n\nhelpers.encodePassword = function encodePassword (key) {\n  return `${key}`.replace(/\\s/ig, '%s');\n};\n\nhelpers.stringKeyToArr = function stringKeyToArr (key) {\n  return `${key}`.trim().replace(/\\s+/g, '').split(/\\s*/);\n};\n\nhelpers.fingerprintUnlock = async function fingerprintUnlock (adb, driver, capabilities) {\n  if (await adb.getApiLevel() < 23) {\n    throw new Error('Fingerprint unlock only works for Android 6+ emulators');\n  }\n  await adb.fingerprint(capabilities.unlockKey);\n  await sleep(UNLOCK_WAIT_TIME);\n};\n\nhelpers.pinUnlock = async function pinUnlock (adb, driver, capabilities) {\n  logger.info(`Trying to unlock device using pin ${capabilities.unlockKey}`);\n  await adb.dismissKeyguard();\n  const keys = helpers.stringKeyToArr(capabilities.unlockKey);\n  if (await adb.getApiLevel() >= 21) {\n    const els = await driver.findElOrEls('id', 'com.android.systemui:id/digit_text', true);\n    if (_.isEmpty(els)) {\n      // fallback to pin with key event\n      return await helpers.pinUnlockWithKeyEvent(adb, driver, capabilities);\n    }\n    const pins = {};\n    for (const el of els) {\n      const text = await driver.getAttribute('text', util.unwrapElement(el));\n      pins[text] = el;\n    }\n    for (const pin of keys) {\n      const el = pins[pin];\n      await driver.click(util.unwrapElement(el));\n    }\n  } else {\n    for (const pin of keys) {\n      const el = await driver.findElOrEls('id', `com.android.keyguard:id/key${pin}`, false);\n      if (el === null) {\n        // fallback to pin with key event\n        return await helpers.pinUnlockWithKeyEvent(adb, driver, capabilities);\n      }\n      await driver.click(util.unwrapElement(el));\n    }\n  }\n  await waitForUnlock(adb);\n};\n\n/**\n * Wait for the display to be unlocked.\n * Some devices automatically accept typed 'pin' and 'password' code\n * without pressing the Enter key. But some devices need it.\n * This method waits a few seconds first for such automatic acceptance case.\n * If the device is still locked, then this method will try to send\n * the enter key code.\n *\n * @param {ADB} adb The instance of ADB\n */\nasync function waitForUnlock (adb) {\n  await sleep(UNLOCK_WAIT_TIME);\n  if (!await adb.isScreenLocked()) {\n    return;\n  }\n\n  await adb.keyevent(KEYCODE_NUMPAD_ENTER);\n  await sleep(UNLOCK_WAIT_TIME);\n}\n\nhelpers.pinUnlockWithKeyEvent = async function pinUnlockWithKeyEvent (adb, driver, capabilities) {\n  logger.info(`Trying to unlock device using pin with keycode ${capabilities.unlockKey}`);\n  await adb.dismissKeyguard();\n  const keys = helpers.stringKeyToArr(capabilities.unlockKey);\n\n  // Some device does not have system key ids like 'com.android.keyguard:id/key'\n  // Then, sending keyevents are more reliable to unlock the screen.\n  for (const pin of keys) {\n    // 'pin' is number (0-9) in string.\n    // Number '0' is keycode '7'. number '9' is keycode '16'.\n    await adb.shell(['input', 'keyevent', parseInt(pin, 10) + NUMBER_ZERO_KEYCODE]);\n  }\n  await waitForUnlock(adb, driver);\n};\n\nhelpers.passwordUnlock = async function passwordUnlock (adb, driver, capabilities) {\n  const { unlockKey } = capabilities;\n  logger.info(`Trying to unlock device using password ${unlockKey}`);\n  await adb.dismissKeyguard();\n  // Replace blank spaces with %s\n  const key = helpers.encodePassword(unlockKey);\n  // Why adb ? It was less flaky\n  await adb.shell(['input', 'text', key]);\n  // Why sleeps ? Avoid some flakyness waiting for the input to receive the keys\n  await sleep(INPUT_KEYS_WAIT_TIME);\n  await adb.shell(['input', 'keyevent', KEYCODE_NUMPAD_ENTER]);\n  // Waits a bit for the device to be unlocked\n  await waitForUnlock(adb, driver);\n};\n\nhelpers.getPatternKeyPosition = function getPatternKeyPosition (key, initPos, piece) {\n  /*\n  How the math works:\n  We have 9 buttons divided in 3 columns and 3 rows inside the lockPatternView,\n  every button has a position on the screen corresponding to the lockPatternView since\n  it is the parent view right at the middle of each column or row.\n  */\n  const cols = 3;\n  const pins = 9;\n  const xPos = (key, x, piece) => Math.round(x + ((key % cols) || cols) * piece - piece / 2);\n  const yPos = (key, y, piece) => Math.round(y + (Math.ceil(((key % pins) || pins) / cols) * piece - piece / 2));\n  return {\n    x: xPos(key, initPos.x, piece),\n    y: yPos(key, initPos.y, piece)\n  };\n};\n\nhelpers.getPatternActions = function getPatternActions (keys, initPos, piece) {\n  const actions = [];\n  let lastPos;\n  for (let key of keys) {\n    const keyPos = helpers.getPatternKeyPosition(key, initPos, piece);\n    if (key === keys[0]) {\n      actions.push({action: 'press', options: {element: null, x: keyPos.x, y: keyPos.y}});\n      lastPos = keyPos;\n      continue;\n    }\n    const moveTo = {x: 0, y: 0};\n    const diffX = keyPos.x - lastPos.x;\n    if (diffX > 0) {\n      moveTo.x = piece;\n      if (Math.abs(diffX) > piece) {\n        moveTo.x += piece;\n      }\n    } else if (diffX < 0) {\n      moveTo.x = -1 * piece;\n      if (Math.abs(diffX) > piece) {\n        moveTo.x -= piece;\n      }\n    }\n    const diffY = keyPos.y - lastPos.y;\n    if (diffY > 0) {\n      moveTo.y = piece;\n      if (Math.abs(diffY) > piece) {\n        moveTo.y += piece;\n      }\n    } else if (diffY < 0) {\n      moveTo.y = -1 * piece;\n      if (Math.abs(diffY) > piece) {\n        moveTo.y -= piece;\n      }\n    }\n    actions.push({\n      action: 'moveTo',\n      options: {element: null, x: moveTo.x + lastPos.x, y: moveTo.y + lastPos.y}\n    });\n    lastPos = keyPos;\n  }\n  actions.push({action: 'release'});\n  return actions;\n};\n\nhelpers.patternUnlock = async function patternUnlock (adb, driver, capabilities) {\n  const { unlockKey } = capabilities;\n  logger.info(`Trying to unlock device using pattern ${unlockKey}`);\n  await adb.dismissKeyguard();\n  const keys = helpers.stringKeyToArr(unlockKey);\n  /* We set the device pattern buttons as number of a regular phone\n   *  | • • • |     | 1 2 3 |\n   *  | • • • | --> | 4 5 6 |\n   *  | • • • |     | 7 8 9 |\n\n  The pattern view buttons are not seeing by the uiautomator since they are\n  included inside a FrameLayout, so we are going to try clicking on the buttons\n  using the parent view bounds and math.\n  */\n  const apiLevel = await adb.getApiLevel();\n  const el = await driver.findElOrEls('id',\n    `com.android.${apiLevel >= 21 ? 'systemui' : 'keyguard'}:id/lockPatternView`,\n    false\n  );\n  const initPos = await driver.getLocation(util.unwrapElement(el));\n  const size = await driver.getSize(util.unwrapElement(el));\n  // Get actions to perform\n  const actions = helpers.getPatternActions(keys, initPos, size.width / 3);\n  // Perform gesture\n  await driver.performTouch(actions);\n  // Waits a bit for the device to be unlocked\n  await sleep(UNLOCK_WAIT_TIME);\n};\n\nhelpers.PIN_UNLOCK = PIN_UNLOCK;\nhelpers.PIN_UNLOCK_KEY_EVENT = PIN_UNLOCK_KEY_EVENT;\nhelpers.PASSWORD_UNLOCK = PASSWORD_UNLOCK;\nhelpers.PATTERN_UNLOCK = PATTERN_UNLOCK;\nhelpers.FINGERPRINT_UNLOCK = FINGERPRINT_UNLOCK;\n\nexport {\n  PIN_UNLOCK, PIN_UNLOCK_KEY_EVENT, PASSWORD_UNLOCK, PATTERN_UNLOCK,\n  FINGERPRINT_UNLOCK, helpers\n};\nexport default helpers;\n"],"mappings":"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"}