{"version":3,"file":"android-helpers.js","names":["MOCK_APP_IDS_STORE","PACKAGE_INSTALL_TIMEOUT","CHROME_BROWSER_PACKAGE_ACTIVITY","chrome","pkg","activity","chromium","chromebeta","browser","default","SETTINGS_HELPER_PKG_ID","SETTINGS_HELPER_UNLOCK_ACTIVITY","EMULATOR_PATTERN","APP_STATE","Object","freeze","NOT_INSTALLED","NOT_RUNNING","RUNNING_IN_BACKGROUND","RUNNING_IN_FOREGROUND","ensureNetworkSpeed","adb","networkSpeed","_","values","NETWORK_SPEED","includes","logger","warn","FULL","prepareAvdArgs","opts","isHeadless","avdArgs","result","isArray","push","util","shellParse","toCredentialType","unlockType","PIN_UNLOCK","PIN_UNLOCK_KEY_EVENT","PASSWORD_UNLOCK","PATTERN_UNLOCK","Error","helpers","createBaseADB","adbPort","suppressKillServer","remoteAdbHost","clearDeviceLogsOnStart","adbExecTimeout","useKeystore","keystorePath","keystorePassword","keyAlias","keyPassword","remoteAppsCacheLimit","buildToolsVersion","allowOfflineDevices","allowDelayAdb","ADB","createADB","prepareEmulator","avd","avdEnv","env","language","locale","country","avdLaunchTimeout","launchTimeout","avdReadyTimeout","readyTimeout","avdName","replace","isEmulatorRunning","getRunningAVDWithRetry","e","debug","message","args","killEmulator","launchAVD","ensureDeviceLocale","script","isString","setDeviceLanguageCountry","ensureCurrentLocale","getDeviceInfoFromCaps","udid","emPort","curDeviceId","emulatorPort","info","devices","getDevicesWithRetry","map","errorAndThrow","getPortFromEmulatorString","platformVersion","trim","semver","coerce","availDevices","partialMatchCandidate","device","setDeviceId","rawDeviceOS","getPlatformVersion","deviceOS","bothVersionsCanBeCoerced","valid","bothVersionsAreStrings","version","toLower","major","minor","gt","keys","join","setEmulatorPort","validatePackageActivityNames","key","name","match","exec","index","substring","getLaunchInfo","app","appPackage","appActivity","appWaitPackage","appWaitActivity","apkPackage","apkActivity","packageAndLaunchActivityFromManifest","resetApp","fastReset","fullReset","androidInstallTimeout","autoGrantPermissions","allowTestPackages","isInstalled","isAppInstalled","forceStop","ign","output","clear","toLowerCase","grantAllPermissions","error","uninstallApk","install","grantPermissions","timeout","installApk","enforceAppInstall","appState","wasUninstalled","installOrUpgrade","enforceCurrentBuild","isInstalledOverExistingApp","APP_INSTALL_STATE","installOtherApks","otherApps","B","all","otherApp","uninstallOtherPackages","appPackages","filterPackages","getThirdPartyPackages","packagesString","shell","appPackagesArray","split","EOL","difference","err","initUnicodeKeyboard","defaultIME","appiumIME","enableIME","setIME","setMockLocationApp","getApiLevel","pkgIds","fileExists","JSON","parse","tmpRoot","tempDir","openDir","srcPath","path","posix","basename","fs","writeFile","stringify","pushFile","rimraf","resetMockLocation","thirdPartyPkgIdsPromise","thirdPartyPkgIds","resultPkgs","intersection","size","pkgId","installHelperApp","apkPath","packageId","retry","retryInstallHelperApp","pushSettingsApp","throwError","settingsApkPath","processExists","apiLevel","perms","x","requireRunningSettingsApp","isEmulator","pushStrings","remoteDir","stringsJson","remoteFile","resolve","pullApk","tmpDir","isEmpty","exists","stringsTmpDir","apkStrings","localPath","extractStringsFromApk","unlockWithHelperApp","firstRun","launchHelper","isScreenLocked","delay","unlock","driver","capabilities","unlockKey","unlockStrategy","unlockSuccessTimeout","unlocker","validateUnlockCapabilities","FINGERPRINT_UNLOCK","isNil","isLockManagementSupported","fastUnlock","credential","credentialType","unlockMethod","pinUnlock","pinUnlockWithKeyEvent","passwordUnlock","patternUnlock","fingerprintUnlock","verifyUnlock","timeoutMs","waitForCondition","waitMs","intervalMs","initDevice","skipDeviceInitialization","localeScript","unicodeKeyboard","disableWindowAnimation","skipUnlock","mockLocationApp","skipLogcatCapture","logcatFormat","logcatFilterSpecs","waitForDevice","shouldThrowError","isUndefined","startLogcat","format","filterSpecs","removeNullProperties","obj","isNull","truncateDecimals","number","digits","multiplier","Math","pow","adjustedNum","truncatedNum","isChromeBrowser","getChromePkg","removeAllSessionWebSocketHandlers","server","sessionId","isFunction","getWebSocketHandlers","activeHandlers","pathname","removeWebSocketHandler","parseArray","cap","parsedCaps","validateDesiredCaps","caps","browserName","adjustBrowserSessionCaps","possibleNames","some","test","bootstrap","Bootstrap"],"sources":["../../lib/android-helpers.js"],"sourcesContent":["import _ from 'lodash';\nimport path from 'path';\nimport { retry, waitForCondition } from 'asyncbox';\nimport logger from './logger';\nimport { fs, util, tempDir } from 'appium/support';\nimport { path as settingsApkPath } from 'io.appium.settings';\nimport Bootstrap from './bootstrap';\nimport B from 'bluebird';\nimport ADB from 'appium-adb';\nimport {\n  default as unlocker, PIN_UNLOCK, PIN_UNLOCK_KEY_EVENT,\n  PASSWORD_UNLOCK, PATTERN_UNLOCK, FINGERPRINT_UNLOCK\n} from './unlock-helpers';\nimport { EOL } from 'os';\nimport semver from 'semver';\n\nconst MOCK_APP_IDS_STORE = '/data/local/tmp/mock_apps.json';\nconst PACKAGE_INSTALL_TIMEOUT = 90000; // milliseconds\n// https://cs.chromium.org/chromium/src/chrome/browser/devtools/device/android_device_info_query.cc\nconst CHROME_BROWSER_PACKAGE_ACTIVITY = {\n  chrome: {\n    pkg: 'com.android.chrome',\n    activity: 'com.google.android.apps.chrome.Main',\n  },\n  chromium: {\n    pkg: 'org.chromium.chrome.shell',\n    activity: '.ChromeShellActivity',\n  },\n  chromebeta: {\n    pkg: 'com.chrome.beta',\n    activity: 'com.google.android.apps.chrome.Main',\n  },\n  browser: {\n    pkg: 'com.android.browser',\n    activity: 'com.android.browser.BrowserActivity',\n  },\n  'chromium-browser': {\n    pkg: 'org.chromium.chrome',\n    activity: 'com.google.android.apps.chrome.Main',\n  },\n  'chromium-webview': {\n    pkg: 'org.chromium.webview_shell',\n    activity: 'org.chromium.webview_shell.WebViewBrowserActivity',\n  },\n  default: {\n    pkg: 'com.android.chrome',\n    activity: 'com.google.android.apps.chrome.Main',\n  },\n};\nconst SETTINGS_HELPER_PKG_ID = 'io.appium.settings';\nconst SETTINGS_HELPER_UNLOCK_ACTIVITY = '.Unlock';\nconst EMULATOR_PATTERN = /\\bemulator\\b/i;\n// These constants are in sync with\n// https://developer.apple.com/documentation/xctest/xcuiapplicationstate/xcuiapplicationstaterunningbackground?language=objc\nconst APP_STATE = Object.freeze({\n  NOT_INSTALLED: 0,\n  NOT_RUNNING: 1,\n  RUNNING_IN_BACKGROUND: 3,\n  RUNNING_IN_FOREGROUND: 4\n});\n\n\nfunction ensureNetworkSpeed (adb, networkSpeed) {\n  if (_.values(adb.NETWORK_SPEED).includes(networkSpeed)) {\n    return networkSpeed;\n  }\n  logger.warn(`Wrong network speed param '${networkSpeed}', using default: ${adb.NETWORK_SPEED.FULL}. ` +\n    `Supported values: ${_.values(adb.NETWORK_SPEED)}`);\n  return adb.NETWORK_SPEED.FULL;\n}\n\nfunction prepareAvdArgs (adb, opts) {\n  const {\n    networkSpeed,\n    isHeadless,\n    avdArgs,\n  } = opts;\n  const result = [];\n  if (avdArgs) {\n    if (_.isArray(avdArgs)) {\n      result.push(...avdArgs);\n    } else {\n      result.push(...(util.shellParse(`${avdArgs}`)));\n    }\n  }\n  if (networkSpeed) {\n    result.push('-netspeed', ensureNetworkSpeed(adb, networkSpeed));\n  }\n  if (isHeadless) {\n    result.push('-no-window');\n  }\n  return result;\n}\n\nfunction toCredentialType (unlockType) {\n  const result = {\n    [PIN_UNLOCK]: 'pin',\n    [PIN_UNLOCK_KEY_EVENT]: 'pin',\n    [PASSWORD_UNLOCK]: 'password',\n    [PATTERN_UNLOCK]: 'pattern',\n  }[unlockType];\n  if (result) {\n    return result;\n  }\n  throw new Error(`Unlock type '${unlockType}' is not known`);\n}\n\n\nconst helpers = {};\n\nhelpers.createBaseADB = async function createBaseADB (opts = {}) {\n  // filter out any unwanted options sent in\n  // this list should be updated as ADB takes more arguments\n  const {\n    adbPort,\n    suppressKillServer,\n    remoteAdbHost,\n    clearDeviceLogsOnStart,\n    adbExecTimeout,\n    useKeystore,\n    keystorePath,\n    keystorePassword,\n    keyAlias,\n    keyPassword,\n    remoteAppsCacheLimit,\n    buildToolsVersion,\n    allowOfflineDevices,\n    allowDelayAdb,\n  } = opts;\n  return await ADB.createADB({\n    adbPort,\n    suppressKillServer,\n    remoteAdbHost,\n    clearDeviceLogsOnStart,\n    adbExecTimeout,\n    useKeystore,\n    keystorePath,\n    keystorePassword,\n    keyAlias,\n    keyPassword,\n    remoteAppsCacheLimit,\n    buildToolsVersion,\n    allowOfflineDevices,\n    allowDelayAdb,\n  });\n};\n\nhelpers.prepareEmulator = async function prepareEmulator (adb, opts) {\n  const {\n    avd,\n    avdEnv: env,\n    language,\n    locale: country,\n    avdLaunchTimeout: launchTimeout,\n    avdReadyTimeout: readyTimeout,\n  } = opts;\n  if (!avd) {\n    throw new Error('Cannot launch AVD without AVD name');\n  }\n\n  const avdName = avd.replace('@', '');\n  let isEmulatorRunning = true;\n  try {\n    await adb.getRunningAVDWithRetry(avdName, 5000);\n  } catch (e) {\n    logger.debug(`Emulator '${avdName}' is not running: ${e.message}`);\n    isEmulatorRunning = false;\n  }\n  const args = prepareAvdArgs(adb, opts);\n  if (isEmulatorRunning) {\n    if (args.includes('-wipe-data')) {\n      logger.debug(`Killing '${avdName}' because it needs to be wiped at start.`);\n      await adb.killEmulator(avdName);\n    } else {\n      logger.debug('Not launching AVD because it is already running.');\n      return;\n    }\n  }\n  await adb.launchAVD(avd, {\n    args,\n    env,\n    language,\n    country,\n    launchTimeout,\n    readyTimeout,\n  });\n};\n\n/**\n * Set and ensure the locale name of the device under test.\n *\n * @param {Object} adb - The adb module instance.\n * @param {string} language - Language. The language field is case insensitive, but Locale always canonicalizes to lower case.\n *                            format: [a-zA-Z]{2,8}. e.g. en, ja : https://developer.android.com/reference/java/util/Locale.html\n * @param {string} country - Country. The country (region) field is case insensitive, but Locale always canonicalizes to upper case.\n *                            format: [a-zA-Z]{2} | [0-9]{3}. e.g. US, JP : https://developer.android.com/reference/java/util/Locale.html\n * @param {?string} script - Script. The script field is case insensitive but Locale always canonicalizes to title case.\n *                            format: [a-zA-Z]{4}. e.g. Hans in zh-Hans-CN : https://developer.android.com/reference/java/util/Locale.html\n * @throws {Error} If it failed to set locale properly\n */\nhelpers.ensureDeviceLocale = async function ensureDeviceLocale (adb, language, country, script = null) {\n  if (!_.isString(language) && !_.isString(country)) {\n    logger.warn(`setDeviceLanguageCountry requires language or country.`);\n    logger.warn(`Got language: '${language}' and country: '${country}'`);\n    return;\n  }\n\n  await adb.setDeviceLanguageCountry(language, country, script);\n\n  if (!await adb.ensureCurrentLocale(language, country, script)) {\n    const message = script ? `language: ${language}, country: ${country} and script: ${script}` : `language: ${language} and country: ${country}`;\n    throw new Error(`Failed to set ${message}`);\n  }\n};\n\nhelpers.getDeviceInfoFromCaps = async function getDeviceInfoFromCaps (opts = {}) {\n  // we can create a throwaway ADB instance here, so there is no dependency\n  // on instantiating on earlier (at this point, we have no udid)\n  // we can only use this ADB object for commands that would not be confused\n  // if multiple devices are connected\n  const adb = await helpers.createBaseADB(opts);\n  let udid = opts.udid;\n  let emPort = null;\n\n  // a specific avd name was given. try to initialize with that\n  if (opts.avd) {\n    await helpers.prepareEmulator(adb, opts);\n    udid = adb.curDeviceId;\n    emPort = adb.emulatorPort;\n  } else {\n    // no avd given. lets try whatever's plugged in devices/emulators\n    logger.info('Retrieving device list');\n    let devices = await adb.getDevicesWithRetry();\n\n    // udid was given, lets try to init with that device\n    if (udid) {\n      if (!_.includes(_.map(devices, 'udid'), udid)) {\n        logger.errorAndThrow(`Device ${udid} was not in the list of connected devices`);\n      }\n      emPort = adb.getPortFromEmulatorString(udid);\n    } else if (opts.platformVersion) {\n      opts.platformVersion = `${opts.platformVersion}`.trim();\n\n      // a platform version was given. lets try to find a device with the same os\n      const platformVersion = semver.coerce(opts.platformVersion) || opts.platformVersion;\n      logger.info(`Looking for a device with Android '${platformVersion}'`);\n\n      // in case we fail to find something, give the user a useful log that has\n      // the device udids and os versions so they know what's available\n      const availDevices = [];\n      let partialMatchCandidate = null;\n      // first try started devices/emulators\n      for (const device of devices) {\n        // direct adb calls to the specific device\n        await adb.setDeviceId(device.udid);\n        const rawDeviceOS = await adb.getPlatformVersion();\n        // The device OS could either be a number, like `6.0`\n        // or an abbreviation, like `R`\n        availDevices.push(`${device.udid} (${rawDeviceOS})`);\n        const deviceOS = semver.coerce(rawDeviceOS) || rawDeviceOS;\n        if (!deviceOS) {\n          continue;\n        }\n\n        const bothVersionsCanBeCoerced = semver.valid(deviceOS) && semver.valid(platformVersion);\n        const bothVersionsAreStrings = _.isString(deviceOS) && _.isString(platformVersion);\n        if (bothVersionsCanBeCoerced && deviceOS.version === platformVersion.version\n            || bothVersionsAreStrings && _.toLower(deviceOS) === _.toLower(platformVersion)) {\n          // Got an exact match - proceed immediately\n          udid = device.udid;\n          break;\n        } else if (!bothVersionsCanBeCoerced) {\n          // There is no point to check for partial match if either of version numbers is not coercible\n          continue;\n        }\n\n        if ((!_.includes(opts.platformVersion, '.') && platformVersion.major === deviceOS.major\n            || platformVersion.major === deviceOS.major && platformVersion.minor === deviceOS.minor)\n            // Got a partial match - make sure we consider the most recent\n            // device version available on the host system\n            && (partialMatchCandidate && semver.gt(deviceOS, _.values(partialMatchCandidate)[0])\n                || !partialMatchCandidate)) {\n          partialMatchCandidate = {[device.udid]: deviceOS};\n        }\n      }\n      if (!udid && partialMatchCandidate) {\n        udid = _.keys(partialMatchCandidate)[0];\n        await adb.setDeviceId(udid);\n      }\n\n      if (!udid) {\n        // we couldn't find anything! quit\n        logger.errorAndThrow(`Unable to find an active device or emulator ` +\n          `with OS ${opts.platformVersion}. The following are available: ` +\n          availDevices.join(', '));\n      }\n\n      emPort = adb.getPortFromEmulatorString(udid);\n    } else {\n      // a udid was not given, grab the first device we see\n      udid = devices[0].udid;\n      emPort = adb.getPortFromEmulatorString(udid);\n    }\n  }\n\n  logger.info(`Using device: ${udid}`);\n  return {udid, emPort};\n};\n\n// returns a new adb instance with deviceId set\nhelpers.createADB = async function createADB (opts = {}) {\n  const {udid, emPort} = opts;\n  const adb = await helpers.createBaseADB(opts);\n  adb.setDeviceId(udid);\n  if (emPort) {\n    adb.setEmulatorPort(emPort);\n  }\n\n  return adb;\n};\n\nhelpers.validatePackageActivityNames = function validatePackageActivityNames (opts) {\n  for (const key of ['appPackage', 'appActivity', 'appWaitPackage', 'appWaitActivity']) {\n    const name = opts[key];\n    if (!name) {\n      continue;\n    }\n\n    const match = /([^\\w.*,])+/.exec(name);\n    if (!match) {\n      continue;\n    }\n\n    logger.warn(`Capability '${key}' is expected to only include latin letters, digits, underscore, dot, comma and asterisk characters.`);\n    logger.warn(`Current value '${name}' has non-matching character at index ${match.index}: '${name.substring(0, match.index + 1)}'`);\n  }\n};\n\nhelpers.getLaunchInfo = async function getLaunchInfo (adb, opts) {\n  let {app, appPackage, appActivity, appWaitPackage, appWaitActivity} = opts;\n  if (!app) {\n    logger.warn('No app sent in, not parsing package/activity');\n    return;\n  }\n\n  this.validatePackageActivityNames(opts);\n\n  if (appPackage && appActivity) {\n    return;\n  }\n\n  logger.debug('Parsing package and activity from app manifest');\n  let {apkPackage, apkActivity} =\n    await adb.packageAndLaunchActivityFromManifest(app);\n  if (apkPackage && !appPackage) {\n    appPackage = apkPackage;\n  }\n  if (!appWaitPackage) {\n    appWaitPackage = appPackage;\n  }\n  if (apkActivity && !appActivity) {\n    appActivity = apkActivity;\n  }\n  if (!appWaitActivity) {\n    appWaitActivity = appActivity;\n  }\n  logger.debug(`Parsed package and activity are: ${apkPackage}/${apkActivity}`);\n  return {appPackage, appWaitPackage, appActivity, appWaitActivity};\n};\n\nhelpers.resetApp = async function resetApp (adb, opts = {}) {\n  const {\n    app,\n    appPackage,\n    fastReset,\n    fullReset,\n    androidInstallTimeout = PACKAGE_INSTALL_TIMEOUT,\n    autoGrantPermissions,\n    allowTestPackages\n  } = opts;\n\n  if (!appPackage) {\n    throw new Error(\"'appPackage' option is required\");\n  }\n\n  const isInstalled = await adb.isAppInstalled(appPackage);\n\n  if (isInstalled) {\n    try {\n      await adb.forceStop(appPackage);\n    } catch (ign) {}\n    // fullReset has priority over fastReset\n    if (!fullReset && fastReset) {\n      const output = await adb.clear(appPackage);\n      if (_.isString(output) && output.toLowerCase().includes('failed')) {\n        throw new Error(`Cannot clear the application data of '${appPackage}'. Original error: ${output}`);\n      }\n      // executing `shell pm clear` resets previously assigned application permissions as well\n      if (autoGrantPermissions) {\n        try {\n          await adb.grantAllPermissions(appPackage);\n        } catch (error) {\n          logger.error(`Unable to grant permissions requested. Original error: ${error.message}`);\n        }\n      }\n      logger.debug(`Performed fast reset on the installed '${appPackage}' application (stop and clear)`);\n      return;\n    }\n  }\n\n  if (!app) {\n    throw new Error(\"'app' option is required for reinstall\");\n  }\n\n  logger.debug(`Running full reset on '${appPackage}' (reinstall)`);\n  if (isInstalled) {\n    await adb.uninstallApk(appPackage);\n  }\n  await adb.install(app, {\n    grantPermissions: autoGrantPermissions,\n    timeout: androidInstallTimeout,\n    allowTestPackages,\n  });\n};\n\nhelpers.installApk = async function installApk (adb, opts = {}) {\n  const {\n    app,\n    appPackage,\n    fastReset,\n    fullReset,\n    androidInstallTimeout = PACKAGE_INSTALL_TIMEOUT,\n    autoGrantPermissions,\n    allowTestPackages,\n    enforceAppInstall,\n  } = opts;\n\n  if (!app || !appPackage) {\n    throw new Error(\"'app' and 'appPackage' options are required\");\n  }\n\n  if (fullReset) {\n    await this.resetApp(adb, opts);\n    return;\n  }\n\n  const {\n    appState,\n    wasUninstalled\n  } = await adb.installOrUpgrade(app, appPackage, {\n    grantPermissions: autoGrantPermissions,\n    timeout: androidInstallTimeout,\n    allowTestPackages,\n    enforceCurrentBuild: enforceAppInstall,\n  });\n\n  // There is no need to reset the newly installed app\n  const isInstalledOverExistingApp = !wasUninstalled\n    && appState !== adb.APP_INSTALL_STATE.NOT_INSTALLED;\n  if (fastReset && isInstalledOverExistingApp) {\n    logger.info(`Performing fast reset on '${appPackage}'`);\n    await this.resetApp(adb, opts);\n  }\n};\n\n/**\n * Installs an array of apks\n * @param {ADB} adb Instance of Appium ADB object\n * @param {Object} opts Opts defined in driver.js\n */\nhelpers.installOtherApks = async function installOtherApks (otherApps, adb, opts) {\n  let {\n    androidInstallTimeout = PACKAGE_INSTALL_TIMEOUT,\n    autoGrantPermissions,\n    allowTestPackages\n  } = opts;\n\n  // Install all of the APK's asynchronously\n  await B.all(otherApps.map((otherApp) => {\n    logger.debug(`Installing app: ${otherApp}`);\n    return adb.installOrUpgrade(otherApp, null, {\n      grantPermissions: autoGrantPermissions,\n      timeout: androidInstallTimeout,\n      allowTestPackages,\n    });\n  }));\n};\n\n/**\n * Uninstall an array of packages\n * @param {ADB} adb Instance of Appium ADB object\n * @param {Array<string>} appPackages An array of package names to uninstall. If this includes `'*'`, uninstall all of 3rd party apps\n * @param {Array<string>} filterPackages An array of packages does not uninstall when `*` is provided as `appPackages`\n */\nhelpers.uninstallOtherPackages = async function uninstallOtherPackages (adb, appPackages, filterPackages = []) {\n  if (appPackages.includes('*')) {\n    logger.debug('Uninstall third party packages');\n    appPackages = await this.getThirdPartyPackages(adb, filterPackages);\n  }\n\n  logger.debug(`Uninstalling packages: ${appPackages}`);\n  await B.all(appPackages.map((appPackage) => adb.uninstallApk(appPackage)));\n};\n\n/**\n * Get third party packages filtered with `filterPackages`\n * @param {ADB} adb Instance of Appium ADB object\n * @param {Array<string>} filterPackages An array of packages does not uninstall when `*` is provided as `appPackages`\n * @returns {Array<string>} An array of installed third pary packages\n */\nhelpers.getThirdPartyPackages = async function getThirdPartyPackages (adb, filterPackages = []) {\n  try {\n    const packagesString = await adb.shell(['pm', 'list', 'packages', '-3']);\n    const appPackagesArray = packagesString.trim().replace(/package:/g, '').split(EOL);\n    logger.debug(`'${appPackagesArray}' filtered with '${filterPackages}'`);\n    return _.difference(appPackagesArray, filterPackages);\n  } catch (err) {\n    logger.warn(`Unable to get packages with 'adb shell pm list packages -3': ${err.message}`);\n    return [];\n  }\n};\n\nhelpers.initUnicodeKeyboard = async function initUnicodeKeyboard (adb) {\n  logger.debug('Enabling Unicode keyboard support');\n\n  // get the default IME so we can return back to it later if we want\n  let defaultIME = await adb.defaultIME();\n\n  logger.debug(`Unsetting previous IME ${defaultIME}`);\n  const appiumIME = `${SETTINGS_HELPER_PKG_ID}/.UnicodeIME`;\n  logger.debug(`Setting IME to '${appiumIME}'`);\n  await adb.enableIME(appiumIME);\n  await adb.setIME(appiumIME);\n  return defaultIME;\n};\n\nhelpers.setMockLocationApp = async function setMockLocationApp (adb, app) {\n  try {\n    if (await adb.getApiLevel() < 23) {\n      await adb.shell(['settings', 'put', 'secure', 'mock_location', '1']);\n    } else {\n      await adb.shell(['appops', 'set', app, 'android:mock_location', 'allow']);\n    }\n  } catch (err) {\n    logger.warn(`Unable to set mock location for app '${app}': ${err.message}`);\n    return;\n  }\n  try {\n    let pkgIds = [];\n    if (await adb.fileExists(MOCK_APP_IDS_STORE)) {\n      try {\n        pkgIds = JSON.parse(await adb.shell(['cat', MOCK_APP_IDS_STORE]));\n      } catch (ign) {}\n    }\n    if (pkgIds.includes(app)) {\n      return;\n    }\n    pkgIds.push(app);\n    const tmpRoot = await tempDir.openDir();\n    const srcPath = path.posix.join(tmpRoot, path.posix.basename(MOCK_APP_IDS_STORE));\n    try {\n      await fs.writeFile(srcPath, JSON.stringify(pkgIds), 'utf8');\n      await adb.pushFile(srcPath, MOCK_APP_IDS_STORE);\n    } finally {\n      await fs.rimraf(tmpRoot);\n    }\n  } catch (e) {\n    logger.warn(`Unable to persist mock location app id '${app}': ${e.message}`);\n  }\n};\n\nhelpers.resetMockLocation = async function resetMockLocation (adb) {\n  try {\n    if (await adb.getApiLevel() < 23) {\n      await adb.shell(['settings', 'put', 'secure', 'mock_location', '0']);\n      return;\n    }\n\n    const thirdPartyPkgIdsPromise = helpers.getThirdPartyPackages(adb);\n    let pkgIds = [];\n    if (await adb.fileExists(MOCK_APP_IDS_STORE)) {\n      try {\n        pkgIds = JSON.parse(await adb.shell(['cat', MOCK_APP_IDS_STORE]));\n      } catch (ign) {}\n    }\n    const thirdPartyPkgIds = await thirdPartyPkgIdsPromise;\n    // Only include currently installed packages\n    const resultPkgs = _.intersection(pkgIds, thirdPartyPkgIds);\n    if (_.size(resultPkgs) <= 1) {\n      await adb.shell(['appops', 'set', resultPkgs[0] ?? SETTINGS_HELPER_PKG_ID, 'android:mock_location', 'deny']);\n      return;\n    }\n\n    logger.debug(`Resetting mock_location permission for the following apps: ${resultPkgs}`);\n    await B.all(resultPkgs.map((pkgId) => (async () => {\n      try {\n        await adb.shell(['appops', 'set', pkgId, 'android:mock_location', 'deny']);\n      } catch (ign) {}\n    })()));\n  } catch (err) {\n    logger.warn(`Unable to reset mock location: ${err.message}`);\n  }\n};\n\nhelpers.installHelperApp = async function installHelperApp (adb, apkPath, packageId) {\n  // Sometimes adb push or adb instal take more time than expected to install an app\n  // e.g. https://github.com/appium/io.appium.settings/issues/40#issuecomment-476593174\n  await retry(2, async function retryInstallHelperApp () {\n    await adb.installOrUpgrade(apkPath, packageId, {grantPermissions: true});\n  });\n};\n\n/**\n * Pushes and installs io.appium.settings app.\n * Throws an error if the setting app is required\n *\n * @param {Adb} adb - The adb module instance.\n * @param {Object} opts - Driver options dictionary.\n * @param {boolean} throwError [false] - Whether throw an error if Settings app fails to start\n * @throws {Error} If throwError is true and something happens in installation step\n */\nhelpers.pushSettingsApp = async function pushSettingsApp (adb, throwError = false, opts = {}) {\n  logger.debug('Pushing settings apk to device...');\n\n  try {\n    await helpers.installHelperApp(adb, settingsApkPath, SETTINGS_HELPER_PKG_ID, throwError);\n  } catch (err) {\n    if (throwError) {\n      throw err;\n    }\n\n    logger.warn(`Ignored error while installing '${settingsApkPath}': ` +\n                `'${err.message}'. Features that rely on this helper ` +\n                'require the apk such as toggle WiFi and getting location ' +\n                'will raise an error if you try to use them.');\n  }\n\n  // Reinstall would stop the settings helper process anyway, so\n  // there is no need to continue if the application is still running\n  if (await adb.processExists(SETTINGS_HELPER_PKG_ID)) {\n    logger.debug(`${SETTINGS_HELPER_PKG_ID} is already running. ` +\n      `There is no need to reset its permissions.`);\n    return;\n  }\n\n  const apiLevel = await adb.getApiLevel();\n  if (apiLevel >= 29) {\n    // https://github.com/appium/io.appium.settings#internal-audio--video-recording\n    try {\n      await adb.shell(['appops', 'set', SETTINGS_HELPER_PKG_ID, 'PROJECT_MEDIA', 'allow']);\n    } catch (err) {\n      logger.debug(err);\n    }\n  }\n  if (apiLevel <= 23) { // Android 6- devices should have granted permissions\n    // https://github.com/appium/appium/pull/11640#issuecomment-438260477\n    const perms = ['SET_ANIMATION_SCALE', 'CHANGE_CONFIGURATION', 'ACCESS_FINE_LOCATION'];\n    logger.info(`Granting permissions ${perms} to '${SETTINGS_HELPER_PKG_ID}'`);\n    await adb.grantPermissions(SETTINGS_HELPER_PKG_ID, perms.map((x) => `android.permission.${x}`));\n  }\n\n  // launch io.appium.settings app due to settings failing to be set\n  // if the app is not launched prior to start the session on android 7+\n  // see https://github.com/appium/appium/issues/8957\n  try {\n    await adb.requireRunningSettingsApp({\n      timeout: helpers.isEmulator(adb, opts) ? 30000 : 5000\n    });\n  } catch (err) {\n    logger.debug(err);\n    if (throwError) {\n      throw err;\n    }\n  }\n};\n\n/**\n * Extracts string.xml and converts it to string.json and pushes\n * it to /data/local/tmp/string.json on for use of bootstrap\n * If app is not present to extract string.xml it deletes remote strings.json\n * If app does not have strings.xml we push an empty json object to remote\n *\n * @param {?string} language - Language abbreviation, for example 'fr'. The default language\n * is used if this argument is not defined.\n * @param {Object} adb - The adb module instance.\n * @param {Object} opts - Driver options dictionary.\n * @returns {Object} The dictionary, where string resource identifiers are keys\n * along with their corresponding values for the given language or an empty object\n * if no matching resources were extracted.\n */\nhelpers.pushStrings = async function pushStrings (language, adb, opts) {\n  const remoteDir = '/data/local/tmp';\n  const stringsJson = 'strings.json';\n  const remoteFile = path.posix.resolve(remoteDir, stringsJson);\n\n  // clean up remote string.json if present\n  await adb.rimraf(remoteFile);\n\n  let app;\n  try {\n    app = opts.app || await adb.pullApk(opts.appPackage, opts.tmpDir);\n  } catch (err) {\n    logger.info(`Failed to pull an apk from '${opts.appPackage}' to '${opts.tmpDir}'. Original error: ${err.message}`);\n  }\n\n  if (_.isEmpty(opts.appPackage) || !(await fs.exists(app))) {\n    logger.debug(`No app or package specified. Returning empty strings`);\n    return {};\n  }\n\n  const stringsTmpDir = path.resolve(opts.tmpDir, opts.appPackage);\n  try {\n    logger.debug('Extracting strings from apk', app, language, stringsTmpDir);\n    const {apkStrings, localPath} = await adb.extractStringsFromApk(app, language, stringsTmpDir);\n    await adb.push(localPath, remoteDir);\n    return apkStrings;\n  } catch (err) {\n    logger.warn(`Could not get strings, continuing anyway. Original error: ${err.message}`);\n    await adb.shell('echo', [`'{}' > ${remoteFile}`]);\n  } finally {\n    await fs.rimraf(stringsTmpDir);\n  }\n  return {};\n};\n\nhelpers.unlockWithHelperApp = async function unlockWithHelperApp (adb) {\n  logger.info('Unlocking screen');\n\n  // Unlock succeed with a couple of retries.\n  let firstRun = true;\n  await retry(3, async function launchHelper () {\n    // To reduce a time to call adb.isScreenLocked() since `adb shell dumpsys window` is easy to hang adb commands\n    if (firstRun) {\n      firstRun = false;\n    } else {\n      try {\n        if (!(await adb.isScreenLocked())) {\n          return;\n        }\n      } catch (e) {\n        logger.warn(`Error in isScreenLocked: ${e.message}`);\n        logger.warn('\"adb shell dumpsys window\" command has timed out.');\n        logger.warn('The reason of this timeout is the delayed adb response. Resetting adb server can improve it.');\n      }\n    }\n\n    logger.info(`Launching ${SETTINGS_HELPER_UNLOCK_ACTIVITY}`);\n    await adb.shell([\n      'am', 'start',\n      '-n', `${SETTINGS_HELPER_PKG_ID}/${SETTINGS_HELPER_UNLOCK_ACTIVITY}`,\n      '-c', 'android.intent.category.LAUNCHER',\n      '-a', 'android.intent.action.MAIN',\n      '-f', '0x10200000',\n    ]);\n    await B.delay(1000);\n  });\n};\n\nhelpers.unlock = async function unlock (driver, adb, capabilities) {\n  if (!(await adb.isScreenLocked())) {\n    logger.info('Screen already unlocked, doing nothing');\n    return;\n  }\n  logger.debug('Screen is locked, trying to unlock');\n\n  if (!capabilities.unlockType && !capabilities.unlockKey) {\n    logger.warn('Using app unlock, this is going to be deprecated!');\n    await helpers.unlockWithHelperApp(adb);\n    return;\n  }\n\n  const {\n    unlockType,\n    unlockKey,\n    unlockStrategy,\n    unlockSuccessTimeout,\n  } = unlocker.validateUnlockCapabilities(capabilities);\n  if (unlockKey && unlockType !== FINGERPRINT_UNLOCK\n      && (_.isNil(unlockStrategy) || _.toLower(unlockStrategy) === 'locksettings')\n      && await adb.isLockManagementSupported()) {\n    await unlocker.fastUnlock(adb, {\n      credential: unlockKey,\n      credentialType: toCredentialType(unlockType),\n    });\n  } else {\n    const unlockMethod = {\n      [PIN_UNLOCK]: unlocker.pinUnlock,\n      [PIN_UNLOCK_KEY_EVENT]: unlocker.pinUnlockWithKeyEvent,\n      [PASSWORD_UNLOCK]: unlocker.passwordUnlock,\n      [PATTERN_UNLOCK]: unlocker.patternUnlock,\n      [FINGERPRINT_UNLOCK]: unlocker.fingerprintUnlock,\n    }[unlockType];\n    await unlockMethod(adb, driver, capabilities);\n  }\n  await helpers.verifyUnlock(adb, unlockSuccessTimeout);\n};\n\nhelpers.verifyUnlock = async function verifyUnlock (adb, timeoutMs = null) {\n  try {\n    await waitForCondition(async () => !(await adb.isScreenLocked()), {\n      waitMs: timeoutMs ?? 2000,\n      intervalMs: 500,\n    });\n  } catch (ign) {\n    throw new Error('The device has failed to be unlocked');\n  }\n  logger.info('The device has been successfully unlocked');\n};\n\nhelpers.initDevice = async function initDevice (adb, opts) {\n  const {\n    skipDeviceInitialization,\n    locale,\n    language,\n    localeScript,\n    unicodeKeyboard,\n    disableWindowAnimation,\n    skipUnlock,\n    mockLocationApp,\n    skipLogcatCapture,\n    logcatFormat,\n    logcatFilterSpecs,\n  } = opts;\n\n  if (skipDeviceInitialization) {\n    logger.info(`'skipDeviceInitialization' is set. Skipping device initialization.`);\n  } else {\n    await adb.waitForDevice();\n    // pushSettingsApp required before calling ensureDeviceLocale for API Level 24+\n\n    // Some feature such as location/wifi are not necessary for all users,\n    // but they require the settings app. So, try to configure it while Appium\n    // does not throw error even if they fail.\n    const shouldThrowError = language\n      || locale\n      || localeScript\n      || unicodeKeyboard\n      || disableWindowAnimation\n      || !skipUnlock;\n    await helpers.pushSettingsApp(adb, shouldThrowError, opts);\n  }\n\n  if (!helpers.isEmulator(adb, opts)) {\n    if (mockLocationApp || _.isUndefined(mockLocationApp)) {\n      await helpers.setMockLocationApp(adb, mockLocationApp || SETTINGS_HELPER_PKG_ID);\n    } else {\n      await helpers.resetMockLocation(adb);\n    }\n  }\n\n  if (language || locale) {\n    await helpers.ensureDeviceLocale(adb, language, locale, localeScript);\n  }\n\n  if (skipLogcatCapture) {\n    logger.info(`'skipLogcatCapture' is set. Skipping starting logcat capture.`);\n  } else {\n    await adb.startLogcat({\n      format: logcatFormat,\n      filterSpecs: logcatFilterSpecs,\n    });\n  }\n\n  if (unicodeKeyboard) {\n    return await helpers.initUnicodeKeyboard(adb);\n  }\n};\n\nhelpers.removeNullProperties = function removeNullProperties (obj) {\n  for (let key of _.keys(obj)) {\n    if (_.isNull(obj[key]) || _.isUndefined(obj[key])) {\n      delete obj[key];\n    }\n  }\n};\n\nhelpers.truncateDecimals = function truncateDecimals (number, digits) {\n  let multiplier = Math.pow(10, digits),\n      adjustedNum = number * multiplier,\n      truncatedNum = Math[adjustedNum < 0 ? 'ceil' : 'floor'](adjustedNum);\n\n  return truncatedNum / multiplier;\n};\n\nhelpers.isChromeBrowser = function isChromeBrowser (browser) {\n  return _.includes(Object.keys(CHROME_BROWSER_PACKAGE_ACTIVITY), (browser || '').toLowerCase());\n};\n\nhelpers.getChromePkg = function getChromePkg (browser) {\n  return CHROME_BROWSER_PACKAGE_ACTIVITY[browser.toLowerCase()] || CHROME_BROWSER_PACKAGE_ACTIVITY.default;\n};\n\nhelpers.removeAllSessionWebSocketHandlers = async function removeAllSessionWebSocketHandlers (server, sessionId) {\n  if (!server || !_.isFunction(server.getWebSocketHandlers)) {\n    return;\n  }\n\n  const activeHandlers = await server.getWebSocketHandlers(sessionId);\n  for (const pathname of _.keys(activeHandlers)) {\n    await server.removeWebSocketHandler(pathname);\n  }\n};\n\n/**\n * Takes a desired capability and tries to JSON.parse it as an array,\n * and either returns the parsed array or a singleton array.\n *\n * @param {any} cap A desired capability\n */\nhelpers.parseArray = function parseArray (cap) {\n  let parsedCaps;\n  try {\n    parsedCaps = JSON.parse(cap);\n  } catch (ign) { }\n\n  if (_.isArray(parsedCaps)) {\n    return parsedCaps;\n  } else if (_.isString(cap)) {\n    return [cap];\n  }\n\n  throw new Error(`must provide a string or JSON Array; received ${cap}`);\n};\n\n/**\n * Validate desired capabilities. Returns true if capability is valid\n *\n * @param {*} cap A desired capability\n * @return {boolean} Returns true if the capability is valid\n * @throws {Error} If the caps has invalid capability\n */\nhelpers.validateDesiredCaps = function validateDesiredCaps (caps) {\n  if (caps.browserName) {\n    if (caps.app) {\n      // warn if the capabilities have both `app` and `browser, although this is common with selenium grid\n      logger.warn(`The desired capabilities should generally not include both an 'app' and a 'browserName'`);\n    }\n    if (caps.appPackage) {\n      logger.errorAndThrow(`The desired should not include both of an 'appPackage' and a 'browserName'`);\n    }\n  }\n\n  if (caps.uninstallOtherPackages) {\n    try {\n      this.parseArray(caps.uninstallOtherPackages);\n    } catch (e) {\n      logger.errorAndThrow(`Could not parse \"uninstallOtherPackages\" capability: ${e.message}`);\n    }\n  }\n\n  return true;\n};\n\n/**\n * Adjust the capabilities for a browser session\n *\n * @param {Object} caps - Current capabilities object\n * !!! The object is mutated by this method call !!!\n * @returns {Object} The same possibly mutated `opts` instance.\n * No mutation is happening is the current session if\n * appPackage/appActivity caps have already been provided.\n */\nhelpers.adjustBrowserSessionCaps = function adjustBrowserSessionCaps (caps = {}) {\n  const { browserName } = caps;\n  logger.info(`The current session is considered browser-based`);\n  logger.info(`Supported browser names: ${JSON.stringify(_.keys(CHROME_BROWSER_PACKAGE_ACTIVITY))}`);\n  if (caps.appPackage || caps.appActivity) {\n    logger.info(`Not overriding appPackage/appActivity capability values for '${browserName}' ` +\n      'because some of them have been already provided');\n    return caps;\n  }\n\n  const {pkg, activity} = this.getChromePkg(browserName);\n  caps.appPackage = pkg;\n  caps.appActivity = activity;\n  logger.info(`appPackage/appActivity capabilities have been automatically set to ${pkg}/${activity} ` +\n    `for '${browserName}'`);\n  logger.info(`Consider changing the browserName to the one from the list of supported browser names ` +\n    `or provide custom appPackage/appActivity capability values if the automatically assigned ones do ` +\n    `not make sense`);\n  return caps;\n};\n\n/**\n * Checks whether the current device under test is an emulator\n *\n * @param {ADB} adb - appium-adb instance\n * @param {Object} opts - driver options mapping\n * @returns {boolean} `true` if the device is an Android emulator\n */\nhelpers.isEmulator = function isEmulator (adb, opts) {\n  const possibleNames = [opts.udid, adb?.curDeviceId];\n  return !!opts.avd || possibleNames.some((x) => EMULATOR_PATTERN.test(x));\n};\n\nhelpers.bootstrap = Bootstrap;\nhelpers.unlocker = unlocker;\n\nexport { helpers, SETTINGS_HELPER_PKG_ID, APP_STATE, prepareAvdArgs, ensureNetworkSpeed };\nexport default helpers;\n"],"mappings":"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"}