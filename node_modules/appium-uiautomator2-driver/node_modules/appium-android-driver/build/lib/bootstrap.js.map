{"version":3,"file":"bootstrap.js","names":["log","logger","getLogger","COMMAND_TYPES","ACTION","SHUTDOWN","SEND_COMMAND_TIMEOUT","getModuleRoot","_","memoize","currentDir","path","dirname","resolve","__filename","isAtFsRoot","manifestPath","join","fs","exists","JSON","parse","readFile","name","ign","length","Error","AndroidBootstrap","constructor","adb","systemPort","webSocket","undefined","ignoreUnexpectedShutdown","onUnexpectedShutdown","_onUnexpectedShutdownPromise","reject","B","_resolve","_reject","cancel","start","appPackage","disableAndroidWatchers","acceptSslCerts","startDetector","s","test","bootstrapJar","init","forwardPort","process","uiAutomator","on","stdout","stderr","alertRe","debug","sockets","emit","message","stdoutLines","split","uiautoLog","line","trim","innerLine","exec","logMethod","info","bind","stderrLines","socketClient","net","connect","err","once","errorAndThrow","sendCommand","type","extra","cmd","Object","assign","cmdJson","stringify","truncate","write","setEncoding","streamData","sendCommandTimeoutHandler","data","clearTimeout","removeAllListeners","status","value","errorFromCode","isString","error","stack","setTimeout","errMsg","sendAction","action","params","shutdown","warn","UiAutomator","EVENT_CHANGED","msg","state","STATE_STOPPED","ignore","_ignoreUnexpectedShutdown"],"sources":["../../lib/bootstrap.js"],"sourcesContent":["import UiAutomator from './uiautomator';\nimport net from 'net';\nimport path from 'path';\nimport _ from 'lodash';\nimport { errorFromCode } from 'appium/driver';\nimport B from 'bluebird';\nimport { logger, fs } from 'appium/support';\n\n\nconst log = logger.getLogger('AndroidBootstrap');\nconst COMMAND_TYPES = {\n  ACTION: 'action',\n  SHUTDOWN: 'shutdown'\n};\nconst SEND_COMMAND_TIMEOUT = 1 * 60 * 1000;\n\n/**\n * Calculates the path to the current module's root folder\n *\n * @returns {string} The full path to module root\n * @throws {Error} If the current module root folder cannot be determined\n */\nconst getModuleRoot = _.memoize(async function getModuleRoot () {\n  let currentDir = path.dirname(path.resolve(__filename));\n  let isAtFsRoot = false;\n  while (!isAtFsRoot) {\n    const manifestPath = path.join(currentDir, 'package.json');\n    try {\n      if (await fs.exists(manifestPath) &&\n          JSON.parse(await fs.readFile(manifestPath, 'utf8')).name === 'appium-android-driver') {\n        return currentDir;\n      }\n    } catch (ign) {}\n    currentDir = path.dirname(currentDir);\n    isAtFsRoot = currentDir.length <= path.dirname(currentDir).length;\n  }\n  throw new Error('Cannot find the root folder of the appium-android-driver Node.js module');\n});\n\nclass AndroidBootstrap {\n  constructor (adb, systemPort = 4724, webSocket = undefined) {\n    this.adb = adb;\n    this.systemPort = systemPort;\n    this.webSocket = webSocket;\n    this.ignoreUnexpectedShutdown = false;\n  }\n\n  get onUnexpectedShutdown () {\n    if (!this._onUnexpectedShutdownPromise) {\n      let reject;\n      this._onUnexpectedShutdownPromise = new B(function _onUnexpectedShutdownPromise (_resolve, _reject) {\n        reject = _reject;\n      });\n      this._onUnexpectedShutdownPromise.cancel = reject;\n    }\n    return this._onUnexpectedShutdownPromise;\n  }\n\n  async start (appPackage, disableAndroidWatchers = false, acceptSslCerts = false) {\n    try {\n      const startDetector = (s) => /Appium Socket Server Ready/.test(s);\n      const bootstrapJar = path.resolve(await getModuleRoot(), 'bootstrap', 'bin', 'AppiumBootstrap.jar');\n\n      await this.init();\n      await this.adb.forwardPort(this.systemPort, 4724);\n      this.process = await this.uiAutomator.start(\n                       bootstrapJar, 'io.appium.android.bootstrap.Bootstrap',\n                       startDetector, '-e', 'pkg', appPackage,\n                       '-e', 'disableAndroidWatchers', disableAndroidWatchers,\n                       '-e', 'acceptSslCerts', acceptSslCerts);\n\n      // process the output\n      this.process.on('output', (stdout, stderr) => {\n        const alertRe = /Emitting system alert message/;\n        if (alertRe.test(stdout)) {\n          log.debug('Emitting alert message...');\n          if (this.webSocket) {\n            this.webSocket.sockets.emit('alert', {message: stdout});\n          }\n        }\n\n        // the bootstrap logger wraps its own log lines with\n        // [APPIUM-UIAUTO] ... [APPIUM-UIAUTO]\n        // and leaves actual UiAutomator logs as they are\n        let stdoutLines = (stdout || '').split('\\n');\n        const uiautoLog = /\\[APPIUM-UIAUTO\\](.+)\\[\\/APPIUM-UIAUTO\\]/;\n        for (let line of stdoutLines) {\n          if (line.trim()) {\n            if (uiautoLog.test(line)) {\n              let innerLine = uiautoLog.exec(line)[1].trim();\n              let logMethod = log.info.bind(log);\n              // if the bootstrap log considers something debug, log that as\n              // debug and not info\n              if (/\\[debug\\]/.test(innerLine)) {\n                logMethod = log.debug.bind(log);\n              }\n              logMethod(`[BOOTSTRAP LOG] ${innerLine}`);\n            } else {\n              log.debug(`[UIAUTO STDOUT] ${line}`);\n            }\n          }\n        }\n\n        let stderrLines = (stderr || '').split('\\n');\n        for (let line of stderrLines) {\n          if (line.trim()) {\n            log.debug(`[UIAUTO STDERR] ${line}`);\n          }\n        }\n      });\n\n      // only return when the socket client has connected\n      return await new B((resolve, reject) => {\n        try {\n          this.socketClient = net.connect(this.systemPort);\n          // Windows: the socket errors out when ADB restarts. Let's catch it to avoid crashing.\n          this.socketClient.on('error', (err) => {\n            if (!this.ignoreUnexpectedShutdown) {\n              throw new Error(`Android bootstrap socket crashed: ${err}`);\n            }\n          });\n          this.socketClient.once('connect', () => {\n            log.info('Android bootstrap socket is now connected');\n            resolve();\n          });\n        } catch (err) {\n          reject(err);\n        }\n      });\n    } catch (err) {\n      log.errorAndThrow(`Error occured while starting AndroidBootstrap. Original error: ${err}`);\n    }\n  }\n\n  async sendCommand (type, extra = {}) {\n    if (!this.socketClient) {\n      throw new Error('Socket connection closed unexpectedly');\n    }\n\n    return await new B((resolve, reject) => {\n      let cmd = Object.assign({cmd: type}, extra);\n      let cmdJson = `${JSON.stringify(cmd)} \\n`;\n      log.debug(`Sending command to android: ${_.truncate(cmdJson, {length: 1000}).trim()}`);\n      this.socketClient.write(cmdJson);\n      this.socketClient.setEncoding('utf8');\n      let streamData = '';\n      let sendCommandTimeoutHandler = null;\n      this.socketClient.on('data', (data) => {\n        if (sendCommandTimeoutHandler) {\n          clearTimeout(sendCommandTimeoutHandler);\n        }\n        log.debug('Received command result from bootstrap');\n        try {\n          streamData = JSON.parse(streamData + data);\n          // we successfully parsed JSON so we've got all the data,\n          // remove the socket listener and evaluate\n          this.socketClient.removeAllListeners('data');\n          if (streamData.status === 0) {\n            return resolve(streamData.value);\n          }\n          reject(errorFromCode(streamData.status, streamData.value));\n        } catch (err) {\n          if (!_.isString(streamData)) {\n            log.error('Got an unexpected error inside socket listener');\n            log.error(err.stack);\n            return reject(errorFromCode(13, err.message));\n          }\n          log.debug(`Stream still not complete, waiting up to ${SEND_COMMAND_TIMEOUT}ms for the data to arrive`);\n          streamData += data;\n          sendCommandTimeoutHandler = setTimeout(() => {\n            const errMsg = `Server socket stopped responding. The recent response was '${streamData}'`;\n            log.error(errMsg);\n            this.socketClient.removeAllListeners('data');\n            reject(errorFromCode(13, errMsg));\n          }, SEND_COMMAND_TIMEOUT);\n        }\n      });\n    });\n  }\n\n  async sendAction (action, params = {}) {\n    let extra = {action, params};\n    return await this.sendCommand(COMMAND_TYPES.ACTION, extra);\n  }\n\n  async shutdown () {\n    if (!this.uiAutomator) {\n      log.warn('Cannot shut down Android bootstrap; it has already shut down');\n      return;\n    }\n\n    // remove listners so we don't trigger unexpected shutdown\n    this.uiAutomator.removeAllListeners(UiAutomator.EVENT_CHANGED);\n    if (this.socketClient) {\n      await this.sendCommand(COMMAND_TYPES.SHUTDOWN);\n    }\n    await this.uiAutomator.shutdown();\n    this.uiAutomator = null;\n  }\n\n  // this helper function makes unit testing easier.\n  async init () { // eslint-disable-line require-await\n    this.uiAutomator = new UiAutomator(this.adb);\n\n    // Handle unexpected UiAutomator shutdown\n    this.uiAutomator.on(UiAutomator.EVENT_CHANGED, (msg) => {\n      if (msg.state === UiAutomator.STATE_STOPPED) {\n        this.uiAutomator = null;\n        this.onUnexpectedShutdown.cancel(new Error('UiAUtomator shut down unexpectedly'));\n      }\n    });\n  }\n\n  set ignoreUnexpectedShutdown (ignore) {\n    log.debug(`${ignore ? 'Ignoring' : 'Watching for'} bootstrap disconnect`);\n    this._ignoreUnexpectedShutdown = ignore;\n  }\n\n  get ignoreUnexpectedShutdown () {\n    return this._ignoreUnexpectedShutdown;\n  }\n}\n\nexport { AndroidBootstrap, COMMAND_TYPES };\nexport default AndroidBootstrap;\n"],"mappings":"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"}