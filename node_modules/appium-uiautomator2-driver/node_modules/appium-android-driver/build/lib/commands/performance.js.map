{"version":3,"file":"performance.js","names":["commands","helpers","extensions","NETWORK_KEYS","CPU_KEYS","BATTERY_KEYS","MEMORY_KEYS","SUPPORTED_PERFORMANCE_DATA_TYPES","Object","freeze","cpuinfo","memoryinfo","batteryinfo","networkinfo","MEMINFO_TITLES","NATIVE","DALVIK","EGL","GL","MTRACK","TOTAL","HEAP","RETRY_PAUSE_MS","parseMeminfoForApi19To29","entries","valDict","type","subType","nativePss","nativePrivateDirty","nativeHeapSize","nativeHeapAllocatedSize","dalvikPss","dalvikPrivateDirty","eglPss","eglPrivateDirty","glPss","glPrivateDirty","length","totalPss","totalPrivateDirty","parseMeminfoForApiBelow19","parseMeminfoForApiAbove29","nativeRss","dalvikRss","totalRss","getPerformanceDataTypes","_","keys","getPerformanceData","packageName","dataType","retries","toLower","getBatteryInfo","getCPUInfo","getMemoryInfo","getNetworkTrafficInfo","Error","JSON","stringify","retryInterval","output","adb","shell","e","stderr","log","info","usagesPattern","RegExp","escapeRegExp","match","exec","debug","cmd","data","power","parseInt","split","trim","Number","isNaN","clone","toString","apiLevel","getApiLevel","line","filter","Boolean","headers","values","map","header","returnValue","bucketDuration","bucketStart","activeTime","rxBytes","rxPackets","txBytes","txPackets","operations","index","fromXtstats","indexOf","start","delimiter","end","pendingBytes","substring","arrayList","j","k","returnIndex","i","isEqual","isUndefined","assign"],"sources":["../../../lib/commands/performance.js"],"sourcesContent":["import _ from 'lodash';\nimport { retryInterval } from 'asyncbox';\n\nconst commands = {}, helpers = {}, extensions = {};\n\nconst NETWORK_KEYS = [\n  ['bucketStart', 'activeTime', 'rxBytes', 'rxPackets', 'txBytes', 'txPackets', 'operations', 'bucketDuration'],\n  ['st', 'activeTime', 'rb', 'rp', 'tb', 'tp', 'op', 'bucketDuration']\n];\nconst CPU_KEYS = ['user', 'kernel'];\nconst BATTERY_KEYS = ['power'];\nconst MEMORY_KEYS = [\n  'totalPrivateDirty', 'nativePrivateDirty', 'dalvikPrivateDirty',\n  'eglPrivateDirty', 'glPrivateDirty',\n  'totalPss', 'nativePss', 'dalvikPss', 'eglPss', 'glPss',\n  'nativeHeapAllocatedSize', 'nativeHeapSize',\n  'nativeRss', 'dalvikRss', 'totalRss'\n];\nconst SUPPORTED_PERFORMANCE_DATA_TYPES = Object.freeze({\n  cpuinfo: 'the amount of cpu by user and kernel process - cpu information for applications on real devices and simulators',\n  memoryinfo: 'the amount of memory used by the process - memory information for applications on real devices and simulators',\n  batteryinfo: 'the remaining battery power - battery power information for applications on real devices and simulators',\n  networkinfo: 'the network statistics - network rx/tx information for applications on real devices and simulators'\n});\nconst MEMINFO_TITLES = Object.freeze({\n  NATIVE: 'Native',\n  DALVIK: 'Dalvik',\n  EGL: 'EGL',\n  GL: 'GL',\n  MTRACK: 'mtrack',\n  TOTAL: 'TOTAL',\n  HEAP: 'Heap'\n});\nconst RETRY_PAUSE_MS = 1000;\n\n/**\n * API level between 18 and 30\n * ['<System Type>', '<Memory Type>', <pss total>, <private dirty>, <private clean>, <swapPss dirty>, <heap size>, <heap alloc>, <heap free>]\n * except 'TOTAL', which skips the second type name\n * !!! valDict gets mutated\n */\nfunction parseMeminfoForApi19To29 (entries, valDict) {\n  const [type, subType] = entries;\n  if (type === MEMINFO_TITLES.NATIVE && subType === MEMINFO_TITLES.HEAP) {\n    [,, valDict.nativePss, valDict.nativePrivateDirty,,, valDict.nativeHeapSize, valDict.nativeHeapAllocatedSize] = entries;\n  } else if (type === MEMINFO_TITLES.DALVIK && subType === MEMINFO_TITLES.HEAP) {\n    [,, valDict.dalvikPss, valDict.dalvikPrivateDirty] = entries;\n  } else if (type === MEMINFO_TITLES.EGL && subType === MEMINFO_TITLES.MTRACK) {\n    [,, valDict.eglPss, valDict.eglPrivateDirty] = entries;\n  } else if (type === MEMINFO_TITLES.GL && subType === MEMINFO_TITLES.MTRACK) {\n    [,, valDict.glPss, valDict.glPrivateDirty] = entries;\n  } else if (type === MEMINFO_TITLES.TOTAL && entries.length === 8) {\n    // there are two totals, and we only want the full listing, which has 8 entries\n    [, valDict.totalPss, valDict.totalPrivateDirty] = entries;\n  }\n}\n\n/**\n * ['<System Type', '<pps>', '<shared dirty>', '<private dirty>', '<heap size>', '<heap alloc>', '<heap free>']\n * !!! valDict gets mutated\n */\nfunction parseMeminfoForApiBelow19 (entries, valDict) {\n  const type = entries[0];\n  if (type === MEMINFO_TITLES.NATIVE) {\n    [, valDict.nativePss,, valDict.nativePrivateDirty, valDict.nativeHeapSize, valDict.nativeHeapAllocatedSize] = entries;\n  } else if (type === MEMINFO_TITLES.DALVIK) {\n    [, valDict.dalvikPss,, valDict.dalvikPrivateDirty] = entries;\n  } else if (type === MEMINFO_TITLES.EGL) {\n    [, valDict.eglPss,, valDict.eglPrivateDirty] = entries;\n  } else if (type === MEMINFO_TITLES.GL) {\n    [, valDict.glPss,, valDict.glPrivateDirty] = entries;\n  } else if (type === MEMINFO_TITLES.TOTAL) {\n    [, valDict.totalPss,, valDict.totalPrivateDirty] = entries;\n  }\n}\n\n/**\n * API level 30 and above\n * ['<System Type>', '<Memory Type>', <pss total>, <private dirty>, <private clean>, <swapPss dirty>, <rss total>, <heap size>, <heap alloc>, <heap free>]\n * !!! valDict gets mutated\n */\nfunction parseMeminfoForApiAbove29 (entries, valDict) {\n  const [type, subType] = entries;\n  if (type === MEMINFO_TITLES.NATIVE && subType === MEMINFO_TITLES.HEAP) {\n    [,, valDict.nativePss, valDict.nativePrivateDirty,,, valDict.nativeRss, valDict.nativeHeapSize, valDict.nativeHeapAllocatedSize] = entries;\n  } else if (type === MEMINFO_TITLES.DALVIK && subType === MEMINFO_TITLES.HEAP) {\n    [,, valDict.dalvikPss, valDict.dalvikPrivateDirty,,, valDict.dalvikRss] = entries;\n  } else if (type === MEMINFO_TITLES.EGL && subType === MEMINFO_TITLES.MTRACK) {\n    [,, valDict.eglPss, valDict.eglPrivateDirty] = entries;\n  } else if (type === MEMINFO_TITLES.GL && subType === MEMINFO_TITLES.MTRACK) {\n    [,, valDict.glPss, valDict.glPrivateDirty] = entries;\n  } else if (type === MEMINFO_TITLES.TOTAL && entries.length === 9) {\n    // has 9 entries\n    [, valDict.totalPss, valDict.totalPrivateDirty,,, valDict.totalRss] = entries;\n  }\n}\n\n//\n// returns the information type of the system state which is supported to read as like cpu, memory, network traffic, and battery.\n// output - array like below\n// [cpuinfo, batteryinfo, networkinfo, memoryinfo]\n//\ncommands.getPerformanceDataTypes = function getPerformanceDataTypes () {\n  return _.keys(SUPPORTED_PERFORMANCE_DATA_TYPES);\n};\n\n/**\n * @returns The information type of the system state which is supported to read as like cpu, memory, network traffic, and battery.\n * input - (packageName) the package name of the application\n *        (dataType) the type of system state which wants to read. It should be one of the keys of the SUPPORTED_PERFORMANCE_DATA_TYPES\n *        (dataReadTimeout) the number of attempts to read\n * output - table of the performance data, The first line of the table represents the type of data. The remaining lines represent the values of the data.\n *\n * in case of battery info : [[power], [23]]\n * in case of memory info :  [[totalPrivateDirty, nativePrivateDirty, dalvikPrivateDirty, eglPrivateDirty, glPrivateDirty, totalPss,\n *   nativePss, dalvikPss, eglPss, glPss, nativeHeapAllocatedSize, nativeHeapSize], [18360, 8296, 6132, null, null, 42588, 8406, 7024, null, null, 26519, 10344]]\n * in case of network info : [[bucketStart, activeTime, rxBytes, rxPackets, txBytes, txPackets, operations, bucketDuration,],\n *   [1478091600000, null, 1099075, 610947, 928, 114362, 769, 0, 3600000], [1478095200000, null, 1306300, 405997, 509, 46359, 370, 0, 3600000]]\n * in case of network info : [[st, activeTime, rb, rp, tb, tp, op, bucketDuration], [1478088000, null, null, 32115296, 34291, 2956805, 25705, 0, 3600],\n *   [1478091600, null, null, 2714683, 11821, 1420564, 12650, 0, 3600], [1478095200, null, null, 10079213, 19962, 2487705, 20015, 0, 3600],\n *   [1478098800, null, null, 4444433, 10227, 1430356, 10493, 0, 3600]]\n * in case of cpu info : [[user, kernel], [0.9, 1.3]]\n */\ncommands.getPerformanceData = async function getPerformanceData (packageName, dataType, retries = 2) {\n  switch (_.toLower(dataType)) {\n    case 'batteryinfo':\n      return await this.getBatteryInfo(retries);\n    case 'cpuinfo':\n      return await this.getCPUInfo(packageName, retries);\n    case 'memoryinfo':\n      return await this.getMemoryInfo(packageName, retries);\n    case 'networkinfo':\n      return await this.getNetworkTrafficInfo(retries);\n    default:\n      throw new Error(`No performance data of type '${dataType}' found. ` +\n        `Only the following values are supported: ${JSON.stringify(SUPPORTED_PERFORMANCE_DATA_TYPES, ' ', 2)}`);\n  }\n};\n\nhelpers.getCPUInfo = async function getCPUInfo (packageName, retries = 2) {\n  // TODO: figure out why this is\n  // sometimes, the function of 'adb.shell' fails. when I tested this function on the target of 'Galaxy Note5',\n  // adb.shell(dumpsys cpuinfo) returns cpu datas for other application packages, but I can't find the data for packageName.\n  // It usually fails 30 times and success for the next time,\n  // Since then, he has continued to succeed.\n  return await retryInterval(retries, RETRY_PAUSE_MS, async () => {\n    let output;\n    try {\n      output = await this.adb.shell(['dumpsys', 'cpuinfo']);\n    } catch (e) {\n      if (e.stderr) {\n        this.log.info(e.stderr);\n      }\n      throw e;\n    }\n    // `output` will be something like\n    //    +0% 2209/io.appium.android.apis: 0.1% user + 0.2% kernel / faults: 70 minor\n    const usagesPattern =\n      new RegExp(`^.+\\\\/${_.escapeRegExp(packageName)}:\\\\D+([\\\\d.]+)%\\\\s+user\\\\s+\\\\+\\\\s+([\\\\d.]+)%\\\\s+kernel`, 'm');\n    const match = usagesPattern.exec(output);\n    if (!match) {\n      this.log.debug(output);\n      throw new Error(`Unable to parse cpu usage data for '${packageName}'. Check the server log for more details`);\n    }\n    return [CPU_KEYS, [match[1], match[2]]];\n  });\n};\n\nhelpers.getBatteryInfo = async function getBatteryInfo (retries = 2) {\n  return await retryInterval(retries, RETRY_PAUSE_MS, async () => {\n    let cmd = ['dumpsys', 'battery', '|', 'grep', 'level'];\n    let data = await this.adb.shell(cmd);\n    if (!data) throw new Error('No data from dumpsys'); //eslint-disable-line curly\n\n    let power = parseInt((data.split(':')[1] || '').trim(), 10);\n\n    if (!Number.isNaN(power)) {\n      return [_.clone(BATTERY_KEYS), [power.toString()]];\n    } else {\n      throw new Error(`Unable to parse battery data: '${data}'`);\n    }\n  });\n};\n\nhelpers.getMemoryInfo = async function getMemoryInfo (packageName, retries = 2) {\n  return await retryInterval(retries, RETRY_PAUSE_MS, async () => {\n    const cmd = [\n      'dumpsys', 'meminfo', `'${packageName}'`,\n      '|', 'grep', '-E',\n      `'${MEMINFO_TITLES.NATIVE}|${MEMINFO_TITLES.DALVIK}|${MEMINFO_TITLES.EGL}` +\n      `|${MEMINFO_TITLES.GL}|${MEMINFO_TITLES.TOTAL}'`\n    ];\n    const data = await this.adb.shell(cmd);\n    if (!data) {\n      throw new Error('No data from dumpsys');\n    }\n    const valDict = {totalPrivateDirty: ''};\n    const apiLevel = await this.adb.getApiLevel();\n    for (const line of data.split('\\n')) {\n      const entries = line.trim().split(/\\s+/).filter(Boolean);\n      if (apiLevel >= 30) {\n        parseMeminfoForApiAbove29(entries, valDict);\n      } else if (apiLevel > 18 && apiLevel < 30) {\n        parseMeminfoForApi19To29(entries, valDict);\n      } else {\n        parseMeminfoForApiBelow19(entries, valDict);\n      }\n    }\n    if (valDict.totalPrivateDirty && valDict.totalPrivateDirty !== 'nodex') {\n      const headers = _.clone(MEMORY_KEYS);\n      const values = headers.map((header) => valDict[header]);\n      return [headers, values];\n    }\n\n    throw new Error(`Unable to parse memory data: '${data}'`);\n  });\n};\n\nhelpers.getNetworkTrafficInfo = async function getNetworkTrafficInfo (retries = 2) {\n  return await retryInterval(retries, RETRY_PAUSE_MS, async () => {\n    let returnValue = [];\n    let bucketDuration, bucketStart, activeTime, rxBytes, rxPackets, txBytes, txPackets, operations;\n\n    let cmd = ['dumpsys', 'netstats'];\n    let data = await this.adb.shell(cmd);\n    if (!data) throw new Error('No data from dumpsys'); //eslint-disable-line curly\n\n    // In case of network traffic information, it is different for the return data between emulator and real device.\n    // the return data of emulator\n    //   Xt stats:\n    //   Pending bytes: 39250\n    //   History since boot:\n    //   ident=[[type=WIFI, subType=COMBINED, networkId=\"WiredSSID\"]] uid=-1 set=ALL tag=0x0\n    //   NetworkStatsHistory: bucketDuration=3600000\n    //   bucketStart=1478098800000 activeTime=31824 rxBytes=21502 rxPackets=78 txBytes=17748 txPackets=90 operations=0\n    //\n    // 7.1\n    //   Xt stats:\n    //   Pending bytes: 481487\n    //   History since boot:\n    //   ident=[{type=MOBILE, subType=COMBINED, subscriberId=310260..., metered=true}] uid=-1 set=ALL tag=0x0\n    //     NetworkStatsHistory: bucketDuration=3600\n    //       st=1483984800 rb=0 rp=0 tb=12031 tp=184 op=0\n    //       st=1483988400 rb=0 rp=0 tb=38476 tp=587 op=0\n    //       st=1483999200 rb=315616 rp=400 tb=94800 tp=362 op=0\n    //       st=1484002800 rb=15826 rp=20 tb=4738 tp=16 op=0\n    //\n    // the return data of real device\n    //   Xt stats:\n    //   Pending bytes: 0\n    //   History since boot:\n    //   ident=[{type=MOBILE, subType=COMBINED, subscriberId=450050...}] uid=-1 set=ALL tag=0x0\n    //   NetworkStatsHistory: bucketDuration=3600\n    //   st=1478088000 rb=32115296 rp=34291 tb=2956805 tp=25705 op=0\n    //   st=1478091600 rb=2714683 rp=11821 tb=1420564 tp=12650 op=0\n    //   st=1478095200 rb=10079213 rp=19962 tb=2487705 tp=20015 op=0\n    //   st=1478098800 rb=4444433 rp=10227 tb=1430356 tp=10493 op=0\n    let index = 0;\n    let fromXtstats = data.indexOf('Xt stats:');\n\n    let start = data.indexOf('Pending bytes:', fromXtstats);\n    let delimiter = data.indexOf(':', start + 1);\n    let end = data.indexOf('\\n', delimiter + 1);\n    let pendingBytes = data.substring(delimiter + 1, end).trim();\n\n    if (end > delimiter) {\n      start = data.indexOf('bucketDuration', end + 1);\n      delimiter = data.indexOf('=', start + 1);\n      end = data.indexOf('\\n', delimiter + 1);\n      bucketDuration = data.substring(delimiter + 1, end).trim();\n    }\n\n    if (start >= 0) {\n      data = data.substring(end + 1, data.length);\n      let arrayList = data.split('\\n');\n\n      if (arrayList.length > 0) {\n        start = -1;\n\n        for (let j = 0; j < NETWORK_KEYS.length; ++j) {\n          start = arrayList[0].indexOf(NETWORK_KEYS[j][0]);\n\n          if (start >= 0) {\n            index = j;\n            returnValue[0] = [];\n\n            for (let k = 0; k < NETWORK_KEYS[j].length; ++k) {\n              returnValue[0][k] = NETWORK_KEYS[j][k];\n            }\n            break;\n          }\n        }\n\n        let returnIndex = 1;\n        for (let i = 0; i < arrayList.length; i++) {\n          data = arrayList[i];\n          start = data.indexOf(NETWORK_KEYS[index][0]);\n\n          if (start >= 0) {\n            delimiter = data.indexOf('=', start + 1);\n            end = data.indexOf(' ', delimiter + 1);\n            bucketStart = data.substring(delimiter + 1, end).trim();\n\n            if (end > delimiter) {\n              start = data.indexOf(NETWORK_KEYS[index][1], end + 1);\n              if (start >= 0) {\n                delimiter = data.indexOf('=', start + 1);\n                end = data.indexOf(' ', delimiter + 1);\n                activeTime = data.substring(delimiter + 1, end).trim();\n              }\n            }\n\n            if (end > delimiter) {\n              start = data.indexOf(NETWORK_KEYS[index][2], end + 1);\n              if (start >= 0) {\n                delimiter = data.indexOf('=', start + 1);\n                end = data.indexOf(' ', delimiter + 1);\n                rxBytes = data.substring(delimiter + 1, end).trim();\n              }\n            }\n\n            if (end > delimiter) {\n              start = data.indexOf(NETWORK_KEYS[index][3], end + 1);\n              if (start >= 0) {\n                delimiter = data.indexOf('=', start + 1);\n                end = data.indexOf(' ', delimiter + 1);\n                rxPackets = data.substring(delimiter + 1, end).trim();\n              }\n            }\n\n            if (end > delimiter) {\n              start = data.indexOf(NETWORK_KEYS[index][4], end + 1);\n              if (start >= 0) {\n                delimiter = data.indexOf('=', start + 1);\n                end = data.indexOf(' ', delimiter + 1);\n                txBytes = data.substring(delimiter + 1, end).trim();\n              }\n            }\n\n            if (end > delimiter) {\n              start = data.indexOf(NETWORK_KEYS[index][5], end + 1);\n              if (start >= 0) {\n                delimiter = data.indexOf('=', start + 1);\n                end = data.indexOf(' ', delimiter + 1);\n                txPackets = data.substring(delimiter + 1, end).trim();\n              }\n            }\n\n            if (end > delimiter) {\n              start = data.indexOf(NETWORK_KEYS[index][6], end + 1);\n              if (start >= 0) {\n                delimiter = data.indexOf('=', start + 1);\n                end = data.length;\n                operations = data.substring(delimiter + 1, end).trim();\n\n              }\n            }\n            returnValue[returnIndex++] = [bucketStart, activeTime, rxBytes, rxPackets, txBytes, txPackets, operations, bucketDuration];\n          }\n        }\n      }\n    }\n\n    if (!_.isEqual(pendingBytes, '') && !_.isUndefined(pendingBytes) && !_.isEqual(pendingBytes, 'nodex')) {\n      return returnValue;\n    } else {\n      throw new Error(`Unable to parse network traffic data: '${data}'`);\n    }\n  });\n};\n\nObject.assign(extensions, commands, helpers);\nexport {\n  commands, helpers, SUPPORTED_PERFORMANCE_DATA_TYPES, CPU_KEYS, MEMORY_KEYS,\n  BATTERY_KEYS, NETWORK_KEYS,\n};\nexport default extensions;\n\n"],"mappings":"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"}