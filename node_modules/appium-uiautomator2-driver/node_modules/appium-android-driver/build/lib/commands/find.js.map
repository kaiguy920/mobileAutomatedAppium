{"version":3,"file":"find.js","names":["helpers","extensions","doFindElementOrEls","params","bootstrap","sendAction","findElOrEls","strategy","selector","mult","context","Error","multiple","element","doFind","err","isErrorType","errors","ProxyRequestError","getActualError","NoSuchElementError","_","isEmpty","implicitWaitForCondition","message","match","Object","assign"],"sources":["../../../lib/commands/find.js"],"sourcesContent":["import _ from 'lodash';\nimport { errors, isErrorType } from 'appium/driver';\n\n\nlet helpers = {}, extensions = {};\n\n/**\n * Reason for isolating doFindElementOrEls from findElOrEls is for reusing findElOrEls\n * across android-drivers (like appium-uiautomator2-driver) to avoid code duplication.\n * Other android-drivers (like appium-uiautomator2-driver) need to override doFindElementOrEls\n * to facilitate findElOrEls.\n */\nhelpers.doFindElementOrEls = async function doFindElementOrEls (params) {\n  return await this.bootstrap.sendAction('find', params);\n};\n\n// stategy: locator strategy\n// selector: the actual selector for finding an element\n// mult: multiple elements or just one?\n// context: finding an element from the root context? or starting from another element\nhelpers.findElOrEls = async function findElOrEls (strategy, selector, mult, context = '') {\n  if (!selector) {\n    throw new Error('Must provide a selector when finding elements');\n  }\n\n  let params = {\n    strategy,\n    selector,\n    context,\n    multiple: mult\n  };\n\n  let element;\n  let doFind = async () => {\n    try {\n      element = await this.doFindElementOrEls(params);\n    } catch (err) {\n\n      // if the error that comes back is from a proxied request, we need to\n      // unwrap it to its actual protocol error first\n      if (isErrorType(err, errors.ProxyRequestError)) {\n        err = err.getActualError(); // eslint-disable-line no-ex-assign\n      }\n\n      // now we have to inspect the error to determine if it is a no such\n      // element error, based on the shape of the error object from\n      // appium/driver\n      if (isErrorType(err, errors.NoSuchElementError)) {\n        // we are fine with this, just indicate a retry\n        return false;\n      }\n      throw err;\n    }\n\n    // we want to return false if we want to potentially try again\n    return !_.isEmpty(element);\n  };\n\n  try {\n    await this.implicitWaitForCondition(doFind);\n  } catch (err) {\n    if (err.message && err.message.match(/Condition unmet/)) {\n      // only get here if we are looking for multiple elements\n      // condition was not met setting res to empty array\n      element = [];\n    } else {\n      throw err;\n    }\n  }\n\n  if (mult) {\n    return element;\n  }\n  if (_.isEmpty(element)) {\n    throw new errors.NoSuchElementError();\n  }\n  return element;\n};\n\nObject.assign(extensions, helpers);\nexport { helpers };\nexport default extensions;\n"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AAGA,IAAIA,OAAO,GAAG,EAAd;AAAA,IAAkBC,UAAU,GAAG,EAA/B;;;AAQAD,OAAO,CAACE,kBAAR,GAA6B,eAAeA,kBAAf,CAAmCC,MAAnC,EAA2C;EACtE,OAAO,MAAM,KAAKC,SAAL,CAAeC,UAAf,CAA0B,MAA1B,EAAkCF,MAAlC,CAAb;AACD,CAFD;;AAQAH,OAAO,CAACM,WAAR,GAAsB,eAAeA,WAAf,CAA4BC,QAA5B,EAAsCC,QAAtC,EAAgDC,IAAhD,EAAsDC,OAAO,GAAG,EAAhE,EAAoE;EACxF,IAAI,CAACF,QAAL,EAAe;IACb,MAAM,IAAIG,KAAJ,CAAU,+CAAV,CAAN;EACD;;EAED,IAAIR,MAAM,GAAG;IACXI,QADW;IAEXC,QAFW;IAGXE,OAHW;IAIXE,QAAQ,EAAEH;EAJC,CAAb;EAOA,IAAII,OAAJ;;EACA,IAAIC,MAAM,GAAG,YAAY;IACvB,IAAI;MACFD,OAAO,GAAG,MAAM,KAAKX,kBAAL,CAAwBC,MAAxB,CAAhB;IACD,CAFD,CAEE,OAAOY,GAAP,EAAY;MAIZ,IAAI,IAAAC,mBAAA,EAAYD,GAAZ,EAAiBE,cAAA,CAAOC,iBAAxB,CAAJ,EAAgD;QAC9CH,GAAG,GAAGA,GAAG,CAACI,cAAJ,EAAN;MACD;;MAKD,IAAI,IAAAH,mBAAA,EAAYD,GAAZ,EAAiBE,cAAA,CAAOG,kBAAxB,CAAJ,EAAiD;QAE/C,OAAO,KAAP;MACD;;MACD,MAAML,GAAN;IACD;;IAGD,OAAO,CAACM,eAAA,CAAEC,OAAF,CAAUT,OAAV,CAAR;EACD,CAvBD;;EAyBA,IAAI;IACF,MAAM,KAAKU,wBAAL,CAA8BT,MAA9B,CAAN;EACD,CAFD,CAEE,OAAOC,GAAP,EAAY;IACZ,IAAIA,GAAG,CAACS,OAAJ,IAAeT,GAAG,CAACS,OAAJ,CAAYC,KAAZ,CAAkB,iBAAlB,CAAnB,EAAyD;MAGvDZ,OAAO,GAAG,EAAV;IACD,CAJD,MAIO;MACL,MAAME,GAAN;IACD;EACF;;EAED,IAAIN,IAAJ,EAAU;IACR,OAAOI,OAAP;EACD;;EACD,IAAIQ,eAAA,CAAEC,OAAF,CAAUT,OAAV,CAAJ,EAAwB;IACtB,MAAM,IAAII,cAAA,CAAOG,kBAAX,EAAN;EACD;;EACD,OAAOP,OAAP;AACD,CAzDD;;AA2DAa,MAAM,CAACC,MAAP,CAAc1B,UAAd,EAA0BD,OAA1B;eAEeC,U"}