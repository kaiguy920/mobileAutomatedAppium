{"version":3,"file":"actions.js","names":["swipeStepsPerSec","dragStepsPerSec","commands","helpers","extensions","keyevent","keycode","metastate","log","warn","pressKeyCode","bootstrap","sendAction","longPressKeyCode","getOrientation","params","naturalOrientation","opts","androidNaturalOrientation","orientation","toUpperCase","setOrientation","fakeFlick","xSpeed","ySpeed","fakeFlickElement","elementId","xoffset","yoffset","speed","swipe","startX","startY","endX","endY","duration","touchCount","elId","swipeOpts","steps","Math","round","util","hasValue","doSwipe","pinchClose","percent","pinchOpts","direction","pinchOpen","flick","element","xOffset","yOffset","drag","destElId","dragOpts","doDrag","lock","seconds","adb","isNaN","floatSeconds","parseFloat","B","delay","unlock","isLocked","isScreenLocked","androidHelpers","caps","openNotifications","setLocation","latitude","longitude","sendTelnetCommand","fingerprint","fingerprintId","isEmulator","errorAndThrow","sendSMS","phoneNumber","message","gsmCall","action","gsmSignal","signalStrengh","gsmVoice","state","powerAC","powerCapacity","batteryPercent","networkSpeed","sensorSet","sensor","sensorType","value","getScreenshotDataWithAdbShell","localFile","tempDir","path","prefix","suffix","fs","exists","unlink","pngDir","androidScreenshotPath","png","posix","resolve","cmd","shell","fileSize","Error","pull","jimp","read","getScreenshotDataWithAdbExecOut","stdout","stderr","code","exec","executable","defaultArgs","concat","encoding","isBuffer","length","toString","getScreenshot","apiLevel","getApiLevel","image","e","info","err","screenOrientation","getScreenOrientation","rotate","getBuffer","promisify","context","imgBuffer","MIME_PNG","Object","assign"],"sources":["../../../lib/commands/actions.js"],"sourcesContent":["import androidHelpers from '../android-helpers';\nimport { fs, util, tempDir} from 'appium/support';\nimport path from 'path';\nimport B from 'bluebird';\nimport jimp from 'jimp';\nimport { exec } from 'teen_process';\n\nconst swipeStepsPerSec = 28;\nconst dragStepsPerSec = 40;\n\nlet commands = {}, helpers = {}, extensions = {};\n\ncommands.keyevent = async function keyevent (keycode, metastate = null) {\n  // TODO deprecate keyevent; currently wd only implements keyevent\n  this.log.warn('keyevent will be deprecated use pressKeyCode');\n  return await this.pressKeyCode(keycode, metastate);\n};\n\ncommands.pressKeyCode = async function pressKeyCode (keycode, metastate = null) {\n  return await this.bootstrap.sendAction('pressKeyCode', {keycode, metastate});\n};\n\ncommands.longPressKeyCode = async function longPressKeyCode (keycode, metastate = null) {\n  return await this.bootstrap.sendAction('longPressKeyCode', {keycode, metastate});\n};\n\ncommands.getOrientation = async function getOrientation () {\n  let params = {\n    naturalOrientation: !!this.opts.androidNaturalOrientation,\n  };\n  let orientation = await this.bootstrap.sendAction('orientation', params);\n  return orientation.toUpperCase();\n};\n\ncommands.setOrientation = async function setOrientation (orientation) {\n  orientation = orientation.toUpperCase();\n  let params = {\n    orientation,\n    naturalOrientation: !!this.opts.androidNaturalOrientation,\n  };\n  return await this.bootstrap.sendAction('orientation', params);\n};\n\ncommands.fakeFlick = async function fakeFlick (xSpeed, ySpeed) {\n  return await this.bootstrap.sendAction('flick', {xSpeed, ySpeed});\n};\n\ncommands.fakeFlickElement = async function fakeFlickElement (elementId, xoffset, yoffset, speed) {\n  let params = {xoffset, yoffset, speed, elementId};\n  return await this.bootstrap.sendAction('element:flick', params);\n};\n\ncommands.swipe = async function swipe (startX, startY, endX, endY, duration, touchCount, elId) {\n  if (startX === 'null') {\n    startX = 0.5;\n  }\n  if (startY === 'null') {\n    startY = 0.5;\n  }\n  let swipeOpts = {startX, startY, endX, endY,\n                   steps: Math.round(duration * swipeStepsPerSec)};\n  // going the long way and checking for undefined and null since\n  // we can't be assured `elId` is a string and not an int\n  if (util.hasValue(elId)) {\n    swipeOpts.elementId = elId;\n  }\n  return await this.doSwipe(swipeOpts);\n};\n\ncommands.doSwipe = async function doSwipe (swipeOpts) {\n  if (util.hasValue(swipeOpts.elementId)) {\n    return await this.bootstrap.sendAction('element:swipe', swipeOpts);\n  } else {\n    return await this.bootstrap.sendAction('swipe', swipeOpts);\n  }\n};\n\ncommands.pinchClose = async function pinchClose (startX, startY, endX, endY, duration, percent, steps, elId) {\n  let pinchOpts = {\n    direction: 'in',\n    elementId: elId,\n    percent,\n    steps\n  };\n  return await this.bootstrap.sendAction('element:pinch', pinchOpts);\n};\n\ncommands.pinchOpen = async function pinchOpen (startX, startY, endX, endY, duration, percent, steps, elId) {\n  let pinchOpts = {direction: 'out', elementId: elId, percent, steps};\n  return await this.bootstrap.sendAction('element:pinch', pinchOpts);\n};\n\ncommands.flick = async function flick (element, xSpeed, ySpeed, xOffset, yOffset, speed) {\n  if (element) {\n    await this.fakeFlickElement(element, xOffset, yOffset, speed);\n  } else {\n    await this.fakeFlick(xSpeed, ySpeed);\n  }\n};\n\ncommands.drag = async function drag (startX, startY, endX, endY, duration, touchCount, elementId, destElId) {\n  let dragOpts = {\n    elementId, destElId, startX, startY, endX, endY,\n    steps: Math.round(duration * dragStepsPerSec)\n  };\n  return await this.doDrag(dragOpts);\n\n};\n\ncommands.doDrag = async function doDrag (dragOpts) {\n  if (util.hasValue(dragOpts.elementId)) {\n    return await this.bootstrap.sendAction('element:drag', dragOpts);\n  } else {\n    return await this.bootstrap.sendAction('drag', dragOpts);\n  }\n};\n\ncommands.lock = async function lock (seconds) {\n  await this.adb.lock();\n  if (isNaN(seconds)) {\n    return;\n  }\n\n  const floatSeconds = parseFloat(seconds);\n  if (floatSeconds <= 0) {\n    return;\n  }\n  await B.delay(1000 * floatSeconds);\n  await this.unlock();\n};\n\ncommands.isLocked = async function isLocked () {\n  return await this.adb.isScreenLocked();\n};\n\ncommands.unlock = async function unlock () {\n  return await androidHelpers.unlock(this, this.adb, this.caps);\n};\n\ncommands.openNotifications = async function openNotifications () {\n  return await this.bootstrap.sendAction('openNotification');\n};\n\ncommands.setLocation = async function setLocation (latitude, longitude) {\n  return await this.adb.sendTelnetCommand(`geo fix ${longitude} ${latitude}`);\n};\n\ncommands.fingerprint = async function fingerprint (fingerprintId) {\n  if (!this.isEmulator()) {\n    this.log.errorAndThrow('fingerprint method is only available for emulators');\n  }\n  await this.adb.fingerprint(fingerprintId);\n};\n\ncommands.sendSMS = async function sendSMS (phoneNumber, message) {\n  if (!this.isEmulator()) {\n    this.log.errorAndThrow('sendSMS method is only available for emulators');\n  }\n  await this.adb.sendSMS(phoneNumber, message);\n};\n\ncommands.gsmCall = async function gsmCall (phoneNumber, action) {\n  if (!this.isEmulator()) {\n    this.log.errorAndThrow('gsmCall method is only available for emulators');\n  }\n  await this.adb.gsmCall(phoneNumber, action);\n};\n\ncommands.gsmSignal = async function gsmSignal (signalStrengh) {\n  if (!this.isEmulator()) {\n    this.log.errorAndThrow('gsmSignal method is only available for emulators');\n  }\n  await this.adb.gsmSignal(signalStrengh);\n};\n\ncommands.gsmVoice = async function gsmVoice (state) {\n  if (!this.isEmulator()) {\n    this.log.errorAndThrow('gsmVoice method is only available for emulators');\n  }\n  await this.adb.gsmVoice(state);\n};\n\ncommands.powerAC = async function powerAC (state) {\n  if (!this.isEmulator()) {\n    this.log.errorAndThrow('powerAC method is only available for emulators');\n  }\n  await this.adb.powerAC(state);\n};\n\ncommands.powerCapacity = async function powerCapacity (batteryPercent) {\n  if (!this.isEmulator()) {\n    this.log.errorAndThrow('powerCapacity method is only available for emulators');\n  }\n  await this.adb.powerCapacity(batteryPercent);\n};\n\ncommands.networkSpeed = async function networkSpeed (networkSpeed) {\n  if (!this.isEmulator()) {\n    this.log.errorAndThrow('networkSpeed method is only available for emulators');\n  }\n  await this.adb.networkSpeed(networkSpeed);\n};\n\n/**\n * Emulate sensors values on the connected emulator.\n *\n * @typedef {Object} Sensor\n * @property {string} sensorType - sensor type declared in adb.SENSORS\n * @property {string} value - value to set to the sensor\n *\n * @param {Object} Sensor\n * @throws {Error} - If sensorType is not defined\n * @throws {Error} - If value for the se sor is not defined\n * @throws {Error} - If deviceType is not an emulator\n */\ncommands.sensorSet = async function sensorSet (sensor = {}) {\n  const {sensorType, value} = sensor;\n  if (!util.hasValue(sensorType)) {\n    this.log.errorAndThrow(`'sensorType' argument is required`);\n  }\n  if (!util.hasValue(value)) {\n    this.log.errorAndThrow(`'value' argument is required`);\n  }\n  if (!this.isEmulator()) {\n    this.log.errorAndThrow('sensorSet method is only available for emulators');\n  }\n  await this.adb.sensorSet(sensorType, value);\n};\n\nhelpers.getScreenshotDataWithAdbShell = async function getScreenshotDataWithAdbShell (adb, opts) {\n  const localFile = await tempDir.path({prefix: 'appium', suffix: '.png'});\n  if (await fs.exists(localFile)) {\n    await fs.unlink(localFile);\n  }\n  try {\n    const pngDir = opts.androidScreenshotPath || '/data/local/tmp/';\n    const png = path.posix.resolve(pngDir, 'screenshot.png');\n    const cmd = ['/system/bin/rm', `${png};`, '/system/bin/screencap', '-p', png];\n    await adb.shell(cmd);\n    if (!await adb.fileSize(png)) {\n      throw new Error('The size of the taken screenshot equals to zero.');\n    }\n    await adb.pull(png, localFile);\n    return await jimp.read(localFile);\n  } finally {\n    if (await fs.exists(localFile)) {\n      await fs.unlink(localFile);\n    }\n  }\n};\n\nhelpers.getScreenshotDataWithAdbExecOut = async function getScreenshotDataWithAdbExecOut (adb) {\n  let {stdout, stderr, code} = await exec(adb.executable.path,\n                                    adb.executable.defaultArgs\n                                      .concat(['exec-out', '/system/bin/screencap', '-p']),\n                                    {encoding: 'binary', isBuffer: true});\n  // if there is an error, throw\n  if (code || stderr.length) {\n    throw new Error(`Screenshot returned error, code: '${code}', stderr: '${stderr.toString()}'`);\n  }\n  // if we don't get anything at all, throw\n  if (!stdout.length) {\n    throw new Error('Screenshot returned no data');\n  }\n\n  return await jimp.read(stdout);\n};\n\ncommands.getScreenshot = async function getScreenshot () {\n  const apiLevel = await this.adb.getApiLevel();\n  let image = null;\n  if (apiLevel > 20) {\n    try {\n      // This screenshoting approach is way faster, since it requires less external commands\n      // to be executed. Unfortunately, exec-out option is only supported by newer Android/SDK versions (5.0 and later)\n      image = await this.getScreenshotDataWithAdbExecOut(this.adb);\n    } catch (e) {\n      this.log.info(`Cannot get screenshot data with 'adb exec-out' because of '${e.message}'. ` +\n        `Defaulting to 'adb shell' call`);\n    }\n  }\n  if (!image) {\n    try {\n      image = await this.getScreenshotDataWithAdbShell(this.adb, this.opts);\n    } catch (e) {\n      const err = `Cannot get screenshot data because of '${e.message}'. ` +\n        `Make sure the 'LayoutParams.FLAG_SECURE' is not set for ` +\n        `the current view`;\n      this.log.errorAndThrow(err);\n    }\n  }\n  if (apiLevel < 23) {\n    // Android bug 8433742 - rotate screenshot if screen is rotated\n    let screenOrientation = await this.adb.getScreenOrientation();\n    try {\n      image = await image.rotate(-90 * screenOrientation);\n    } catch (err) {\n      this.log.warn(`Could not rotate screenshot due to error: ${err}`);\n    }\n  }\n  const getBuffer = B.promisify(image.getBuffer, {context: image});\n  const imgBuffer = await getBuffer(jimp.MIME_PNG);\n  return imgBuffer.toString('base64');\n};\n\nObject.assign(extensions, commands, helpers);\nexport { commands, helpers };\nexport default extensions;\n"],"mappings":"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"}